ARM GAS  /tmp/ccZax68S.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f10x_dac.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "./FWLIB/src/stm32f10x_dac.c"
  18              		.section	.text.DAC_DeInit,"ax",%progbits
  19              		.align	1
  20              		.global	DAC_DeInit
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	DAC_DeInit:
  26              	.LFB29:
   1:./FWLIB/src/stm32f10x_dac.c **** /**
   2:./FWLIB/src/stm32f10x_dac.c ****   ******************************************************************************
   3:./FWLIB/src/stm32f10x_dac.c ****   * @file    stm32f10x_dac.c
   4:./FWLIB/src/stm32f10x_dac.c ****   * @author  MCD Application Team
   5:./FWLIB/src/stm32f10x_dac.c ****   * @version V3.5.0
   6:./FWLIB/src/stm32f10x_dac.c ****   * @date    11-March-2011
   7:./FWLIB/src/stm32f10x_dac.c ****   * @brief   This file provides all the DAC firmware functions.
   8:./FWLIB/src/stm32f10x_dac.c ****   ******************************************************************************
   9:./FWLIB/src/stm32f10x_dac.c ****   * @attention
  10:./FWLIB/src/stm32f10x_dac.c ****   *
  11:./FWLIB/src/stm32f10x_dac.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  12:./FWLIB/src/stm32f10x_dac.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  13:./FWLIB/src/stm32f10x_dac.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  14:./FWLIB/src/stm32f10x_dac.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  15:./FWLIB/src/stm32f10x_dac.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  16:./FWLIB/src/stm32f10x_dac.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  17:./FWLIB/src/stm32f10x_dac.c ****   *
  18:./FWLIB/src/stm32f10x_dac.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
  19:./FWLIB/src/stm32f10x_dac.c ****   ******************************************************************************
  20:./FWLIB/src/stm32f10x_dac.c ****   */
  21:./FWLIB/src/stm32f10x_dac.c **** 
  22:./FWLIB/src/stm32f10x_dac.c **** /* Includes ------------------------------------------------------------------*/
  23:./FWLIB/src/stm32f10x_dac.c **** #include "stm32f10x_dac.h"
  24:./FWLIB/src/stm32f10x_dac.c **** #include "stm32f10x_rcc.h"
  25:./FWLIB/src/stm32f10x_dac.c **** 
  26:./FWLIB/src/stm32f10x_dac.c **** /** @addtogroup STM32F10x_StdPeriph_Driver
  27:./FWLIB/src/stm32f10x_dac.c ****   * @{
  28:./FWLIB/src/stm32f10x_dac.c ****   */
  29:./FWLIB/src/stm32f10x_dac.c **** 
  30:./FWLIB/src/stm32f10x_dac.c **** /** @defgroup DAC 
  31:./FWLIB/src/stm32f10x_dac.c ****   * @brief DAC driver modules
  32:./FWLIB/src/stm32f10x_dac.c ****   * @{
ARM GAS  /tmp/ccZax68S.s 			page 2


  33:./FWLIB/src/stm32f10x_dac.c ****   */ 
  34:./FWLIB/src/stm32f10x_dac.c **** 
  35:./FWLIB/src/stm32f10x_dac.c **** /** @defgroup DAC_Private_TypesDefinitions
  36:./FWLIB/src/stm32f10x_dac.c ****   * @{
  37:./FWLIB/src/stm32f10x_dac.c ****   */
  38:./FWLIB/src/stm32f10x_dac.c **** 
  39:./FWLIB/src/stm32f10x_dac.c **** /**
  40:./FWLIB/src/stm32f10x_dac.c ****   * @}
  41:./FWLIB/src/stm32f10x_dac.c ****   */
  42:./FWLIB/src/stm32f10x_dac.c **** 
  43:./FWLIB/src/stm32f10x_dac.c **** /** @defgroup DAC_Private_Defines
  44:./FWLIB/src/stm32f10x_dac.c ****   * @{
  45:./FWLIB/src/stm32f10x_dac.c ****   */
  46:./FWLIB/src/stm32f10x_dac.c **** 
  47:./FWLIB/src/stm32f10x_dac.c **** /* CR register Mask */
  48:./FWLIB/src/stm32f10x_dac.c **** #define CR_CLEAR_MASK              ((uint32_t)0x00000FFE)
  49:./FWLIB/src/stm32f10x_dac.c **** 
  50:./FWLIB/src/stm32f10x_dac.c **** /* DAC Dual Channels SWTRIG masks */
  51:./FWLIB/src/stm32f10x_dac.c **** #define DUAL_SWTRIG_SET            ((uint32_t)0x00000003)
  52:./FWLIB/src/stm32f10x_dac.c **** #define DUAL_SWTRIG_RESET          ((uint32_t)0xFFFFFFFC)
  53:./FWLIB/src/stm32f10x_dac.c **** 
  54:./FWLIB/src/stm32f10x_dac.c **** /* DHR registers offsets */
  55:./FWLIB/src/stm32f10x_dac.c **** #define DHR12R1_OFFSET             ((uint32_t)0x00000008)
  56:./FWLIB/src/stm32f10x_dac.c **** #define DHR12R2_OFFSET             ((uint32_t)0x00000014)
  57:./FWLIB/src/stm32f10x_dac.c **** #define DHR12RD_OFFSET             ((uint32_t)0x00000020)
  58:./FWLIB/src/stm32f10x_dac.c **** 
  59:./FWLIB/src/stm32f10x_dac.c **** /* DOR register offset */
  60:./FWLIB/src/stm32f10x_dac.c **** #define DOR_OFFSET                 ((uint32_t)0x0000002C)
  61:./FWLIB/src/stm32f10x_dac.c **** /**
  62:./FWLIB/src/stm32f10x_dac.c ****   * @}
  63:./FWLIB/src/stm32f10x_dac.c ****   */
  64:./FWLIB/src/stm32f10x_dac.c **** 
  65:./FWLIB/src/stm32f10x_dac.c **** /** @defgroup DAC_Private_Macros
  66:./FWLIB/src/stm32f10x_dac.c ****   * @{
  67:./FWLIB/src/stm32f10x_dac.c ****   */
  68:./FWLIB/src/stm32f10x_dac.c **** 
  69:./FWLIB/src/stm32f10x_dac.c **** /**
  70:./FWLIB/src/stm32f10x_dac.c ****   * @}
  71:./FWLIB/src/stm32f10x_dac.c ****   */
  72:./FWLIB/src/stm32f10x_dac.c **** 
  73:./FWLIB/src/stm32f10x_dac.c **** /** @defgroup DAC_Private_Variables
  74:./FWLIB/src/stm32f10x_dac.c ****   * @{
  75:./FWLIB/src/stm32f10x_dac.c ****   */
  76:./FWLIB/src/stm32f10x_dac.c **** 
  77:./FWLIB/src/stm32f10x_dac.c **** /**
  78:./FWLIB/src/stm32f10x_dac.c ****   * @}
  79:./FWLIB/src/stm32f10x_dac.c ****   */
  80:./FWLIB/src/stm32f10x_dac.c **** 
  81:./FWLIB/src/stm32f10x_dac.c **** /** @defgroup DAC_Private_FunctionPrototypes
  82:./FWLIB/src/stm32f10x_dac.c ****   * @{
  83:./FWLIB/src/stm32f10x_dac.c ****   */
  84:./FWLIB/src/stm32f10x_dac.c **** 
  85:./FWLIB/src/stm32f10x_dac.c **** /**
  86:./FWLIB/src/stm32f10x_dac.c ****   * @}
  87:./FWLIB/src/stm32f10x_dac.c ****   */
  88:./FWLIB/src/stm32f10x_dac.c **** 
  89:./FWLIB/src/stm32f10x_dac.c **** /** @defgroup DAC_Private_Functions
ARM GAS  /tmp/ccZax68S.s 			page 3


  90:./FWLIB/src/stm32f10x_dac.c ****   * @{
  91:./FWLIB/src/stm32f10x_dac.c ****   */
  92:./FWLIB/src/stm32f10x_dac.c **** 
  93:./FWLIB/src/stm32f10x_dac.c **** /**
  94:./FWLIB/src/stm32f10x_dac.c ****   * @brief  Deinitializes the DAC peripheral registers to their default reset values.
  95:./FWLIB/src/stm32f10x_dac.c ****   * @param  None
  96:./FWLIB/src/stm32f10x_dac.c ****   * @retval None
  97:./FWLIB/src/stm32f10x_dac.c ****   */
  98:./FWLIB/src/stm32f10x_dac.c **** void DAC_DeInit(void)
  99:./FWLIB/src/stm32f10x_dac.c **** {
  27              		.loc 1 99 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 08B5     		push	{r3, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 3, -8
  35              		.cfi_offset 14, -4
 100:./FWLIB/src/stm32f10x_dac.c ****   /* Enable DAC reset state */
 101:./FWLIB/src/stm32f10x_dac.c ****   RCC_APB1PeriphResetCmd(RCC_APB1Periph_DAC, ENABLE);
  36              		.loc 1 101 3 view .LVU1
  37 0002 0121     		movs	r1, #1
  38 0004 4FF00050 		mov	r0, #536870912
  39 0008 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
  40              	.LVL0:
 102:./FWLIB/src/stm32f10x_dac.c ****   /* Release DAC from reset state */
 103:./FWLIB/src/stm32f10x_dac.c ****   RCC_APB1PeriphResetCmd(RCC_APB1Periph_DAC, DISABLE);
  41              		.loc 1 103 3 view .LVU2
  42 000c 0021     		movs	r1, #0
  43 000e 4FF00050 		mov	r0, #536870912
  44 0012 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
  45              	.LVL1:
 104:./FWLIB/src/stm32f10x_dac.c **** }
  46              		.loc 1 104 1 is_stmt 0 view .LVU3
  47 0016 08BD     		pop	{r3, pc}
  48              		.cfi_endproc
  49              	.LFE29:
  51              		.section	.text.DAC_Init,"ax",%progbits
  52              		.align	1
  53              		.global	DAC_Init
  54              		.syntax unified
  55              		.thumb
  56              		.thumb_func
  58              	DAC_Init:
  59              	.LVL2:
  60              	.LFB30:
 105:./FWLIB/src/stm32f10x_dac.c **** 
 106:./FWLIB/src/stm32f10x_dac.c **** /**
 107:./FWLIB/src/stm32f10x_dac.c ****   * @brief  Initializes the DAC peripheral according to the specified 
 108:./FWLIB/src/stm32f10x_dac.c ****   *         parameters in the DAC_InitStruct.
 109:./FWLIB/src/stm32f10x_dac.c ****   * @param  DAC_Channel: the selected DAC channel. 
 110:./FWLIB/src/stm32f10x_dac.c ****   *   This parameter can be one of the following values:
 111:./FWLIB/src/stm32f10x_dac.c ****   *     @arg DAC_Channel_1: DAC Channel1 selected
 112:./FWLIB/src/stm32f10x_dac.c ****   *     @arg DAC_Channel_2: DAC Channel2 selected
 113:./FWLIB/src/stm32f10x_dac.c ****   * @param  DAC_InitStruct: pointer to a DAC_InitTypeDef structure that
 114:./FWLIB/src/stm32f10x_dac.c ****   *        contains the configuration information for the specified DAC channel.
ARM GAS  /tmp/ccZax68S.s 			page 4


 115:./FWLIB/src/stm32f10x_dac.c ****   * @retval None
 116:./FWLIB/src/stm32f10x_dac.c ****   */
 117:./FWLIB/src/stm32f10x_dac.c **** void DAC_Init(uint32_t DAC_Channel, DAC_InitTypeDef* DAC_InitStruct)
 118:./FWLIB/src/stm32f10x_dac.c **** {
  61              		.loc 1 118 1 is_stmt 1 view -0
  62              		.cfi_startproc
  63              		@ args = 0, pretend = 0, frame = 0
  64              		@ frame_needed = 0, uses_anonymous_args = 0
  65              		@ link register save eliminated.
  66              		.loc 1 118 1 is_stmt 0 view .LVU5
  67 0000 30B4     		push	{r4, r5}
  68              	.LCFI1:
  69              		.cfi_def_cfa_offset 8
  70              		.cfi_offset 4, -8
  71              		.cfi_offset 5, -4
 119:./FWLIB/src/stm32f10x_dac.c ****   uint32_t tmpreg1 = 0, tmpreg2 = 0;
  72              		.loc 1 119 3 is_stmt 1 view .LVU6
  73              	.LVL3:
 120:./FWLIB/src/stm32f10x_dac.c ****   /* Check the DAC parameters */
 121:./FWLIB/src/stm32f10x_dac.c ****   assert_param(IS_DAC_TRIGGER(DAC_InitStruct->DAC_Trigger));
  74              		.loc 1 121 3 view .LVU7
 122:./FWLIB/src/stm32f10x_dac.c ****   assert_param(IS_DAC_GENERATE_WAVE(DAC_InitStruct->DAC_WaveGeneration));
  75              		.loc 1 122 3 view .LVU8
 123:./FWLIB/src/stm32f10x_dac.c ****   assert_param(IS_DAC_LFSR_UNMASK_TRIANGLE_AMPLITUDE(DAC_InitStruct->DAC_LFSRUnmask_TriangleAmplitu
  76              		.loc 1 123 3 view .LVU9
 124:./FWLIB/src/stm32f10x_dac.c ****   assert_param(IS_DAC_OUTPUT_BUFFER_STATE(DAC_InitStruct->DAC_OutputBuffer));
  77              		.loc 1 124 3 view .LVU10
 125:./FWLIB/src/stm32f10x_dac.c **** /*---------------------------- DAC CR Configuration --------------------------*/
 126:./FWLIB/src/stm32f10x_dac.c ****   /* Get the DAC CR value */
 127:./FWLIB/src/stm32f10x_dac.c ****   tmpreg1 = DAC->CR;
  78              		.loc 1 127 3 view .LVU11
  79              		.loc 1 127 11 is_stmt 0 view .LVU12
  80 0002 094C     		ldr	r4, .L5
  81 0004 2268     		ldr	r2, [r4]
  82              	.LVL4:
 128:./FWLIB/src/stm32f10x_dac.c ****   /* Clear BOFFx, TENx, TSELx, WAVEx and MAMPx bits */
 129:./FWLIB/src/stm32f10x_dac.c ****   tmpreg1 &= ~(CR_CLEAR_MASK << DAC_Channel);
  83              		.loc 1 129 3 is_stmt 1 view .LVU13
  84              		.loc 1 129 30 is_stmt 0 view .LVU14
  85 0006 40F6FE73 		movw	r3, #4094
  86 000a 8340     		lsls	r3, r3, r0
  87              		.loc 1 129 11 view .LVU15
  88 000c 22EA0302 		bic	r2, r2, r3
  89              	.LVL5:
 130:./FWLIB/src/stm32f10x_dac.c ****   /* Configure for the selected DAC channel: buffer output, trigger, wave generation,
 131:./FWLIB/src/stm32f10x_dac.c ****      mask/amplitude for wave generation */
 132:./FWLIB/src/stm32f10x_dac.c ****   /* Set TSELx and TENx bits according to DAC_Trigger value */
 133:./FWLIB/src/stm32f10x_dac.c ****   /* Set WAVEx bits according to DAC_WaveGeneration value */
 134:./FWLIB/src/stm32f10x_dac.c ****   /* Set MAMPx bits according to DAC_LFSRUnmask_TriangleAmplitude value */ 
 135:./FWLIB/src/stm32f10x_dac.c ****   /* Set BOFFx bit according to DAC_OutputBuffer value */   
 136:./FWLIB/src/stm32f10x_dac.c ****   tmpreg2 = (DAC_InitStruct->DAC_Trigger | DAC_InitStruct->DAC_WaveGeneration |
  90              		.loc 1 136 3 is_stmt 1 view .LVU16
  91              		.loc 1 136 28 is_stmt 0 view .LVU17
  92 0010 0B68     		ldr	r3, [r1]
  93              		.loc 1 136 42 view .LVU18
  94 0012 4D68     		ldr	r5, [r1, #4]
  95 0014 2B43     		orrs	r3, r3, r5
ARM GAS  /tmp/ccZax68S.s 			page 5


  96              		.loc 1 136 79 view .LVU19
  97 0016 8D68     		ldr	r5, [r1, #8]
  98 0018 2B43     		orrs	r3, r3, r5
 137:./FWLIB/src/stm32f10x_dac.c ****              DAC_InitStruct->DAC_LFSRUnmask_TriangleAmplitude | DAC_InitStruct->DAC_OutputBuffer);
  99              		.loc 1 137 79 view .LVU20
 100 001a C968     		ldr	r1, [r1, #12]
 101              	.LVL6:
 136:./FWLIB/src/stm32f10x_dac.c ****              DAC_InitStruct->DAC_LFSRUnmask_TriangleAmplitude | DAC_InitStruct->DAC_OutputBuffer);
 102              		.loc 1 136 11 view .LVU21
 103 001c 0B43     		orrs	r3, r3, r1
 104              	.LVL7:
 138:./FWLIB/src/stm32f10x_dac.c ****   /* Calculate CR register value depending on DAC_Channel */
 139:./FWLIB/src/stm32f10x_dac.c ****   tmpreg1 |= tmpreg2 << DAC_Channel;
 105              		.loc 1 139 3 is_stmt 1 view .LVU22
 106              		.loc 1 139 22 is_stmt 0 view .LVU23
 107 001e 8340     		lsls	r3, r3, r0
 108              	.LVL8:
 109              		.loc 1 139 11 view .LVU24
 110 0020 1343     		orrs	r3, r3, r2
 111              	.LVL9:
 140:./FWLIB/src/stm32f10x_dac.c ****   /* Write to DAC CR */
 141:./FWLIB/src/stm32f10x_dac.c ****   DAC->CR = tmpreg1;
 112              		.loc 1 141 3 is_stmt 1 view .LVU25
 113              		.loc 1 141 11 is_stmt 0 view .LVU26
 114 0022 2360     		str	r3, [r4]
 115              	.LVL10:
 142:./FWLIB/src/stm32f10x_dac.c **** }
 116              		.loc 1 142 1 view .LVU27
 117 0024 30BC     		pop	{r4, r5}
 118              	.LCFI2:
 119              		.cfi_restore 5
 120              		.cfi_restore 4
 121              		.cfi_def_cfa_offset 0
 122 0026 7047     		bx	lr
 123              	.L6:
 124              		.align	2
 125              	.L5:
 126 0028 00740040 		.word	1073771520
 127              		.cfi_endproc
 128              	.LFE30:
 130              		.section	.text.DAC_StructInit,"ax",%progbits
 131              		.align	1
 132              		.global	DAC_StructInit
 133              		.syntax unified
 134              		.thumb
 135              		.thumb_func
 137              	DAC_StructInit:
 138              	.LVL11:
 139              	.LFB31:
 143:./FWLIB/src/stm32f10x_dac.c **** 
 144:./FWLIB/src/stm32f10x_dac.c **** /**
 145:./FWLIB/src/stm32f10x_dac.c ****   * @brief  Fills each DAC_InitStruct member with its default value.
 146:./FWLIB/src/stm32f10x_dac.c ****   * @param  DAC_InitStruct : pointer to a DAC_InitTypeDef structure which will
 147:./FWLIB/src/stm32f10x_dac.c ****   *         be initialized.
 148:./FWLIB/src/stm32f10x_dac.c ****   * @retval None
 149:./FWLIB/src/stm32f10x_dac.c ****   */
 150:./FWLIB/src/stm32f10x_dac.c **** void DAC_StructInit(DAC_InitTypeDef* DAC_InitStruct)
ARM GAS  /tmp/ccZax68S.s 			page 6


 151:./FWLIB/src/stm32f10x_dac.c **** {
 140              		.loc 1 151 1 is_stmt 1 view -0
 141              		.cfi_startproc
 142              		@ args = 0, pretend = 0, frame = 0
 143              		@ frame_needed = 0, uses_anonymous_args = 0
 144              		@ link register save eliminated.
 152:./FWLIB/src/stm32f10x_dac.c **** /*--------------- Reset DAC init structure parameters values -----------------*/
 153:./FWLIB/src/stm32f10x_dac.c ****   /* Initialize the DAC_Trigger member */
 154:./FWLIB/src/stm32f10x_dac.c ****   DAC_InitStruct->DAC_Trigger = DAC_Trigger_None;
 145              		.loc 1 154 3 view .LVU29
 146              		.loc 1 154 31 is_stmt 0 view .LVU30
 147 0000 0023     		movs	r3, #0
 148 0002 0360     		str	r3, [r0]
 155:./FWLIB/src/stm32f10x_dac.c ****   /* Initialize the DAC_WaveGeneration member */
 156:./FWLIB/src/stm32f10x_dac.c ****   DAC_InitStruct->DAC_WaveGeneration = DAC_WaveGeneration_None;
 149              		.loc 1 156 3 is_stmt 1 view .LVU31
 150              		.loc 1 156 38 is_stmt 0 view .LVU32
 151 0004 4360     		str	r3, [r0, #4]
 157:./FWLIB/src/stm32f10x_dac.c ****   /* Initialize the DAC_LFSRUnmask_TriangleAmplitude member */
 158:./FWLIB/src/stm32f10x_dac.c ****   DAC_InitStruct->DAC_LFSRUnmask_TriangleAmplitude = DAC_LFSRUnmask_Bit0;
 152              		.loc 1 158 3 is_stmt 1 view .LVU33
 153              		.loc 1 158 52 is_stmt 0 view .LVU34
 154 0006 8360     		str	r3, [r0, #8]
 159:./FWLIB/src/stm32f10x_dac.c ****   /* Initialize the DAC_OutputBuffer member */
 160:./FWLIB/src/stm32f10x_dac.c ****   DAC_InitStruct->DAC_OutputBuffer = DAC_OutputBuffer_Enable;
 155              		.loc 1 160 3 is_stmt 1 view .LVU35
 156              		.loc 1 160 36 is_stmt 0 view .LVU36
 157 0008 C360     		str	r3, [r0, #12]
 161:./FWLIB/src/stm32f10x_dac.c **** }
 158              		.loc 1 161 1 view .LVU37
 159 000a 7047     		bx	lr
 160              		.cfi_endproc
 161              	.LFE31:
 163              		.section	.text.DAC_Cmd,"ax",%progbits
 164              		.align	1
 165              		.global	DAC_Cmd
 166              		.syntax unified
 167              		.thumb
 168              		.thumb_func
 170              	DAC_Cmd:
 171              	.LVL12:
 172              	.LFB32:
 162:./FWLIB/src/stm32f10x_dac.c **** 
 163:./FWLIB/src/stm32f10x_dac.c **** /**
 164:./FWLIB/src/stm32f10x_dac.c ****   * @brief  Enables or disables the specified DAC channel.
 165:./FWLIB/src/stm32f10x_dac.c ****   * @param  DAC_Channel: the selected DAC channel. 
 166:./FWLIB/src/stm32f10x_dac.c ****   *   This parameter can be one of the following values:
 167:./FWLIB/src/stm32f10x_dac.c ****   *     @arg DAC_Channel_1: DAC Channel1 selected
 168:./FWLIB/src/stm32f10x_dac.c ****   *     @arg DAC_Channel_2: DAC Channel2 selected
 169:./FWLIB/src/stm32f10x_dac.c ****   * @param  NewState: new state of the DAC channel. 
 170:./FWLIB/src/stm32f10x_dac.c ****   *   This parameter can be: ENABLE or DISABLE.
 171:./FWLIB/src/stm32f10x_dac.c ****   * @retval None
 172:./FWLIB/src/stm32f10x_dac.c ****   */
 173:./FWLIB/src/stm32f10x_dac.c **** void DAC_Cmd(uint32_t DAC_Channel, FunctionalState NewState)
 174:./FWLIB/src/stm32f10x_dac.c **** {
 173              		.loc 1 174 1 is_stmt 1 view -0
 174              		.cfi_startproc
ARM GAS  /tmp/ccZax68S.s 			page 7


 175              		@ args = 0, pretend = 0, frame = 0
 176              		@ frame_needed = 0, uses_anonymous_args = 0
 177              		@ link register save eliminated.
 175:./FWLIB/src/stm32f10x_dac.c ****   /* Check the parameters */
 176:./FWLIB/src/stm32f10x_dac.c ****   assert_param(IS_DAC_CHANNEL(DAC_Channel));
 178              		.loc 1 176 3 view .LVU39
 177:./FWLIB/src/stm32f10x_dac.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 179              		.loc 1 177 3 view .LVU40
 178:./FWLIB/src/stm32f10x_dac.c ****   if (NewState != DISABLE)
 180              		.loc 1 178 3 view .LVU41
 181              		.loc 1 178 6 is_stmt 0 view .LVU42
 182 0000 31B1     		cbz	r1, .L9
 179:./FWLIB/src/stm32f10x_dac.c ****   {
 180:./FWLIB/src/stm32f10x_dac.c ****     /* Enable the selected DAC channel */
 181:./FWLIB/src/stm32f10x_dac.c ****     DAC->CR |= (DAC_CR_EN1 << DAC_Channel);
 183              		.loc 1 181 5 is_stmt 1 view .LVU43
 184              		.loc 1 181 8 is_stmt 0 view .LVU44
 185 0002 0749     		ldr	r1, .L11
 186              	.LVL13:
 187              		.loc 1 181 8 view .LVU45
 188 0004 0B68     		ldr	r3, [r1]
 189              		.loc 1 181 28 view .LVU46
 190 0006 0122     		movs	r2, #1
 191 0008 8240     		lsls	r2, r2, r0
 192              		.loc 1 181 13 view .LVU47
 193 000a 1343     		orrs	r3, r3, r2
 194 000c 0B60     		str	r3, [r1]
 195 000e 7047     		bx	lr
 196              	.LVL14:
 197              	.L9:
 182:./FWLIB/src/stm32f10x_dac.c ****   }
 183:./FWLIB/src/stm32f10x_dac.c ****   else
 184:./FWLIB/src/stm32f10x_dac.c ****   {
 185:./FWLIB/src/stm32f10x_dac.c ****     /* Disable the selected DAC channel */
 186:./FWLIB/src/stm32f10x_dac.c ****     DAC->CR &= ~(DAC_CR_EN1 << DAC_Channel);
 198              		.loc 1 186 5 is_stmt 1 view .LVU48
 199              		.loc 1 186 8 is_stmt 0 view .LVU49
 200 0010 0349     		ldr	r1, .L11
 201              	.LVL15:
 202              		.loc 1 186 8 view .LVU50
 203 0012 0B68     		ldr	r3, [r1]
 204              		.loc 1 186 29 view .LVU51
 205 0014 0122     		movs	r2, #1
 206 0016 8240     		lsls	r2, r2, r0
 207              		.loc 1 186 13 view .LVU52
 208 0018 23EA0203 		bic	r3, r3, r2
 209 001c 0B60     		str	r3, [r1]
 187:./FWLIB/src/stm32f10x_dac.c ****   }
 188:./FWLIB/src/stm32f10x_dac.c **** }
 210              		.loc 1 188 1 view .LVU53
 211 001e 7047     		bx	lr
 212              	.L12:
 213              		.align	2
 214              	.L11:
 215 0020 00740040 		.word	1073771520
 216              		.cfi_endproc
 217              	.LFE32:
ARM GAS  /tmp/ccZax68S.s 			page 8


 219              		.section	.text.DAC_DMACmd,"ax",%progbits
 220              		.align	1
 221              		.global	DAC_DMACmd
 222              		.syntax unified
 223              		.thumb
 224              		.thumb_func
 226              	DAC_DMACmd:
 227              	.LVL16:
 228              	.LFB33:
 189:./FWLIB/src/stm32f10x_dac.c **** #if defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || defined (STM32F10X_HD_VL)
 190:./FWLIB/src/stm32f10x_dac.c **** /**
 191:./FWLIB/src/stm32f10x_dac.c ****   * @brief  Enables or disables the specified DAC interrupts.
 192:./FWLIB/src/stm32f10x_dac.c ****   * @param  DAC_Channel: the selected DAC channel. 
 193:./FWLIB/src/stm32f10x_dac.c ****   *   This parameter can be one of the following values:
 194:./FWLIB/src/stm32f10x_dac.c ****   *     @arg DAC_Channel_1: DAC Channel1 selected
 195:./FWLIB/src/stm32f10x_dac.c ****   *     @arg DAC_Channel_2: DAC Channel2 selected
 196:./FWLIB/src/stm32f10x_dac.c ****   * @param  DAC_IT: specifies the DAC interrupt sources to be enabled or disabled. 
 197:./FWLIB/src/stm32f10x_dac.c ****   *   This parameter can be the following values:
 198:./FWLIB/src/stm32f10x_dac.c ****   *     @arg DAC_IT_DMAUDR: DMA underrun interrupt mask                      
 199:./FWLIB/src/stm32f10x_dac.c ****   * @param  NewState: new state of the specified DAC interrupts.
 200:./FWLIB/src/stm32f10x_dac.c ****   *   This parameter can be: ENABLE or DISABLE.
 201:./FWLIB/src/stm32f10x_dac.c ****   * @retval None
 202:./FWLIB/src/stm32f10x_dac.c ****   */ 
 203:./FWLIB/src/stm32f10x_dac.c **** void DAC_ITConfig(uint32_t DAC_Channel, uint32_t DAC_IT, FunctionalState NewState)  
 204:./FWLIB/src/stm32f10x_dac.c **** {
 205:./FWLIB/src/stm32f10x_dac.c ****   /* Check the parameters */
 206:./FWLIB/src/stm32f10x_dac.c ****   assert_param(IS_DAC_CHANNEL(DAC_Channel));
 207:./FWLIB/src/stm32f10x_dac.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 208:./FWLIB/src/stm32f10x_dac.c ****   assert_param(IS_DAC_IT(DAC_IT)); 
 209:./FWLIB/src/stm32f10x_dac.c **** 
 210:./FWLIB/src/stm32f10x_dac.c ****   if (NewState != DISABLE)
 211:./FWLIB/src/stm32f10x_dac.c ****   {
 212:./FWLIB/src/stm32f10x_dac.c ****     /* Enable the selected DAC interrupts */
 213:./FWLIB/src/stm32f10x_dac.c ****     DAC->CR |=  (DAC_IT << DAC_Channel);
 214:./FWLIB/src/stm32f10x_dac.c ****   }
 215:./FWLIB/src/stm32f10x_dac.c ****   else
 216:./FWLIB/src/stm32f10x_dac.c ****   {
 217:./FWLIB/src/stm32f10x_dac.c ****     /* Disable the selected DAC interrupts */
 218:./FWLIB/src/stm32f10x_dac.c ****     DAC->CR &= (~(uint32_t)(DAC_IT << DAC_Channel));
 219:./FWLIB/src/stm32f10x_dac.c ****   }
 220:./FWLIB/src/stm32f10x_dac.c **** }
 221:./FWLIB/src/stm32f10x_dac.c **** #endif
 222:./FWLIB/src/stm32f10x_dac.c **** 
 223:./FWLIB/src/stm32f10x_dac.c **** /**
 224:./FWLIB/src/stm32f10x_dac.c ****   * @brief  Enables or disables the specified DAC channel DMA request.
 225:./FWLIB/src/stm32f10x_dac.c ****   * @param  DAC_Channel: the selected DAC channel. 
 226:./FWLIB/src/stm32f10x_dac.c ****   *   This parameter can be one of the following values:
 227:./FWLIB/src/stm32f10x_dac.c ****   *     @arg DAC_Channel_1: DAC Channel1 selected
 228:./FWLIB/src/stm32f10x_dac.c ****   *     @arg DAC_Channel_2: DAC Channel2 selected
 229:./FWLIB/src/stm32f10x_dac.c ****   * @param  NewState: new state of the selected DAC channel DMA request.
 230:./FWLIB/src/stm32f10x_dac.c ****   *   This parameter can be: ENABLE or DISABLE.
 231:./FWLIB/src/stm32f10x_dac.c ****   * @retval None
 232:./FWLIB/src/stm32f10x_dac.c ****   */
 233:./FWLIB/src/stm32f10x_dac.c **** void DAC_DMACmd(uint32_t DAC_Channel, FunctionalState NewState)
 234:./FWLIB/src/stm32f10x_dac.c **** {
 229              		.loc 1 234 1 is_stmt 1 view -0
 230              		.cfi_startproc
ARM GAS  /tmp/ccZax68S.s 			page 9


 231              		@ args = 0, pretend = 0, frame = 0
 232              		@ frame_needed = 0, uses_anonymous_args = 0
 233              		@ link register save eliminated.
 235:./FWLIB/src/stm32f10x_dac.c ****   /* Check the parameters */
 236:./FWLIB/src/stm32f10x_dac.c ****   assert_param(IS_DAC_CHANNEL(DAC_Channel));
 234              		.loc 1 236 3 view .LVU55
 237:./FWLIB/src/stm32f10x_dac.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 235              		.loc 1 237 3 view .LVU56
 238:./FWLIB/src/stm32f10x_dac.c ****   if (NewState != DISABLE)
 236              		.loc 1 238 3 view .LVU57
 237              		.loc 1 238 6 is_stmt 0 view .LVU58
 238 0000 39B1     		cbz	r1, .L14
 239:./FWLIB/src/stm32f10x_dac.c ****   {
 240:./FWLIB/src/stm32f10x_dac.c ****     /* Enable the selected DAC channel DMA request */
 241:./FWLIB/src/stm32f10x_dac.c ****     DAC->CR |= (DAC_CR_DMAEN1 << DAC_Channel);
 239              		.loc 1 241 5 is_stmt 1 view .LVU59
 240              		.loc 1 241 8 is_stmt 0 view .LVU60
 241 0002 0849     		ldr	r1, .L16
 242              	.LVL17:
 243              		.loc 1 241 8 view .LVU61
 244 0004 0B68     		ldr	r3, [r1]
 245              		.loc 1 241 31 view .LVU62
 246 0006 4FF48052 		mov	r2, #4096
 247 000a 8240     		lsls	r2, r2, r0
 248              		.loc 1 241 13 view .LVU63
 249 000c 1343     		orrs	r3, r3, r2
 250 000e 0B60     		str	r3, [r1]
 251 0010 7047     		bx	lr
 252              	.LVL18:
 253              	.L14:
 242:./FWLIB/src/stm32f10x_dac.c ****   }
 243:./FWLIB/src/stm32f10x_dac.c ****   else
 244:./FWLIB/src/stm32f10x_dac.c ****   {
 245:./FWLIB/src/stm32f10x_dac.c ****     /* Disable the selected DAC channel DMA request */
 246:./FWLIB/src/stm32f10x_dac.c ****     DAC->CR &= ~(DAC_CR_DMAEN1 << DAC_Channel);
 254              		.loc 1 246 5 is_stmt 1 view .LVU64
 255              		.loc 1 246 8 is_stmt 0 view .LVU65
 256 0012 0449     		ldr	r1, .L16
 257              	.LVL19:
 258              		.loc 1 246 8 view .LVU66
 259 0014 0B68     		ldr	r3, [r1]
 260              		.loc 1 246 32 view .LVU67
 261 0016 4FF48052 		mov	r2, #4096
 262 001a 8240     		lsls	r2, r2, r0
 263              		.loc 1 246 13 view .LVU68
 264 001c 23EA0203 		bic	r3, r3, r2
 265 0020 0B60     		str	r3, [r1]
 247:./FWLIB/src/stm32f10x_dac.c ****   }
 248:./FWLIB/src/stm32f10x_dac.c **** }
 266              		.loc 1 248 1 view .LVU69
 267 0022 7047     		bx	lr
 268              	.L17:
 269              		.align	2
 270              	.L16:
 271 0024 00740040 		.word	1073771520
 272              		.cfi_endproc
 273              	.LFE33:
ARM GAS  /tmp/ccZax68S.s 			page 10


 275              		.section	.text.DAC_SoftwareTriggerCmd,"ax",%progbits
 276              		.align	1
 277              		.global	DAC_SoftwareTriggerCmd
 278              		.syntax unified
 279              		.thumb
 280              		.thumb_func
 282              	DAC_SoftwareTriggerCmd:
 283              	.LVL20:
 284              	.LFB34:
 249:./FWLIB/src/stm32f10x_dac.c **** 
 250:./FWLIB/src/stm32f10x_dac.c **** /**
 251:./FWLIB/src/stm32f10x_dac.c ****   * @brief  Enables or disables the selected DAC channel software trigger.
 252:./FWLIB/src/stm32f10x_dac.c ****   * @param  DAC_Channel: the selected DAC channel. 
 253:./FWLIB/src/stm32f10x_dac.c ****   *   This parameter can be one of the following values:
 254:./FWLIB/src/stm32f10x_dac.c ****   *     @arg DAC_Channel_1: DAC Channel1 selected
 255:./FWLIB/src/stm32f10x_dac.c ****   *     @arg DAC_Channel_2: DAC Channel2 selected
 256:./FWLIB/src/stm32f10x_dac.c ****   * @param  NewState: new state of the selected DAC channel software trigger.
 257:./FWLIB/src/stm32f10x_dac.c ****   *   This parameter can be: ENABLE or DISABLE.
 258:./FWLIB/src/stm32f10x_dac.c ****   * @retval None
 259:./FWLIB/src/stm32f10x_dac.c ****   */
 260:./FWLIB/src/stm32f10x_dac.c **** void DAC_SoftwareTriggerCmd(uint32_t DAC_Channel, FunctionalState NewState)
 261:./FWLIB/src/stm32f10x_dac.c **** {
 285              		.loc 1 261 1 is_stmt 1 view -0
 286              		.cfi_startproc
 287              		@ args = 0, pretend = 0, frame = 0
 288              		@ frame_needed = 0, uses_anonymous_args = 0
 289              		@ link register save eliminated.
 262:./FWLIB/src/stm32f10x_dac.c ****   /* Check the parameters */
 263:./FWLIB/src/stm32f10x_dac.c ****   assert_param(IS_DAC_CHANNEL(DAC_Channel));
 290              		.loc 1 263 3 view .LVU71
 264:./FWLIB/src/stm32f10x_dac.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 291              		.loc 1 264 3 view .LVU72
 265:./FWLIB/src/stm32f10x_dac.c ****   if (NewState != DISABLE)
 292              		.loc 1 265 3 view .LVU73
 293              		.loc 1 265 6 is_stmt 0 view .LVU74
 294 0000 39B1     		cbz	r1, .L19
 266:./FWLIB/src/stm32f10x_dac.c ****   {
 267:./FWLIB/src/stm32f10x_dac.c ****     /* Enable software trigger for the selected DAC channel */
 268:./FWLIB/src/stm32f10x_dac.c ****     DAC->SWTRIGR |= (uint32_t)DAC_SWTRIGR_SWTRIG1 << (DAC_Channel >> 4);
 295              		.loc 1 268 5 is_stmt 1 view .LVU75
 296              		.loc 1 268 8 is_stmt 0 view .LVU76
 297 0002 0849     		ldr	r1, .L21
 298              	.LVL21:
 299              		.loc 1 268 8 view .LVU77
 300 0004 4B68     		ldr	r3, [r1, #4]
 301              		.loc 1 268 67 view .LVU78
 302 0006 0009     		lsrs	r0, r0, #4
 303              	.LVL22:
 304              		.loc 1 268 51 view .LVU79
 305 0008 0122     		movs	r2, #1
 306 000a 8240     		lsls	r2, r2, r0
 307              		.loc 1 268 18 view .LVU80
 308 000c 1343     		orrs	r3, r3, r2
 309 000e 4B60     		str	r3, [r1, #4]
 310 0010 7047     		bx	lr
 311              	.LVL23:
 312              	.L19:
ARM GAS  /tmp/ccZax68S.s 			page 11


 269:./FWLIB/src/stm32f10x_dac.c ****   }
 270:./FWLIB/src/stm32f10x_dac.c ****   else
 271:./FWLIB/src/stm32f10x_dac.c ****   {
 272:./FWLIB/src/stm32f10x_dac.c ****     /* Disable software trigger for the selected DAC channel */
 273:./FWLIB/src/stm32f10x_dac.c ****     DAC->SWTRIGR &= ~((uint32_t)DAC_SWTRIGR_SWTRIG1 << (DAC_Channel >> 4));
 313              		.loc 1 273 5 is_stmt 1 view .LVU81
 314              		.loc 1 273 8 is_stmt 0 view .LVU82
 315 0012 0449     		ldr	r1, .L21
 316              	.LVL24:
 317              		.loc 1 273 8 view .LVU83
 318 0014 4B68     		ldr	r3, [r1, #4]
 319              		.loc 1 273 69 view .LVU84
 320 0016 0009     		lsrs	r0, r0, #4
 321              	.LVL25:
 322              		.loc 1 273 53 view .LVU85
 323 0018 0122     		movs	r2, #1
 324 001a 8240     		lsls	r2, r2, r0
 325              		.loc 1 273 18 view .LVU86
 326 001c 23EA0203 		bic	r3, r3, r2
 327 0020 4B60     		str	r3, [r1, #4]
 274:./FWLIB/src/stm32f10x_dac.c ****   }
 275:./FWLIB/src/stm32f10x_dac.c **** }
 328              		.loc 1 275 1 view .LVU87
 329 0022 7047     		bx	lr
 330              	.L22:
 331              		.align	2
 332              	.L21:
 333 0024 00740040 		.word	1073771520
 334              		.cfi_endproc
 335              	.LFE34:
 337              		.section	.text.DAC_DualSoftwareTriggerCmd,"ax",%progbits
 338              		.align	1
 339              		.global	DAC_DualSoftwareTriggerCmd
 340              		.syntax unified
 341              		.thumb
 342              		.thumb_func
 344              	DAC_DualSoftwareTriggerCmd:
 345              	.LVL26:
 346              	.LFB35:
 276:./FWLIB/src/stm32f10x_dac.c **** 
 277:./FWLIB/src/stm32f10x_dac.c **** /**
 278:./FWLIB/src/stm32f10x_dac.c ****   * @brief  Enables or disables simultaneously the two DAC channels software
 279:./FWLIB/src/stm32f10x_dac.c ****   *   triggers.
 280:./FWLIB/src/stm32f10x_dac.c ****   * @param  NewState: new state of the DAC channels software triggers.
 281:./FWLIB/src/stm32f10x_dac.c ****   *   This parameter can be: ENABLE or DISABLE.
 282:./FWLIB/src/stm32f10x_dac.c ****   * @retval None
 283:./FWLIB/src/stm32f10x_dac.c ****   */
 284:./FWLIB/src/stm32f10x_dac.c **** void DAC_DualSoftwareTriggerCmd(FunctionalState NewState)
 285:./FWLIB/src/stm32f10x_dac.c **** {
 347              		.loc 1 285 1 is_stmt 1 view -0
 348              		.cfi_startproc
 349              		@ args = 0, pretend = 0, frame = 0
 350              		@ frame_needed = 0, uses_anonymous_args = 0
 351              		@ link register save eliminated.
 286:./FWLIB/src/stm32f10x_dac.c ****   /* Check the parameters */
 287:./FWLIB/src/stm32f10x_dac.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 352              		.loc 1 287 3 view .LVU89
ARM GAS  /tmp/ccZax68S.s 			page 12


 288:./FWLIB/src/stm32f10x_dac.c ****   if (NewState != DISABLE)
 353              		.loc 1 288 3 view .LVU90
 354              		.loc 1 288 6 is_stmt 0 view .LVU91
 355 0000 28B1     		cbz	r0, .L24
 289:./FWLIB/src/stm32f10x_dac.c ****   {
 290:./FWLIB/src/stm32f10x_dac.c ****     /* Enable software trigger for both DAC channels */
 291:./FWLIB/src/stm32f10x_dac.c ****     DAC->SWTRIGR |= DUAL_SWTRIG_SET ;
 356              		.loc 1 291 5 is_stmt 1 view .LVU92
 357              		.loc 1 291 8 is_stmt 0 view .LVU93
 358 0002 064A     		ldr	r2, .L26
 359 0004 5368     		ldr	r3, [r2, #4]
 360              		.loc 1 291 18 view .LVU94
 361 0006 43F00303 		orr	r3, r3, #3
 362 000a 5360     		str	r3, [r2, #4]
 363 000c 7047     		bx	lr
 364              	.L24:
 292:./FWLIB/src/stm32f10x_dac.c ****   }
 293:./FWLIB/src/stm32f10x_dac.c ****   else
 294:./FWLIB/src/stm32f10x_dac.c ****   {
 295:./FWLIB/src/stm32f10x_dac.c ****     /* Disable software trigger for both DAC channels */
 296:./FWLIB/src/stm32f10x_dac.c ****     DAC->SWTRIGR &= DUAL_SWTRIG_RESET;
 365              		.loc 1 296 5 is_stmt 1 view .LVU95
 366              		.loc 1 296 8 is_stmt 0 view .LVU96
 367 000e 034A     		ldr	r2, .L26
 368 0010 5368     		ldr	r3, [r2, #4]
 369              		.loc 1 296 18 view .LVU97
 370 0012 23F00303 		bic	r3, r3, #3
 371 0016 5360     		str	r3, [r2, #4]
 297:./FWLIB/src/stm32f10x_dac.c ****   }
 298:./FWLIB/src/stm32f10x_dac.c **** }
 372              		.loc 1 298 1 view .LVU98
 373 0018 7047     		bx	lr
 374              	.L27:
 375 001a 00BF     		.align	2
 376              	.L26:
 377 001c 00740040 		.word	1073771520
 378              		.cfi_endproc
 379              	.LFE35:
 381              		.section	.text.DAC_WaveGenerationCmd,"ax",%progbits
 382              		.align	1
 383              		.global	DAC_WaveGenerationCmd
 384              		.syntax unified
 385              		.thumb
 386              		.thumb_func
 388              	DAC_WaveGenerationCmd:
 389              	.LVL27:
 390              	.LFB36:
 299:./FWLIB/src/stm32f10x_dac.c **** 
 300:./FWLIB/src/stm32f10x_dac.c **** /**
 301:./FWLIB/src/stm32f10x_dac.c ****   * @brief  Enables or disables the selected DAC channel wave generation.
 302:./FWLIB/src/stm32f10x_dac.c ****   * @param  DAC_Channel: the selected DAC channel. 
 303:./FWLIB/src/stm32f10x_dac.c ****   *   This parameter can be one of the following values:
 304:./FWLIB/src/stm32f10x_dac.c ****   *     @arg DAC_Channel_1: DAC Channel1 selected
 305:./FWLIB/src/stm32f10x_dac.c ****   *     @arg DAC_Channel_2: DAC Channel2 selected
 306:./FWLIB/src/stm32f10x_dac.c ****   * @param  DAC_Wave: Specifies the wave type to enable or disable.
 307:./FWLIB/src/stm32f10x_dac.c ****   *   This parameter can be one of the following values:
 308:./FWLIB/src/stm32f10x_dac.c ****   *     @arg DAC_Wave_Noise: noise wave generation
ARM GAS  /tmp/ccZax68S.s 			page 13


 309:./FWLIB/src/stm32f10x_dac.c ****   *     @arg DAC_Wave_Triangle: triangle wave generation
 310:./FWLIB/src/stm32f10x_dac.c ****   * @param  NewState: new state of the selected DAC channel wave generation.
 311:./FWLIB/src/stm32f10x_dac.c ****   *   This parameter can be: ENABLE or DISABLE.
 312:./FWLIB/src/stm32f10x_dac.c ****   * @retval None
 313:./FWLIB/src/stm32f10x_dac.c ****   */
 314:./FWLIB/src/stm32f10x_dac.c **** void DAC_WaveGenerationCmd(uint32_t DAC_Channel, uint32_t DAC_Wave, FunctionalState NewState)
 315:./FWLIB/src/stm32f10x_dac.c **** {
 391              		.loc 1 315 1 is_stmt 1 view -0
 392              		.cfi_startproc
 393              		@ args = 0, pretend = 0, frame = 0
 394              		@ frame_needed = 0, uses_anonymous_args = 0
 395              		@ link register save eliminated.
 316:./FWLIB/src/stm32f10x_dac.c ****   /* Check the parameters */
 317:./FWLIB/src/stm32f10x_dac.c ****   assert_param(IS_DAC_CHANNEL(DAC_Channel));
 396              		.loc 1 317 3 view .LVU100
 318:./FWLIB/src/stm32f10x_dac.c ****   assert_param(IS_DAC_WAVE(DAC_Wave)); 
 397              		.loc 1 318 3 view .LVU101
 319:./FWLIB/src/stm32f10x_dac.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 398              		.loc 1 319 3 view .LVU102
 320:./FWLIB/src/stm32f10x_dac.c ****   if (NewState != DISABLE)
 399              		.loc 1 320 3 view .LVU103
 400              		.loc 1 320 6 is_stmt 0 view .LVU104
 401 0000 2AB1     		cbz	r2, .L29
 321:./FWLIB/src/stm32f10x_dac.c ****   {
 322:./FWLIB/src/stm32f10x_dac.c ****     /* Enable the selected wave generation for the selected DAC channel */
 323:./FWLIB/src/stm32f10x_dac.c ****     DAC->CR |= DAC_Wave << DAC_Channel;
 402              		.loc 1 323 5 is_stmt 1 view .LVU105
 403              		.loc 1 323 8 is_stmt 0 view .LVU106
 404 0002 064A     		ldr	r2, .L31
 405              	.LVL28:
 406              		.loc 1 323 8 view .LVU107
 407 0004 1368     		ldr	r3, [r2]
 408              		.loc 1 323 25 view .LVU108
 409 0006 8140     		lsls	r1, r1, r0
 410              	.LVL29:
 411              		.loc 1 323 13 view .LVU109
 412 0008 0B43     		orrs	r3, r3, r1
 413 000a 1360     		str	r3, [r2]
 414 000c 7047     		bx	lr
 415              	.LVL30:
 416              	.L29:
 324:./FWLIB/src/stm32f10x_dac.c ****   }
 325:./FWLIB/src/stm32f10x_dac.c ****   else
 326:./FWLIB/src/stm32f10x_dac.c ****   {
 327:./FWLIB/src/stm32f10x_dac.c ****     /* Disable the selected wave generation for the selected DAC channel */
 328:./FWLIB/src/stm32f10x_dac.c ****     DAC->CR &= ~(DAC_Wave << DAC_Channel);
 417              		.loc 1 328 5 is_stmt 1 view .LVU110
 418              		.loc 1 328 8 is_stmt 0 view .LVU111
 419 000e 034A     		ldr	r2, .L31
 420              	.LVL31:
 421              		.loc 1 328 8 view .LVU112
 422 0010 1368     		ldr	r3, [r2]
 423              		.loc 1 328 27 view .LVU113
 424 0012 8140     		lsls	r1, r1, r0
 425              	.LVL32:
 426              		.loc 1 328 13 view .LVU114
 427 0014 23EA0103 		bic	r3, r3, r1
ARM GAS  /tmp/ccZax68S.s 			page 14


 428 0018 1360     		str	r3, [r2]
 329:./FWLIB/src/stm32f10x_dac.c ****   }
 330:./FWLIB/src/stm32f10x_dac.c **** }
 429              		.loc 1 330 1 view .LVU115
 430 001a 7047     		bx	lr
 431              	.L32:
 432              		.align	2
 433              	.L31:
 434 001c 00740040 		.word	1073771520
 435              		.cfi_endproc
 436              	.LFE36:
 438              		.section	.text.DAC_SetChannel1Data,"ax",%progbits
 439              		.align	1
 440              		.global	DAC_SetChannel1Data
 441              		.syntax unified
 442              		.thumb
 443              		.thumb_func
 445              	DAC_SetChannel1Data:
 446              	.LVL33:
 447              	.LFB37:
 331:./FWLIB/src/stm32f10x_dac.c **** 
 332:./FWLIB/src/stm32f10x_dac.c **** /**
 333:./FWLIB/src/stm32f10x_dac.c ****   * @brief  Set the specified data holding register value for DAC channel1.
 334:./FWLIB/src/stm32f10x_dac.c ****   * @param  DAC_Align: Specifies the data alignment for DAC channel1.
 335:./FWLIB/src/stm32f10x_dac.c ****   *   This parameter can be one of the following values:
 336:./FWLIB/src/stm32f10x_dac.c ****   *     @arg DAC_Align_8b_R: 8bit right data alignment selected
 337:./FWLIB/src/stm32f10x_dac.c ****   *     @arg DAC_Align_12b_L: 12bit left data alignment selected
 338:./FWLIB/src/stm32f10x_dac.c ****   *     @arg DAC_Align_12b_R: 12bit right data alignment selected
 339:./FWLIB/src/stm32f10x_dac.c ****   * @param  Data : Data to be loaded in the selected data holding register.
 340:./FWLIB/src/stm32f10x_dac.c ****   * @retval None
 341:./FWLIB/src/stm32f10x_dac.c ****   */
 342:./FWLIB/src/stm32f10x_dac.c **** void DAC_SetChannel1Data(uint32_t DAC_Align, uint16_t Data)
 343:./FWLIB/src/stm32f10x_dac.c **** {  
 448              		.loc 1 343 1 is_stmt 1 view -0
 449              		.cfi_startproc
 450              		@ args = 0, pretend = 0, frame = 8
 451              		@ frame_needed = 0, uses_anonymous_args = 0
 452              		@ link register save eliminated.
 453              		.loc 1 343 1 is_stmt 0 view .LVU117
 454 0000 82B0     		sub	sp, sp, #8
 455              	.LCFI3:
 456              		.cfi_def_cfa_offset 8
 344:./FWLIB/src/stm32f10x_dac.c ****   __IO uint32_t tmp = 0;
 457              		.loc 1 344 3 is_stmt 1 view .LVU118
 458              		.loc 1 344 17 is_stmt 0 view .LVU119
 459 0002 0023     		movs	r3, #0
 460 0004 0193     		str	r3, [sp, #4]
 345:./FWLIB/src/stm32f10x_dac.c ****   
 346:./FWLIB/src/stm32f10x_dac.c ****   /* Check the parameters */
 347:./FWLIB/src/stm32f10x_dac.c ****   assert_param(IS_DAC_ALIGN(DAC_Align));
 461              		.loc 1 347 3 is_stmt 1 view .LVU120
 348:./FWLIB/src/stm32f10x_dac.c ****   assert_param(IS_DAC_DATA(Data));
 462              		.loc 1 348 3 view .LVU121
 349:./FWLIB/src/stm32f10x_dac.c ****   
 350:./FWLIB/src/stm32f10x_dac.c ****   tmp = (uint32_t)DAC_BASE; 
 463              		.loc 1 350 3 view .LVU122
 464              		.loc 1 350 7 is_stmt 0 view .LVU123
ARM GAS  /tmp/ccZax68S.s 			page 15


 465 0006 054B     		ldr	r3, .L35
 466 0008 0193     		str	r3, [sp, #4]
 351:./FWLIB/src/stm32f10x_dac.c ****   tmp += DHR12R1_OFFSET + DAC_Align;
 467              		.loc 1 351 3 is_stmt 1 view .LVU124
 468              		.loc 1 351 7 is_stmt 0 view .LVU125
 469 000a 019B     		ldr	r3, [sp, #4]
 470 000c 0344     		add	r3, r3, r0
 471 000e 0833     		adds	r3, r3, #8
 472 0010 0193     		str	r3, [sp, #4]
 352:./FWLIB/src/stm32f10x_dac.c **** 
 353:./FWLIB/src/stm32f10x_dac.c ****   /* Set the DAC channel1 selected data holding register */
 354:./FWLIB/src/stm32f10x_dac.c ****   *(__IO uint32_t *) tmp = Data;
 473              		.loc 1 354 3 is_stmt 1 view .LVU126
 474              		.loc 1 354 4 is_stmt 0 view .LVU127
 475 0012 019B     		ldr	r3, [sp, #4]
 476              		.loc 1 354 26 view .LVU128
 477 0014 1960     		str	r1, [r3]
 355:./FWLIB/src/stm32f10x_dac.c **** }
 478              		.loc 1 355 1 view .LVU129
 479 0016 02B0     		add	sp, sp, #8
 480              	.LCFI4:
 481              		.cfi_def_cfa_offset 0
 482              		@ sp needed
 483 0018 7047     		bx	lr
 484              	.L36:
 485 001a 00BF     		.align	2
 486              	.L35:
 487 001c 00740040 		.word	1073771520
 488              		.cfi_endproc
 489              	.LFE37:
 491              		.section	.text.DAC_SetChannel2Data,"ax",%progbits
 492              		.align	1
 493              		.global	DAC_SetChannel2Data
 494              		.syntax unified
 495              		.thumb
 496              		.thumb_func
 498              	DAC_SetChannel2Data:
 499              	.LVL34:
 500              	.LFB38:
 356:./FWLIB/src/stm32f10x_dac.c **** 
 357:./FWLIB/src/stm32f10x_dac.c **** /**
 358:./FWLIB/src/stm32f10x_dac.c ****   * @brief  Set the specified data holding register value for DAC channel2.
 359:./FWLIB/src/stm32f10x_dac.c ****   * @param  DAC_Align: Specifies the data alignment for DAC channel2.
 360:./FWLIB/src/stm32f10x_dac.c ****   *   This parameter can be one of the following values:
 361:./FWLIB/src/stm32f10x_dac.c ****   *     @arg DAC_Align_8b_R: 8bit right data alignment selected
 362:./FWLIB/src/stm32f10x_dac.c ****   *     @arg DAC_Align_12b_L: 12bit left data alignment selected
 363:./FWLIB/src/stm32f10x_dac.c ****   *     @arg DAC_Align_12b_R: 12bit right data alignment selected
 364:./FWLIB/src/stm32f10x_dac.c ****   * @param  Data : Data to be loaded in the selected data holding register.
 365:./FWLIB/src/stm32f10x_dac.c ****   * @retval None
 366:./FWLIB/src/stm32f10x_dac.c ****   */
 367:./FWLIB/src/stm32f10x_dac.c **** void DAC_SetChannel2Data(uint32_t DAC_Align, uint16_t Data)
 368:./FWLIB/src/stm32f10x_dac.c **** {
 501              		.loc 1 368 1 is_stmt 1 view -0
 502              		.cfi_startproc
 503              		@ args = 0, pretend = 0, frame = 8
 504              		@ frame_needed = 0, uses_anonymous_args = 0
 505              		@ link register save eliminated.
ARM GAS  /tmp/ccZax68S.s 			page 16


 506              		.loc 1 368 1 is_stmt 0 view .LVU131
 507 0000 82B0     		sub	sp, sp, #8
 508              	.LCFI5:
 509              		.cfi_def_cfa_offset 8
 369:./FWLIB/src/stm32f10x_dac.c ****   __IO uint32_t tmp = 0;
 510              		.loc 1 369 3 is_stmt 1 view .LVU132
 511              		.loc 1 369 17 is_stmt 0 view .LVU133
 512 0002 0023     		movs	r3, #0
 513 0004 0193     		str	r3, [sp, #4]
 370:./FWLIB/src/stm32f10x_dac.c **** 
 371:./FWLIB/src/stm32f10x_dac.c ****   /* Check the parameters */
 372:./FWLIB/src/stm32f10x_dac.c ****   assert_param(IS_DAC_ALIGN(DAC_Align));
 514              		.loc 1 372 3 is_stmt 1 view .LVU134
 373:./FWLIB/src/stm32f10x_dac.c ****   assert_param(IS_DAC_DATA(Data));
 515              		.loc 1 373 3 view .LVU135
 374:./FWLIB/src/stm32f10x_dac.c ****   
 375:./FWLIB/src/stm32f10x_dac.c ****   tmp = (uint32_t)DAC_BASE;
 516              		.loc 1 375 3 view .LVU136
 517              		.loc 1 375 7 is_stmt 0 view .LVU137
 518 0006 054B     		ldr	r3, .L39
 519 0008 0193     		str	r3, [sp, #4]
 376:./FWLIB/src/stm32f10x_dac.c ****   tmp += DHR12R2_OFFSET + DAC_Align;
 520              		.loc 1 376 3 is_stmt 1 view .LVU138
 521              		.loc 1 376 7 is_stmt 0 view .LVU139
 522 000a 019B     		ldr	r3, [sp, #4]
 523 000c 0344     		add	r3, r3, r0
 524 000e 1433     		adds	r3, r3, #20
 525 0010 0193     		str	r3, [sp, #4]
 377:./FWLIB/src/stm32f10x_dac.c **** 
 378:./FWLIB/src/stm32f10x_dac.c ****   /* Set the DAC channel2 selected data holding register */
 379:./FWLIB/src/stm32f10x_dac.c ****   *(__IO uint32_t *)tmp = Data;
 526              		.loc 1 379 3 is_stmt 1 view .LVU140
 527              		.loc 1 379 4 is_stmt 0 view .LVU141
 528 0012 019B     		ldr	r3, [sp, #4]
 529              		.loc 1 379 25 view .LVU142
 530 0014 1960     		str	r1, [r3]
 380:./FWLIB/src/stm32f10x_dac.c **** }
 531              		.loc 1 380 1 view .LVU143
 532 0016 02B0     		add	sp, sp, #8
 533              	.LCFI6:
 534              		.cfi_def_cfa_offset 0
 535              		@ sp needed
 536 0018 7047     		bx	lr
 537              	.L40:
 538 001a 00BF     		.align	2
 539              	.L39:
 540 001c 00740040 		.word	1073771520
 541              		.cfi_endproc
 542              	.LFE38:
 544              		.section	.text.DAC_SetDualChannelData,"ax",%progbits
 545              		.align	1
 546              		.global	DAC_SetDualChannelData
 547              		.syntax unified
 548              		.thumb
 549              		.thumb_func
 551              	DAC_SetDualChannelData:
 552              	.LVL35:
ARM GAS  /tmp/ccZax68S.s 			page 17


 553              	.LFB39:
 381:./FWLIB/src/stm32f10x_dac.c **** 
 382:./FWLIB/src/stm32f10x_dac.c **** /**
 383:./FWLIB/src/stm32f10x_dac.c ****   * @brief  Set the specified data holding register value for dual channel
 384:./FWLIB/src/stm32f10x_dac.c ****   *   DAC.
 385:./FWLIB/src/stm32f10x_dac.c ****   * @param  DAC_Align: Specifies the data alignment for dual channel DAC.
 386:./FWLIB/src/stm32f10x_dac.c ****   *   This parameter can be one of the following values:
 387:./FWLIB/src/stm32f10x_dac.c ****   *     @arg DAC_Align_8b_R: 8bit right data alignment selected
 388:./FWLIB/src/stm32f10x_dac.c ****   *     @arg DAC_Align_12b_L: 12bit left data alignment selected
 389:./FWLIB/src/stm32f10x_dac.c ****   *     @arg DAC_Align_12b_R: 12bit right data alignment selected
 390:./FWLIB/src/stm32f10x_dac.c ****   * @param  Data2: Data for DAC Channel2 to be loaded in the selected data 
 391:./FWLIB/src/stm32f10x_dac.c ****   *   holding register.
 392:./FWLIB/src/stm32f10x_dac.c ****   * @param  Data1: Data for DAC Channel1 to be loaded in the selected data 
 393:./FWLIB/src/stm32f10x_dac.c ****   *   holding register.
 394:./FWLIB/src/stm32f10x_dac.c ****   * @retval None
 395:./FWLIB/src/stm32f10x_dac.c ****   */
 396:./FWLIB/src/stm32f10x_dac.c **** void DAC_SetDualChannelData(uint32_t DAC_Align, uint16_t Data2, uint16_t Data1)
 397:./FWLIB/src/stm32f10x_dac.c **** {
 554              		.loc 1 397 1 is_stmt 1 view -0
 555              		.cfi_startproc
 556              		@ args = 0, pretend = 0, frame = 0
 557              		@ frame_needed = 0, uses_anonymous_args = 0
 558              		@ link register save eliminated.
 398:./FWLIB/src/stm32f10x_dac.c ****   uint32_t data = 0, tmp = 0;
 559              		.loc 1 398 3 view .LVU145
 399:./FWLIB/src/stm32f10x_dac.c ****   
 400:./FWLIB/src/stm32f10x_dac.c ****   /* Check the parameters */
 401:./FWLIB/src/stm32f10x_dac.c ****   assert_param(IS_DAC_ALIGN(DAC_Align));
 560              		.loc 1 401 3 view .LVU146
 402:./FWLIB/src/stm32f10x_dac.c ****   assert_param(IS_DAC_DATA(Data1));
 561              		.loc 1 402 3 view .LVU147
 403:./FWLIB/src/stm32f10x_dac.c ****   assert_param(IS_DAC_DATA(Data2));
 562              		.loc 1 403 3 view .LVU148
 404:./FWLIB/src/stm32f10x_dac.c ****   
 405:./FWLIB/src/stm32f10x_dac.c ****   /* Calculate and set dual DAC data holding register value */
 406:./FWLIB/src/stm32f10x_dac.c ****   if (DAC_Align == DAC_Align_8b_R)
 563              		.loc 1 406 3 view .LVU149
 564              		.loc 1 406 6 is_stmt 0 view .LVU150
 565 0000 0828     		cmp	r0, #8
 566 0002 04D0     		beq	.L44
 407:./FWLIB/src/stm32f10x_dac.c ****   {
 408:./FWLIB/src/stm32f10x_dac.c ****     data = ((uint32_t)Data2 << 8) | Data1; 
 409:./FWLIB/src/stm32f10x_dac.c ****   }
 410:./FWLIB/src/stm32f10x_dac.c ****   else
 411:./FWLIB/src/stm32f10x_dac.c ****   {
 412:./FWLIB/src/stm32f10x_dac.c ****     data = ((uint32_t)Data2 << 16) | Data1;
 567              		.loc 1 412 5 is_stmt 1 view .LVU151
 568              		.loc 1 412 10 is_stmt 0 view .LVU152
 569 0004 42EA0142 		orr	r2, r2, r1, lsl #16
 570              	.LVL36:
 571              	.L43:
 413:./FWLIB/src/stm32f10x_dac.c ****   }
 414:./FWLIB/src/stm32f10x_dac.c ****   
 415:./FWLIB/src/stm32f10x_dac.c ****   tmp = (uint32_t)DAC_BASE;
 572              		.loc 1 415 3 is_stmt 1 view .LVU153
 416:./FWLIB/src/stm32f10x_dac.c ****   tmp += DHR12RD_OFFSET + DAC_Align;
 573              		.loc 1 416 3 view .LVU154
ARM GAS  /tmp/ccZax68S.s 			page 18


 574              		.loc 1 416 7 is_stmt 0 view .LVU155
 575 0008 024B     		ldr	r3, .L45
 576              	.LVL37:
 417:./FWLIB/src/stm32f10x_dac.c **** 
 418:./FWLIB/src/stm32f10x_dac.c ****   /* Set the dual DAC selected data holding register */
 419:./FWLIB/src/stm32f10x_dac.c ****   *(__IO uint32_t *)tmp = data;
 577              		.loc 1 419 3 is_stmt 1 view .LVU156
 578              		.loc 1 419 25 is_stmt 0 view .LVU157
 579 000a C250     		str	r2, [r0, r3]
 420:./FWLIB/src/stm32f10x_dac.c **** }
 580              		.loc 1 420 1 view .LVU158
 581 000c 7047     		bx	lr
 582              	.LVL38:
 583              	.L44:
 408:./FWLIB/src/stm32f10x_dac.c ****   }
 584              		.loc 1 408 5 is_stmt 1 view .LVU159
 408:./FWLIB/src/stm32f10x_dac.c ****   }
 585              		.loc 1 408 10 is_stmt 0 view .LVU160
 586 000e 42EA0122 		orr	r2, r2, r1, lsl #8
 587              	.LVL39:
 408:./FWLIB/src/stm32f10x_dac.c ****   }
 588              		.loc 1 408 10 view .LVU161
 589 0012 F9E7     		b	.L43
 590              	.L46:
 591              		.align	2
 592              	.L45:
 593 0014 20740040 		.word	1073771552
 594              		.cfi_endproc
 595              	.LFE39:
 597              		.section	.text.DAC_GetDataOutputValue,"ax",%progbits
 598              		.align	1
 599              		.global	DAC_GetDataOutputValue
 600              		.syntax unified
 601              		.thumb
 602              		.thumb_func
 604              	DAC_GetDataOutputValue:
 605              	.LVL40:
 606              	.LFB40:
 421:./FWLIB/src/stm32f10x_dac.c **** 
 422:./FWLIB/src/stm32f10x_dac.c **** /**
 423:./FWLIB/src/stm32f10x_dac.c ****   * @brief  Returns the last data output value of the selected DAC channel.
 424:./FWLIB/src/stm32f10x_dac.c ****   * @param  DAC_Channel: the selected DAC channel. 
 425:./FWLIB/src/stm32f10x_dac.c ****   *   This parameter can be one of the following values:
 426:./FWLIB/src/stm32f10x_dac.c ****   *     @arg DAC_Channel_1: DAC Channel1 selected
 427:./FWLIB/src/stm32f10x_dac.c ****   *     @arg DAC_Channel_2: DAC Channel2 selected
 428:./FWLIB/src/stm32f10x_dac.c ****   * @retval The selected DAC channel data output value.
 429:./FWLIB/src/stm32f10x_dac.c ****   */
 430:./FWLIB/src/stm32f10x_dac.c **** uint16_t DAC_GetDataOutputValue(uint32_t DAC_Channel)
 431:./FWLIB/src/stm32f10x_dac.c **** {
 607              		.loc 1 431 1 is_stmt 1 view -0
 608              		.cfi_startproc
 609              		@ args = 0, pretend = 0, frame = 8
 610              		@ frame_needed = 0, uses_anonymous_args = 0
 611              		@ link register save eliminated.
 612              		.loc 1 431 1 is_stmt 0 view .LVU163
 613 0000 82B0     		sub	sp, sp, #8
 614              	.LCFI7:
ARM GAS  /tmp/ccZax68S.s 			page 19


 615              		.cfi_def_cfa_offset 8
 432:./FWLIB/src/stm32f10x_dac.c ****   __IO uint32_t tmp = 0;
 616              		.loc 1 432 3 is_stmt 1 view .LVU164
 617              		.loc 1 432 17 is_stmt 0 view .LVU165
 618 0002 0023     		movs	r3, #0
 619 0004 0193     		str	r3, [sp, #4]
 433:./FWLIB/src/stm32f10x_dac.c ****   
 434:./FWLIB/src/stm32f10x_dac.c ****   /* Check the parameters */
 435:./FWLIB/src/stm32f10x_dac.c ****   assert_param(IS_DAC_CHANNEL(DAC_Channel));
 620              		.loc 1 435 3 is_stmt 1 view .LVU166
 436:./FWLIB/src/stm32f10x_dac.c ****   
 437:./FWLIB/src/stm32f10x_dac.c ****   tmp = (uint32_t) DAC_BASE ;
 621              		.loc 1 437 3 view .LVU167
 622              		.loc 1 437 7 is_stmt 0 view .LVU168
 623 0006 064B     		ldr	r3, .L49
 624 0008 0193     		str	r3, [sp, #4]
 438:./FWLIB/src/stm32f10x_dac.c ****   tmp += DOR_OFFSET + ((uint32_t)DAC_Channel >> 2);
 625              		.loc 1 438 3 is_stmt 1 view .LVU169
 626              		.loc 1 438 7 is_stmt 0 view .LVU170
 627 000a 019B     		ldr	r3, [sp, #4]
 628 000c 03EB9003 		add	r3, r3, r0, lsr #2
 629 0010 2C33     		adds	r3, r3, #44
 630 0012 0193     		str	r3, [sp, #4]
 439:./FWLIB/src/stm32f10x_dac.c ****   
 440:./FWLIB/src/stm32f10x_dac.c ****   /* Returns the DAC channel data output register value */
 441:./FWLIB/src/stm32f10x_dac.c ****   return (uint16_t) (*(__IO uint32_t*) tmp);
 631              		.loc 1 441 3 is_stmt 1 view .LVU171
 632              		.loc 1 441 23 is_stmt 0 view .LVU172
 633 0014 019B     		ldr	r3, [sp, #4]
 634              		.loc 1 441 22 view .LVU173
 635 0016 1868     		ldr	r0, [r3]
 636              	.LVL41:
 442:./FWLIB/src/stm32f10x_dac.c **** }
 637              		.loc 1 442 1 view .LVU174
 638 0018 80B2     		uxth	r0, r0
 639 001a 02B0     		add	sp, sp, #8
 640              	.LCFI8:
 641              		.cfi_def_cfa_offset 0
 642              		@ sp needed
 643 001c 7047     		bx	lr
 644              	.L50:
 645 001e 00BF     		.align	2
 646              	.L49:
 647 0020 00740040 		.word	1073771520
 648              		.cfi_endproc
 649              	.LFE40:
 651              		.text
 652              	.Letext0:
 653              		.file 2 "/usr/lib/gcc/arm-none-eabi/14.1.0/include/stdint-gcc.h"
 654              		.file 3 "USER/stm32f10x.h"
 655              		.file 4 "FWLIB/inc/stm32f10x_dac.h"
 656              		.file 5 "FWLIB/inc/stm32f10x_rcc.h"
ARM GAS  /tmp/ccZax68S.s 			page 20


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f10x_dac.c
     /tmp/ccZax68S.s:19     .text.DAC_DeInit:00000000 $t
     /tmp/ccZax68S.s:25     .text.DAC_DeInit:00000000 DAC_DeInit
     /tmp/ccZax68S.s:52     .text.DAC_Init:00000000 $t
     /tmp/ccZax68S.s:58     .text.DAC_Init:00000000 DAC_Init
     /tmp/ccZax68S.s:126    .text.DAC_Init:00000028 $d
     /tmp/ccZax68S.s:131    .text.DAC_StructInit:00000000 $t
     /tmp/ccZax68S.s:137    .text.DAC_StructInit:00000000 DAC_StructInit
     /tmp/ccZax68S.s:164    .text.DAC_Cmd:00000000 $t
     /tmp/ccZax68S.s:170    .text.DAC_Cmd:00000000 DAC_Cmd
     /tmp/ccZax68S.s:215    .text.DAC_Cmd:00000020 $d
     /tmp/ccZax68S.s:220    .text.DAC_DMACmd:00000000 $t
     /tmp/ccZax68S.s:226    .text.DAC_DMACmd:00000000 DAC_DMACmd
     /tmp/ccZax68S.s:271    .text.DAC_DMACmd:00000024 $d
     /tmp/ccZax68S.s:276    .text.DAC_SoftwareTriggerCmd:00000000 $t
     /tmp/ccZax68S.s:282    .text.DAC_SoftwareTriggerCmd:00000000 DAC_SoftwareTriggerCmd
     /tmp/ccZax68S.s:333    .text.DAC_SoftwareTriggerCmd:00000024 $d
     /tmp/ccZax68S.s:338    .text.DAC_DualSoftwareTriggerCmd:00000000 $t
     /tmp/ccZax68S.s:344    .text.DAC_DualSoftwareTriggerCmd:00000000 DAC_DualSoftwareTriggerCmd
     /tmp/ccZax68S.s:377    .text.DAC_DualSoftwareTriggerCmd:0000001c $d
     /tmp/ccZax68S.s:382    .text.DAC_WaveGenerationCmd:00000000 $t
     /tmp/ccZax68S.s:388    .text.DAC_WaveGenerationCmd:00000000 DAC_WaveGenerationCmd
     /tmp/ccZax68S.s:434    .text.DAC_WaveGenerationCmd:0000001c $d
     /tmp/ccZax68S.s:439    .text.DAC_SetChannel1Data:00000000 $t
     /tmp/ccZax68S.s:445    .text.DAC_SetChannel1Data:00000000 DAC_SetChannel1Data
     /tmp/ccZax68S.s:487    .text.DAC_SetChannel1Data:0000001c $d
     /tmp/ccZax68S.s:492    .text.DAC_SetChannel2Data:00000000 $t
     /tmp/ccZax68S.s:498    .text.DAC_SetChannel2Data:00000000 DAC_SetChannel2Data
     /tmp/ccZax68S.s:540    .text.DAC_SetChannel2Data:0000001c $d
     /tmp/ccZax68S.s:545    .text.DAC_SetDualChannelData:00000000 $t
     /tmp/ccZax68S.s:551    .text.DAC_SetDualChannelData:00000000 DAC_SetDualChannelData
     /tmp/ccZax68S.s:593    .text.DAC_SetDualChannelData:00000014 $d
     /tmp/ccZax68S.s:598    .text.DAC_GetDataOutputValue:00000000 $t
     /tmp/ccZax68S.s:604    .text.DAC_GetDataOutputValue:00000000 DAC_GetDataOutputValue
     /tmp/ccZax68S.s:647    .text.DAC_GetDataOutputValue:00000020 $d

UNDEFINED SYMBOLS
RCC_APB1PeriphResetCmd

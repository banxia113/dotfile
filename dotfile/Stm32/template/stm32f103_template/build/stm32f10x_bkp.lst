ARM GAS  /tmp/ccNqU2tg.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f10x_bkp.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "./FWLIB/src/stm32f10x_bkp.c"
  18              		.section	.text.BKP_DeInit,"ax",%progbits
  19              		.align	1
  20              		.global	BKP_DeInit
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	BKP_DeInit:
  26              	.LFB29:
   1:./FWLIB/src/stm32f10x_bkp.c **** /**
   2:./FWLIB/src/stm32f10x_bkp.c ****   ******************************************************************************
   3:./FWLIB/src/stm32f10x_bkp.c ****   * @file    stm32f10x_bkp.c
   4:./FWLIB/src/stm32f10x_bkp.c ****   * @author  MCD Application Team
   5:./FWLIB/src/stm32f10x_bkp.c ****   * @version V3.5.0
   6:./FWLIB/src/stm32f10x_bkp.c ****   * @date    11-March-2011
   7:./FWLIB/src/stm32f10x_bkp.c ****   * @brief   This file provides all the BKP firmware functions.
   8:./FWLIB/src/stm32f10x_bkp.c ****   ******************************************************************************
   9:./FWLIB/src/stm32f10x_bkp.c ****   * @attention
  10:./FWLIB/src/stm32f10x_bkp.c ****   *
  11:./FWLIB/src/stm32f10x_bkp.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  12:./FWLIB/src/stm32f10x_bkp.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  13:./FWLIB/src/stm32f10x_bkp.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  14:./FWLIB/src/stm32f10x_bkp.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  15:./FWLIB/src/stm32f10x_bkp.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  16:./FWLIB/src/stm32f10x_bkp.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  17:./FWLIB/src/stm32f10x_bkp.c ****   *
  18:./FWLIB/src/stm32f10x_bkp.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
  19:./FWLIB/src/stm32f10x_bkp.c ****   ******************************************************************************
  20:./FWLIB/src/stm32f10x_bkp.c ****   */
  21:./FWLIB/src/stm32f10x_bkp.c **** 
  22:./FWLIB/src/stm32f10x_bkp.c **** /* Includes ------------------------------------------------------------------*/
  23:./FWLIB/src/stm32f10x_bkp.c **** #include "stm32f10x_bkp.h"
  24:./FWLIB/src/stm32f10x_bkp.c **** #include "stm32f10x_rcc.h"
  25:./FWLIB/src/stm32f10x_bkp.c **** 
  26:./FWLIB/src/stm32f10x_bkp.c **** /** @addtogroup STM32F10x_StdPeriph_Driver
  27:./FWLIB/src/stm32f10x_bkp.c ****   * @{
  28:./FWLIB/src/stm32f10x_bkp.c ****   */
  29:./FWLIB/src/stm32f10x_bkp.c **** 
  30:./FWLIB/src/stm32f10x_bkp.c **** /** @defgroup BKP 
  31:./FWLIB/src/stm32f10x_bkp.c ****   * @brief BKP driver modules
  32:./FWLIB/src/stm32f10x_bkp.c ****   * @{
ARM GAS  /tmp/ccNqU2tg.s 			page 2


  33:./FWLIB/src/stm32f10x_bkp.c ****   */
  34:./FWLIB/src/stm32f10x_bkp.c **** 
  35:./FWLIB/src/stm32f10x_bkp.c **** /** @defgroup BKP_Private_TypesDefinitions
  36:./FWLIB/src/stm32f10x_bkp.c ****   * @{
  37:./FWLIB/src/stm32f10x_bkp.c ****   */
  38:./FWLIB/src/stm32f10x_bkp.c **** 
  39:./FWLIB/src/stm32f10x_bkp.c **** /**
  40:./FWLIB/src/stm32f10x_bkp.c ****   * @}
  41:./FWLIB/src/stm32f10x_bkp.c ****   */
  42:./FWLIB/src/stm32f10x_bkp.c **** 
  43:./FWLIB/src/stm32f10x_bkp.c **** /** @defgroup BKP_Private_Defines
  44:./FWLIB/src/stm32f10x_bkp.c ****   * @{
  45:./FWLIB/src/stm32f10x_bkp.c ****   */
  46:./FWLIB/src/stm32f10x_bkp.c **** 
  47:./FWLIB/src/stm32f10x_bkp.c **** /* ------------ BKP registers bit address in the alias region --------------- */
  48:./FWLIB/src/stm32f10x_bkp.c **** #define BKP_OFFSET        (BKP_BASE - PERIPH_BASE)
  49:./FWLIB/src/stm32f10x_bkp.c **** 
  50:./FWLIB/src/stm32f10x_bkp.c **** /* --- CR Register ----*/
  51:./FWLIB/src/stm32f10x_bkp.c **** 
  52:./FWLIB/src/stm32f10x_bkp.c **** /* Alias word address of TPAL bit */
  53:./FWLIB/src/stm32f10x_bkp.c **** #define CR_OFFSET         (BKP_OFFSET + 0x30)
  54:./FWLIB/src/stm32f10x_bkp.c **** #define TPAL_BitNumber    0x01
  55:./FWLIB/src/stm32f10x_bkp.c **** #define CR_TPAL_BB        (PERIPH_BB_BASE + (CR_OFFSET * 32) + (TPAL_BitNumber * 4))
  56:./FWLIB/src/stm32f10x_bkp.c **** 
  57:./FWLIB/src/stm32f10x_bkp.c **** /* Alias word address of TPE bit */
  58:./FWLIB/src/stm32f10x_bkp.c **** #define TPE_BitNumber     0x00
  59:./FWLIB/src/stm32f10x_bkp.c **** #define CR_TPE_BB         (PERIPH_BB_BASE + (CR_OFFSET * 32) + (TPE_BitNumber * 4))
  60:./FWLIB/src/stm32f10x_bkp.c **** 
  61:./FWLIB/src/stm32f10x_bkp.c **** /* --- CSR Register ---*/
  62:./FWLIB/src/stm32f10x_bkp.c **** 
  63:./FWLIB/src/stm32f10x_bkp.c **** /* Alias word address of TPIE bit */
  64:./FWLIB/src/stm32f10x_bkp.c **** #define CSR_OFFSET        (BKP_OFFSET + 0x34)
  65:./FWLIB/src/stm32f10x_bkp.c **** #define TPIE_BitNumber    0x02
  66:./FWLIB/src/stm32f10x_bkp.c **** #define CSR_TPIE_BB       (PERIPH_BB_BASE + (CSR_OFFSET * 32) + (TPIE_BitNumber * 4))
  67:./FWLIB/src/stm32f10x_bkp.c **** 
  68:./FWLIB/src/stm32f10x_bkp.c **** /* Alias word address of TIF bit */
  69:./FWLIB/src/stm32f10x_bkp.c **** #define TIF_BitNumber     0x09
  70:./FWLIB/src/stm32f10x_bkp.c **** #define CSR_TIF_BB        (PERIPH_BB_BASE + (CSR_OFFSET * 32) + (TIF_BitNumber * 4))
  71:./FWLIB/src/stm32f10x_bkp.c **** 
  72:./FWLIB/src/stm32f10x_bkp.c **** /* Alias word address of TEF bit */
  73:./FWLIB/src/stm32f10x_bkp.c **** #define TEF_BitNumber     0x08
  74:./FWLIB/src/stm32f10x_bkp.c **** #define CSR_TEF_BB        (PERIPH_BB_BASE + (CSR_OFFSET * 32) + (TEF_BitNumber * 4))
  75:./FWLIB/src/stm32f10x_bkp.c **** 
  76:./FWLIB/src/stm32f10x_bkp.c **** /* ---------------------- BKP registers bit mask ------------------------ */
  77:./FWLIB/src/stm32f10x_bkp.c **** 
  78:./FWLIB/src/stm32f10x_bkp.c **** /* RTCCR register bit mask */
  79:./FWLIB/src/stm32f10x_bkp.c **** #define RTCCR_CAL_MASK    ((uint16_t)0xFF80)
  80:./FWLIB/src/stm32f10x_bkp.c **** #define RTCCR_MASK        ((uint16_t)0xFC7F)
  81:./FWLIB/src/stm32f10x_bkp.c **** 
  82:./FWLIB/src/stm32f10x_bkp.c **** /**
  83:./FWLIB/src/stm32f10x_bkp.c ****   * @}
  84:./FWLIB/src/stm32f10x_bkp.c ****   */ 
  85:./FWLIB/src/stm32f10x_bkp.c **** 
  86:./FWLIB/src/stm32f10x_bkp.c **** 
  87:./FWLIB/src/stm32f10x_bkp.c **** /** @defgroup BKP_Private_Macros
  88:./FWLIB/src/stm32f10x_bkp.c ****   * @{
  89:./FWLIB/src/stm32f10x_bkp.c ****   */
ARM GAS  /tmp/ccNqU2tg.s 			page 3


  90:./FWLIB/src/stm32f10x_bkp.c **** 
  91:./FWLIB/src/stm32f10x_bkp.c **** /**
  92:./FWLIB/src/stm32f10x_bkp.c ****   * @}
  93:./FWLIB/src/stm32f10x_bkp.c ****   */
  94:./FWLIB/src/stm32f10x_bkp.c **** 
  95:./FWLIB/src/stm32f10x_bkp.c **** /** @defgroup BKP_Private_Variables
  96:./FWLIB/src/stm32f10x_bkp.c ****   * @{
  97:./FWLIB/src/stm32f10x_bkp.c ****   */
  98:./FWLIB/src/stm32f10x_bkp.c **** 
  99:./FWLIB/src/stm32f10x_bkp.c **** /**
 100:./FWLIB/src/stm32f10x_bkp.c ****   * @}
 101:./FWLIB/src/stm32f10x_bkp.c ****   */
 102:./FWLIB/src/stm32f10x_bkp.c **** 
 103:./FWLIB/src/stm32f10x_bkp.c **** /** @defgroup BKP_Private_FunctionPrototypes
 104:./FWLIB/src/stm32f10x_bkp.c ****   * @{
 105:./FWLIB/src/stm32f10x_bkp.c ****   */
 106:./FWLIB/src/stm32f10x_bkp.c **** 
 107:./FWLIB/src/stm32f10x_bkp.c **** /**
 108:./FWLIB/src/stm32f10x_bkp.c ****   * @}
 109:./FWLIB/src/stm32f10x_bkp.c ****   */
 110:./FWLIB/src/stm32f10x_bkp.c **** 
 111:./FWLIB/src/stm32f10x_bkp.c **** /** @defgroup BKP_Private_Functions
 112:./FWLIB/src/stm32f10x_bkp.c ****   * @{
 113:./FWLIB/src/stm32f10x_bkp.c ****   */
 114:./FWLIB/src/stm32f10x_bkp.c **** 
 115:./FWLIB/src/stm32f10x_bkp.c **** /**
 116:./FWLIB/src/stm32f10x_bkp.c ****   * @brief  Deinitializes the BKP peripheral registers to their default reset values.
 117:./FWLIB/src/stm32f10x_bkp.c ****   * @param  None
 118:./FWLIB/src/stm32f10x_bkp.c ****   * @retval None
 119:./FWLIB/src/stm32f10x_bkp.c ****   */
 120:./FWLIB/src/stm32f10x_bkp.c **** void BKP_DeInit(void)
 121:./FWLIB/src/stm32f10x_bkp.c **** {
  27              		.loc 1 121 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 08B5     		push	{r3, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 3, -8
  35              		.cfi_offset 14, -4
 122:./FWLIB/src/stm32f10x_bkp.c ****   RCC_BackupResetCmd(ENABLE);
  36              		.loc 1 122 3 view .LVU1
  37 0002 0120     		movs	r0, #1
  38 0004 FFF7FEFF 		bl	RCC_BackupResetCmd
  39              	.LVL0:
 123:./FWLIB/src/stm32f10x_bkp.c ****   RCC_BackupResetCmd(DISABLE);
  40              		.loc 1 123 3 view .LVU2
  41 0008 0020     		movs	r0, #0
  42 000a FFF7FEFF 		bl	RCC_BackupResetCmd
  43              	.LVL1:
 124:./FWLIB/src/stm32f10x_bkp.c **** }
  44              		.loc 1 124 1 is_stmt 0 view .LVU3
  45 000e 08BD     		pop	{r3, pc}
  46              		.cfi_endproc
  47              	.LFE29:
  49              		.section	.text.BKP_TamperPinLevelConfig,"ax",%progbits
ARM GAS  /tmp/ccNqU2tg.s 			page 4


  50              		.align	1
  51              		.global	BKP_TamperPinLevelConfig
  52              		.syntax unified
  53              		.thumb
  54              		.thumb_func
  56              	BKP_TamperPinLevelConfig:
  57              	.LVL2:
  58              	.LFB30:
 125:./FWLIB/src/stm32f10x_bkp.c **** 
 126:./FWLIB/src/stm32f10x_bkp.c **** /**
 127:./FWLIB/src/stm32f10x_bkp.c ****   * @brief  Configures the Tamper Pin active level.
 128:./FWLIB/src/stm32f10x_bkp.c ****   * @param  BKP_TamperPinLevel: specifies the Tamper Pin active level.
 129:./FWLIB/src/stm32f10x_bkp.c ****   *   This parameter can be one of the following values:
 130:./FWLIB/src/stm32f10x_bkp.c ****   *     @arg BKP_TamperPinLevel_High: Tamper pin active on high level
 131:./FWLIB/src/stm32f10x_bkp.c ****   *     @arg BKP_TamperPinLevel_Low: Tamper pin active on low level
 132:./FWLIB/src/stm32f10x_bkp.c ****   * @retval None
 133:./FWLIB/src/stm32f10x_bkp.c ****   */
 134:./FWLIB/src/stm32f10x_bkp.c **** void BKP_TamperPinLevelConfig(uint16_t BKP_TamperPinLevel)
 135:./FWLIB/src/stm32f10x_bkp.c **** {
  59              		.loc 1 135 1 is_stmt 1 view -0
  60              		.cfi_startproc
  61              		@ args = 0, pretend = 0, frame = 0
  62              		@ frame_needed = 0, uses_anonymous_args = 0
  63              		@ link register save eliminated.
 136:./FWLIB/src/stm32f10x_bkp.c ****   /* Check the parameters */
 137:./FWLIB/src/stm32f10x_bkp.c ****   assert_param(IS_BKP_TAMPER_PIN_LEVEL(BKP_TamperPinLevel));
  64              		.loc 1 137 3 view .LVU5
 138:./FWLIB/src/stm32f10x_bkp.c ****   *(__IO uint32_t *) CR_TPAL_BB = BKP_TamperPinLevel;
  65              		.loc 1 138 3 view .LVU6
  66              		.loc 1 138 33 is_stmt 0 view .LVU7
  67 0000 014B     		ldr	r3, .L4
  68 0002 C3F80406 		str	r0, [r3, #1540]
 139:./FWLIB/src/stm32f10x_bkp.c **** }
  69              		.loc 1 139 1 view .LVU8
  70 0006 7047     		bx	lr
  71              	.L5:
  72              		.align	2
  73              	.L4:
  74 0008 00800D42 		.word	1108180992
  75              		.cfi_endproc
  76              	.LFE30:
  78              		.section	.text.BKP_TamperPinCmd,"ax",%progbits
  79              		.align	1
  80              		.global	BKP_TamperPinCmd
  81              		.syntax unified
  82              		.thumb
  83              		.thumb_func
  85              	BKP_TamperPinCmd:
  86              	.LVL3:
  87              	.LFB31:
 140:./FWLIB/src/stm32f10x_bkp.c **** 
 141:./FWLIB/src/stm32f10x_bkp.c **** /**
 142:./FWLIB/src/stm32f10x_bkp.c ****   * @brief  Enables or disables the Tamper Pin activation.
 143:./FWLIB/src/stm32f10x_bkp.c ****   * @param  NewState: new state of the Tamper Pin activation.
 144:./FWLIB/src/stm32f10x_bkp.c ****   *   This parameter can be: ENABLE or DISABLE.
 145:./FWLIB/src/stm32f10x_bkp.c ****   * @retval None
 146:./FWLIB/src/stm32f10x_bkp.c ****   */
ARM GAS  /tmp/ccNqU2tg.s 			page 5


 147:./FWLIB/src/stm32f10x_bkp.c **** void BKP_TamperPinCmd(FunctionalState NewState)
 148:./FWLIB/src/stm32f10x_bkp.c **** {
  88              		.loc 1 148 1 is_stmt 1 view -0
  89              		.cfi_startproc
  90              		@ args = 0, pretend = 0, frame = 0
  91              		@ frame_needed = 0, uses_anonymous_args = 0
  92              		@ link register save eliminated.
 149:./FWLIB/src/stm32f10x_bkp.c ****   /* Check the parameters */
 150:./FWLIB/src/stm32f10x_bkp.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
  93              		.loc 1 150 3 view .LVU10
 151:./FWLIB/src/stm32f10x_bkp.c ****   *(__IO uint32_t *) CR_TPE_BB = (uint32_t)NewState;
  94              		.loc 1 151 3 view .LVU11
  95              		.loc 1 151 32 is_stmt 0 view .LVU12
  96 0000 014B     		ldr	r3, .L7
  97 0002 C3F80006 		str	r0, [r3, #1536]
 152:./FWLIB/src/stm32f10x_bkp.c **** }
  98              		.loc 1 152 1 view .LVU13
  99 0006 7047     		bx	lr
 100              	.L8:
 101              		.align	2
 102              	.L7:
 103 0008 00800D42 		.word	1108180992
 104              		.cfi_endproc
 105              	.LFE31:
 107              		.section	.text.BKP_ITConfig,"ax",%progbits
 108              		.align	1
 109              		.global	BKP_ITConfig
 110              		.syntax unified
 111              		.thumb
 112              		.thumb_func
 114              	BKP_ITConfig:
 115              	.LVL4:
 116              	.LFB32:
 153:./FWLIB/src/stm32f10x_bkp.c **** 
 154:./FWLIB/src/stm32f10x_bkp.c **** /**
 155:./FWLIB/src/stm32f10x_bkp.c ****   * @brief  Enables or disables the Tamper Pin Interrupt.
 156:./FWLIB/src/stm32f10x_bkp.c ****   * @param  NewState: new state of the Tamper Pin Interrupt.
 157:./FWLIB/src/stm32f10x_bkp.c ****   *   This parameter can be: ENABLE or DISABLE.
 158:./FWLIB/src/stm32f10x_bkp.c ****   * @retval None
 159:./FWLIB/src/stm32f10x_bkp.c ****   */
 160:./FWLIB/src/stm32f10x_bkp.c **** void BKP_ITConfig(FunctionalState NewState)
 161:./FWLIB/src/stm32f10x_bkp.c **** {
 117              		.loc 1 161 1 is_stmt 1 view -0
 118              		.cfi_startproc
 119              		@ args = 0, pretend = 0, frame = 0
 120              		@ frame_needed = 0, uses_anonymous_args = 0
 121              		@ link register save eliminated.
 162:./FWLIB/src/stm32f10x_bkp.c ****   /* Check the parameters */
 163:./FWLIB/src/stm32f10x_bkp.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 122              		.loc 1 163 3 view .LVU15
 164:./FWLIB/src/stm32f10x_bkp.c ****   *(__IO uint32_t *) CSR_TPIE_BB = (uint32_t)NewState;
 123              		.loc 1 164 3 view .LVU16
 124              		.loc 1 164 34 is_stmt 0 view .LVU17
 125 0000 014B     		ldr	r3, .L10
 126 0002 C3F88806 		str	r0, [r3, #1672]
 165:./FWLIB/src/stm32f10x_bkp.c **** }
 127              		.loc 1 165 1 view .LVU18
ARM GAS  /tmp/ccNqU2tg.s 			page 6


 128 0006 7047     		bx	lr
 129              	.L11:
 130              		.align	2
 131              	.L10:
 132 0008 00800D42 		.word	1108180992
 133              		.cfi_endproc
 134              	.LFE32:
 136              		.section	.text.BKP_RTCOutputConfig,"ax",%progbits
 137              		.align	1
 138              		.global	BKP_RTCOutputConfig
 139              		.syntax unified
 140              		.thumb
 141              		.thumb_func
 143              	BKP_RTCOutputConfig:
 144              	.LVL5:
 145              	.LFB33:
 166:./FWLIB/src/stm32f10x_bkp.c **** 
 167:./FWLIB/src/stm32f10x_bkp.c **** /**
 168:./FWLIB/src/stm32f10x_bkp.c ****   * @brief  Select the RTC output source to output on the Tamper pin.
 169:./FWLIB/src/stm32f10x_bkp.c ****   * @param  BKP_RTCOutputSource: specifies the RTC output source.
 170:./FWLIB/src/stm32f10x_bkp.c ****   *   This parameter can be one of the following values:
 171:./FWLIB/src/stm32f10x_bkp.c ****   *     @arg BKP_RTCOutputSource_None: no RTC output on the Tamper pin.
 172:./FWLIB/src/stm32f10x_bkp.c ****   *     @arg BKP_RTCOutputSource_CalibClock: output the RTC clock with frequency
 173:./FWLIB/src/stm32f10x_bkp.c ****   *                                          divided by 64 on the Tamper pin.
 174:./FWLIB/src/stm32f10x_bkp.c ****   *     @arg BKP_RTCOutputSource_Alarm: output the RTC Alarm pulse signal on
 175:./FWLIB/src/stm32f10x_bkp.c ****   *                                     the Tamper pin.
 176:./FWLIB/src/stm32f10x_bkp.c ****   *     @arg BKP_RTCOutputSource_Second: output the RTC Second pulse signal on
 177:./FWLIB/src/stm32f10x_bkp.c ****   *                                      the Tamper pin.  
 178:./FWLIB/src/stm32f10x_bkp.c ****   * @retval None
 179:./FWLIB/src/stm32f10x_bkp.c ****   */
 180:./FWLIB/src/stm32f10x_bkp.c **** void BKP_RTCOutputConfig(uint16_t BKP_RTCOutputSource)
 181:./FWLIB/src/stm32f10x_bkp.c **** {
 146              		.loc 1 181 1 is_stmt 1 view -0
 147              		.cfi_startproc
 148              		@ args = 0, pretend = 0, frame = 0
 149              		@ frame_needed = 0, uses_anonymous_args = 0
 150              		@ link register save eliminated.
 182:./FWLIB/src/stm32f10x_bkp.c ****   uint16_t tmpreg = 0;
 151              		.loc 1 182 3 view .LVU20
 183:./FWLIB/src/stm32f10x_bkp.c ****   /* Check the parameters */
 184:./FWLIB/src/stm32f10x_bkp.c ****   assert_param(IS_BKP_RTC_OUTPUT_SOURCE(BKP_RTCOutputSource));
 152              		.loc 1 184 3 view .LVU21
 185:./FWLIB/src/stm32f10x_bkp.c ****   tmpreg = BKP->RTCCR;
 153              		.loc 1 185 3 view .LVU22
 154              		.loc 1 185 10 is_stmt 0 view .LVU23
 155 0000 034A     		ldr	r2, .L13
 156 0002 938D     		ldrh	r3, [r2, #44]
 157 0004 9BB2     		uxth	r3, r3
 158              	.LVL6:
 186:./FWLIB/src/stm32f10x_bkp.c ****   /* Clear CCO, ASOE and ASOS bits */
 187:./FWLIB/src/stm32f10x_bkp.c ****   tmpreg &= RTCCR_MASK;
 159              		.loc 1 187 3 is_stmt 1 view .LVU24
 160              		.loc 1 187 10 is_stmt 0 view .LVU25
 161 0006 23F46073 		bic	r3, r3, #896
 162              	.LVL7:
 188:./FWLIB/src/stm32f10x_bkp.c ****   
 189:./FWLIB/src/stm32f10x_bkp.c ****   /* Set CCO, ASOE and ASOS bits according to BKP_RTCOutputSource value */
ARM GAS  /tmp/ccNqU2tg.s 			page 7


 190:./FWLIB/src/stm32f10x_bkp.c ****   tmpreg |= BKP_RTCOutputSource;
 163              		.loc 1 190 3 is_stmt 1 view .LVU26
 164              		.loc 1 190 10 is_stmt 0 view .LVU27
 165 000a 0343     		orrs	r3, r3, r0
 166              	.LVL8:
 191:./FWLIB/src/stm32f10x_bkp.c ****   /* Store the new value */
 192:./FWLIB/src/stm32f10x_bkp.c ****   BKP->RTCCR = tmpreg;
 167              		.loc 1 192 3 is_stmt 1 view .LVU28
 168              		.loc 1 192 14 is_stmt 0 view .LVU29
 169 000c 9385     		strh	r3, [r2, #44]	@ movhi
 193:./FWLIB/src/stm32f10x_bkp.c **** }
 170              		.loc 1 193 1 view .LVU30
 171 000e 7047     		bx	lr
 172              	.L14:
 173              		.align	2
 174              	.L13:
 175 0010 006C0040 		.word	1073769472
 176              		.cfi_endproc
 177              	.LFE33:
 179              		.section	.text.BKP_SetRTCCalibrationValue,"ax",%progbits
 180              		.align	1
 181              		.global	BKP_SetRTCCalibrationValue
 182              		.syntax unified
 183              		.thumb
 184              		.thumb_func
 186              	BKP_SetRTCCalibrationValue:
 187              	.LVL9:
 188              	.LFB34:
 194:./FWLIB/src/stm32f10x_bkp.c **** 
 195:./FWLIB/src/stm32f10x_bkp.c **** /**
 196:./FWLIB/src/stm32f10x_bkp.c ****   * @brief  Sets RTC Clock Calibration value.
 197:./FWLIB/src/stm32f10x_bkp.c ****   * @param  CalibrationValue: specifies the RTC Clock Calibration value.
 198:./FWLIB/src/stm32f10x_bkp.c ****   *   This parameter must be a number between 0 and 0x7F.
 199:./FWLIB/src/stm32f10x_bkp.c ****   * @retval None
 200:./FWLIB/src/stm32f10x_bkp.c ****   */
 201:./FWLIB/src/stm32f10x_bkp.c **** void BKP_SetRTCCalibrationValue(uint8_t CalibrationValue)
 202:./FWLIB/src/stm32f10x_bkp.c **** {
 189              		.loc 1 202 1 is_stmt 1 view -0
 190              		.cfi_startproc
 191              		@ args = 0, pretend = 0, frame = 0
 192              		@ frame_needed = 0, uses_anonymous_args = 0
 193              		@ link register save eliminated.
 203:./FWLIB/src/stm32f10x_bkp.c ****   uint16_t tmpreg = 0;
 194              		.loc 1 203 3 view .LVU32
 204:./FWLIB/src/stm32f10x_bkp.c ****   /* Check the parameters */
 205:./FWLIB/src/stm32f10x_bkp.c ****   assert_param(IS_BKP_CALIBRATION_VALUE(CalibrationValue));
 195              		.loc 1 205 3 view .LVU33
 206:./FWLIB/src/stm32f10x_bkp.c ****   tmpreg = BKP->RTCCR;
 196              		.loc 1 206 3 view .LVU34
 197              		.loc 1 206 10 is_stmt 0 view .LVU35
 198 0000 034A     		ldr	r2, .L16
 199 0002 938D     		ldrh	r3, [r2, #44]
 200 0004 9BB2     		uxth	r3, r3
 201              	.LVL10:
 207:./FWLIB/src/stm32f10x_bkp.c ****   /* Clear CAL[6:0] bits */
 208:./FWLIB/src/stm32f10x_bkp.c ****   tmpreg &= RTCCR_CAL_MASK;
 202              		.loc 1 208 3 is_stmt 1 view .LVU36
ARM GAS  /tmp/ccNqU2tg.s 			page 8


 203              		.loc 1 208 10 is_stmt 0 view .LVU37
 204 0006 23F07F03 		bic	r3, r3, #127
 205              	.LVL11:
 209:./FWLIB/src/stm32f10x_bkp.c ****   /* Set CAL[6:0] bits according to CalibrationValue value */
 210:./FWLIB/src/stm32f10x_bkp.c ****   tmpreg |= CalibrationValue;
 206              		.loc 1 210 3 is_stmt 1 view .LVU38
 207              		.loc 1 210 10 is_stmt 0 view .LVU39
 208 000a 0343     		orrs	r3, r3, r0
 209              	.LVL12:
 211:./FWLIB/src/stm32f10x_bkp.c ****   /* Store the new value */
 212:./FWLIB/src/stm32f10x_bkp.c ****   BKP->RTCCR = tmpreg;
 210              		.loc 1 212 3 is_stmt 1 view .LVU40
 211              		.loc 1 212 14 is_stmt 0 view .LVU41
 212 000c 9385     		strh	r3, [r2, #44]	@ movhi
 213:./FWLIB/src/stm32f10x_bkp.c **** }
 213              		.loc 1 213 1 view .LVU42
 214 000e 7047     		bx	lr
 215              	.L17:
 216              		.align	2
 217              	.L16:
 218 0010 006C0040 		.word	1073769472
 219              		.cfi_endproc
 220              	.LFE34:
 222              		.section	.text.BKP_WriteBackupRegister,"ax",%progbits
 223              		.align	1
 224              		.global	BKP_WriteBackupRegister
 225              		.syntax unified
 226              		.thumb
 227              		.thumb_func
 229              	BKP_WriteBackupRegister:
 230              	.LVL13:
 231              	.LFB35:
 214:./FWLIB/src/stm32f10x_bkp.c **** 
 215:./FWLIB/src/stm32f10x_bkp.c **** /**
 216:./FWLIB/src/stm32f10x_bkp.c ****   * @brief  Writes user data to the specified Data Backup Register.
 217:./FWLIB/src/stm32f10x_bkp.c ****   * @param  BKP_DR: specifies the Data Backup Register.
 218:./FWLIB/src/stm32f10x_bkp.c ****   *   This parameter can be BKP_DRx where x:[1, 42]
 219:./FWLIB/src/stm32f10x_bkp.c ****   * @param  Data: data to write
 220:./FWLIB/src/stm32f10x_bkp.c ****   * @retval None
 221:./FWLIB/src/stm32f10x_bkp.c ****   */
 222:./FWLIB/src/stm32f10x_bkp.c **** void BKP_WriteBackupRegister(uint16_t BKP_DR, uint16_t Data)
 223:./FWLIB/src/stm32f10x_bkp.c **** {
 232              		.loc 1 223 1 is_stmt 1 view -0
 233              		.cfi_startproc
 234              		@ args = 0, pretend = 0, frame = 8
 235              		@ frame_needed = 0, uses_anonymous_args = 0
 236              		@ link register save eliminated.
 237              		.loc 1 223 1 is_stmt 0 view .LVU44
 238 0000 82B0     		sub	sp, sp, #8
 239              	.LCFI1:
 240              		.cfi_def_cfa_offset 8
 224:./FWLIB/src/stm32f10x_bkp.c ****   __IO uint32_t tmp = 0;
 241              		.loc 1 224 3 is_stmt 1 view .LVU45
 242              		.loc 1 224 17 is_stmt 0 view .LVU46
 243 0002 0023     		movs	r3, #0
 244 0004 0193     		str	r3, [sp, #4]
 225:./FWLIB/src/stm32f10x_bkp.c **** 
ARM GAS  /tmp/ccNqU2tg.s 			page 9


 226:./FWLIB/src/stm32f10x_bkp.c ****   /* Check the parameters */
 227:./FWLIB/src/stm32f10x_bkp.c ****   assert_param(IS_BKP_DR(BKP_DR));
 245              		.loc 1 227 3 is_stmt 1 view .LVU47
 228:./FWLIB/src/stm32f10x_bkp.c **** 
 229:./FWLIB/src/stm32f10x_bkp.c ****   tmp = (uint32_t)BKP_BASE; 
 246              		.loc 1 229 3 view .LVU48
 247              		.loc 1 229 7 is_stmt 0 view .LVU49
 248 0006 044B     		ldr	r3, .L20
 249 0008 0193     		str	r3, [sp, #4]
 230:./FWLIB/src/stm32f10x_bkp.c ****   tmp += BKP_DR;
 250              		.loc 1 230 3 is_stmt 1 view .LVU50
 251              		.loc 1 230 7 is_stmt 0 view .LVU51
 252 000a 019B     		ldr	r3, [sp, #4]
 253 000c 1844     		add	r0, r0, r3
 254              	.LVL14:
 255              		.loc 1 230 7 view .LVU52
 256 000e 0190     		str	r0, [sp, #4]
 231:./FWLIB/src/stm32f10x_bkp.c **** 
 232:./FWLIB/src/stm32f10x_bkp.c ****   *(__IO uint32_t *) tmp = Data;
 257              		.loc 1 232 3 is_stmt 1 view .LVU53
 258              		.loc 1 232 4 is_stmt 0 view .LVU54
 259 0010 019B     		ldr	r3, [sp, #4]
 260              		.loc 1 232 26 view .LVU55
 261 0012 1960     		str	r1, [r3]
 233:./FWLIB/src/stm32f10x_bkp.c **** }
 262              		.loc 1 233 1 view .LVU56
 263 0014 02B0     		add	sp, sp, #8
 264              	.LCFI2:
 265              		.cfi_def_cfa_offset 0
 266              		@ sp needed
 267 0016 7047     		bx	lr
 268              	.L21:
 269              		.align	2
 270              	.L20:
 271 0018 006C0040 		.word	1073769472
 272              		.cfi_endproc
 273              	.LFE35:
 275              		.section	.text.BKP_ReadBackupRegister,"ax",%progbits
 276              		.align	1
 277              		.global	BKP_ReadBackupRegister
 278              		.syntax unified
 279              		.thumb
 280              		.thumb_func
 282              	BKP_ReadBackupRegister:
 283              	.LVL15:
 284              	.LFB36:
 234:./FWLIB/src/stm32f10x_bkp.c **** 
 235:./FWLIB/src/stm32f10x_bkp.c **** /**
 236:./FWLIB/src/stm32f10x_bkp.c ****   * @brief  Reads data from the specified Data Backup Register.
 237:./FWLIB/src/stm32f10x_bkp.c ****   * @param  BKP_DR: specifies the Data Backup Register.
 238:./FWLIB/src/stm32f10x_bkp.c ****   *   This parameter can be BKP_DRx where x:[1, 42]
 239:./FWLIB/src/stm32f10x_bkp.c ****   * @retval The content of the specified Data Backup Register
 240:./FWLIB/src/stm32f10x_bkp.c ****   */
 241:./FWLIB/src/stm32f10x_bkp.c **** uint16_t BKP_ReadBackupRegister(uint16_t BKP_DR)
 242:./FWLIB/src/stm32f10x_bkp.c **** {
 285              		.loc 1 242 1 is_stmt 1 view -0
 286              		.cfi_startproc
ARM GAS  /tmp/ccNqU2tg.s 			page 10


 287              		@ args = 0, pretend = 0, frame = 8
 288              		@ frame_needed = 0, uses_anonymous_args = 0
 289              		@ link register save eliminated.
 290              		.loc 1 242 1 is_stmt 0 view .LVU58
 291 0000 82B0     		sub	sp, sp, #8
 292              	.LCFI3:
 293              		.cfi_def_cfa_offset 8
 243:./FWLIB/src/stm32f10x_bkp.c ****   __IO uint32_t tmp = 0;
 294              		.loc 1 243 3 is_stmt 1 view .LVU59
 295              		.loc 1 243 17 is_stmt 0 view .LVU60
 296 0002 0023     		movs	r3, #0
 297 0004 0193     		str	r3, [sp, #4]
 244:./FWLIB/src/stm32f10x_bkp.c **** 
 245:./FWLIB/src/stm32f10x_bkp.c ****   /* Check the parameters */
 246:./FWLIB/src/stm32f10x_bkp.c ****   assert_param(IS_BKP_DR(BKP_DR));
 298              		.loc 1 246 3 is_stmt 1 view .LVU61
 247:./FWLIB/src/stm32f10x_bkp.c **** 
 248:./FWLIB/src/stm32f10x_bkp.c ****   tmp = (uint32_t)BKP_BASE; 
 299              		.loc 1 248 3 view .LVU62
 300              		.loc 1 248 7 is_stmt 0 view .LVU63
 301 0006 054B     		ldr	r3, .L24
 302 0008 0193     		str	r3, [sp, #4]
 249:./FWLIB/src/stm32f10x_bkp.c ****   tmp += BKP_DR;
 303              		.loc 1 249 3 is_stmt 1 view .LVU64
 304              		.loc 1 249 7 is_stmt 0 view .LVU65
 305 000a 019B     		ldr	r3, [sp, #4]
 306 000c 1844     		add	r0, r0, r3
 307              	.LVL16:
 308              		.loc 1 249 7 view .LVU66
 309 000e 0190     		str	r0, [sp, #4]
 250:./FWLIB/src/stm32f10x_bkp.c **** 
 251:./FWLIB/src/stm32f10x_bkp.c ****   return (*(__IO uint16_t *) tmp);
 310              		.loc 1 251 3 is_stmt 1 view .LVU67
 311              		.loc 1 251 12 is_stmt 0 view .LVU68
 312 0010 019B     		ldr	r3, [sp, #4]
 313              		.loc 1 251 11 view .LVU69
 314 0012 1888     		ldrh	r0, [r3]
 252:./FWLIB/src/stm32f10x_bkp.c **** }
 315              		.loc 1 252 1 view .LVU70
 316 0014 80B2     		uxth	r0, r0
 317 0016 02B0     		add	sp, sp, #8
 318              	.LCFI4:
 319              		.cfi_def_cfa_offset 0
 320              		@ sp needed
 321 0018 7047     		bx	lr
 322              	.L25:
 323 001a 00BF     		.align	2
 324              	.L24:
 325 001c 006C0040 		.word	1073769472
 326              		.cfi_endproc
 327              	.LFE36:
 329              		.section	.text.BKP_GetFlagStatus,"ax",%progbits
 330              		.align	1
 331              		.global	BKP_GetFlagStatus
 332              		.syntax unified
 333              		.thumb
 334              		.thumb_func
ARM GAS  /tmp/ccNqU2tg.s 			page 11


 336              	BKP_GetFlagStatus:
 337              	.LFB37:
 253:./FWLIB/src/stm32f10x_bkp.c **** 
 254:./FWLIB/src/stm32f10x_bkp.c **** /**
 255:./FWLIB/src/stm32f10x_bkp.c ****   * @brief  Checks whether the Tamper Pin Event flag is set or not.
 256:./FWLIB/src/stm32f10x_bkp.c ****   * @param  None
 257:./FWLIB/src/stm32f10x_bkp.c ****   * @retval The new state of the Tamper Pin Event flag (SET or RESET).
 258:./FWLIB/src/stm32f10x_bkp.c ****   */
 259:./FWLIB/src/stm32f10x_bkp.c **** FlagStatus BKP_GetFlagStatus(void)
 260:./FWLIB/src/stm32f10x_bkp.c **** {
 338              		.loc 1 260 1 is_stmt 1 view -0
 339              		.cfi_startproc
 340              		@ args = 0, pretend = 0, frame = 0
 341              		@ frame_needed = 0, uses_anonymous_args = 0
 342              		@ link register save eliminated.
 261:./FWLIB/src/stm32f10x_bkp.c ****   return (FlagStatus)(*(__IO uint32_t *) CSR_TEF_BB);
 343              		.loc 1 261 3 view .LVU72
 344              		.loc 1 261 23 is_stmt 0 view .LVU73
 345 0000 024B     		ldr	r3, .L27
 346 0002 D3F8A006 		ldr	r0, [r3, #1696]
 262:./FWLIB/src/stm32f10x_bkp.c **** }
 347              		.loc 1 262 1 view .LVU74
 348 0006 C0B2     		uxtb	r0, r0
 349 0008 7047     		bx	lr
 350              	.L28:
 351 000a 00BF     		.align	2
 352              	.L27:
 353 000c 00800D42 		.word	1108180992
 354              		.cfi_endproc
 355              	.LFE37:
 357              		.section	.text.BKP_ClearFlag,"ax",%progbits
 358              		.align	1
 359              		.global	BKP_ClearFlag
 360              		.syntax unified
 361              		.thumb
 362              		.thumb_func
 364              	BKP_ClearFlag:
 365              	.LFB38:
 263:./FWLIB/src/stm32f10x_bkp.c **** 
 264:./FWLIB/src/stm32f10x_bkp.c **** /**
 265:./FWLIB/src/stm32f10x_bkp.c ****   * @brief  Clears Tamper Pin Event pending flag.
 266:./FWLIB/src/stm32f10x_bkp.c ****   * @param  None
 267:./FWLIB/src/stm32f10x_bkp.c ****   * @retval None
 268:./FWLIB/src/stm32f10x_bkp.c ****   */
 269:./FWLIB/src/stm32f10x_bkp.c **** void BKP_ClearFlag(void)
 270:./FWLIB/src/stm32f10x_bkp.c **** {
 366              		.loc 1 270 1 is_stmt 1 view -0
 367              		.cfi_startproc
 368              		@ args = 0, pretend = 0, frame = 0
 369              		@ frame_needed = 0, uses_anonymous_args = 0
 370              		@ link register save eliminated.
 271:./FWLIB/src/stm32f10x_bkp.c ****   /* Set CTE bit to clear Tamper Pin Event flag */
 272:./FWLIB/src/stm32f10x_bkp.c ****   BKP->CSR |= BKP_CSR_CTE;
 371              		.loc 1 272 3 view .LVU76
 372              		.loc 1 272 6 is_stmt 0 view .LVU77
 373 0000 034A     		ldr	r2, .L30
 374 0002 938E     		ldrh	r3, [r2, #52]
ARM GAS  /tmp/ccNqU2tg.s 			page 12


 375 0004 9BB2     		uxth	r3, r3
 376              		.loc 1 272 12 view .LVU78
 377 0006 43F00103 		orr	r3, r3, #1
 378 000a 9386     		strh	r3, [r2, #52]	@ movhi
 273:./FWLIB/src/stm32f10x_bkp.c **** }
 379              		.loc 1 273 1 view .LVU79
 380 000c 7047     		bx	lr
 381              	.L31:
 382 000e 00BF     		.align	2
 383              	.L30:
 384 0010 006C0040 		.word	1073769472
 385              		.cfi_endproc
 386              	.LFE38:
 388              		.section	.text.BKP_GetITStatus,"ax",%progbits
 389              		.align	1
 390              		.global	BKP_GetITStatus
 391              		.syntax unified
 392              		.thumb
 393              		.thumb_func
 395              	BKP_GetITStatus:
 396              	.LFB39:
 274:./FWLIB/src/stm32f10x_bkp.c **** 
 275:./FWLIB/src/stm32f10x_bkp.c **** /**
 276:./FWLIB/src/stm32f10x_bkp.c ****   * @brief  Checks whether the Tamper Pin Interrupt has occurred or not.
 277:./FWLIB/src/stm32f10x_bkp.c ****   * @param  None
 278:./FWLIB/src/stm32f10x_bkp.c ****   * @retval The new state of the Tamper Pin Interrupt (SET or RESET).
 279:./FWLIB/src/stm32f10x_bkp.c ****   */
 280:./FWLIB/src/stm32f10x_bkp.c **** ITStatus BKP_GetITStatus(void)
 281:./FWLIB/src/stm32f10x_bkp.c **** {
 397              		.loc 1 281 1 is_stmt 1 view -0
 398              		.cfi_startproc
 399              		@ args = 0, pretend = 0, frame = 0
 400              		@ frame_needed = 0, uses_anonymous_args = 0
 401              		@ link register save eliminated.
 282:./FWLIB/src/stm32f10x_bkp.c ****   return (ITStatus)(*(__IO uint32_t *) CSR_TIF_BB);
 402              		.loc 1 282 3 view .LVU81
 403              		.loc 1 282 21 is_stmt 0 view .LVU82
 404 0000 024B     		ldr	r3, .L33
 405 0002 D3F8A406 		ldr	r0, [r3, #1700]
 283:./FWLIB/src/stm32f10x_bkp.c **** }
 406              		.loc 1 283 1 view .LVU83
 407 0006 C0B2     		uxtb	r0, r0
 408 0008 7047     		bx	lr
 409              	.L34:
 410 000a 00BF     		.align	2
 411              	.L33:
 412 000c 00800D42 		.word	1108180992
 413              		.cfi_endproc
 414              	.LFE39:
 416              		.section	.text.BKP_ClearITPendingBit,"ax",%progbits
 417              		.align	1
 418              		.global	BKP_ClearITPendingBit
 419              		.syntax unified
 420              		.thumb
 421              		.thumb_func
 423              	BKP_ClearITPendingBit:
 424              	.LFB40:
ARM GAS  /tmp/ccNqU2tg.s 			page 13


 284:./FWLIB/src/stm32f10x_bkp.c **** 
 285:./FWLIB/src/stm32f10x_bkp.c **** /**
 286:./FWLIB/src/stm32f10x_bkp.c ****   * @brief  Clears Tamper Pin Interrupt pending bit.
 287:./FWLIB/src/stm32f10x_bkp.c ****   * @param  None
 288:./FWLIB/src/stm32f10x_bkp.c ****   * @retval None
 289:./FWLIB/src/stm32f10x_bkp.c ****   */
 290:./FWLIB/src/stm32f10x_bkp.c **** void BKP_ClearITPendingBit(void)
 291:./FWLIB/src/stm32f10x_bkp.c **** {
 425              		.loc 1 291 1 is_stmt 1 view -0
 426              		.cfi_startproc
 427              		@ args = 0, pretend = 0, frame = 0
 428              		@ frame_needed = 0, uses_anonymous_args = 0
 429              		@ link register save eliminated.
 292:./FWLIB/src/stm32f10x_bkp.c ****   /* Set CTI bit to clear Tamper Pin Interrupt pending bit */
 293:./FWLIB/src/stm32f10x_bkp.c ****   BKP->CSR |= BKP_CSR_CTI;
 430              		.loc 1 293 3 view .LVU85
 431              		.loc 1 293 6 is_stmt 0 view .LVU86
 432 0000 034A     		ldr	r2, .L36
 433 0002 938E     		ldrh	r3, [r2, #52]
 434 0004 9BB2     		uxth	r3, r3
 435              		.loc 1 293 12 view .LVU87
 436 0006 43F00203 		orr	r3, r3, #2
 437 000a 9386     		strh	r3, [r2, #52]	@ movhi
 294:./FWLIB/src/stm32f10x_bkp.c **** }
 438              		.loc 1 294 1 view .LVU88
 439 000c 7047     		bx	lr
 440              	.L37:
 441 000e 00BF     		.align	2
 442              	.L36:
 443 0010 006C0040 		.word	1073769472
 444              		.cfi_endproc
 445              	.LFE40:
 447              		.text
 448              	.Letext0:
 449              		.file 2 "/usr/lib/gcc/arm-none-eabi/14.1.0/include/stdint-gcc.h"
 450              		.file 3 "USER/stm32f10x.h"
 451              		.file 4 "FWLIB/inc/stm32f10x_rcc.h"
ARM GAS  /tmp/ccNqU2tg.s 			page 14


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f10x_bkp.c
     /tmp/ccNqU2tg.s:19     .text.BKP_DeInit:00000000 $t
     /tmp/ccNqU2tg.s:25     .text.BKP_DeInit:00000000 BKP_DeInit
     /tmp/ccNqU2tg.s:50     .text.BKP_TamperPinLevelConfig:00000000 $t
     /tmp/ccNqU2tg.s:56     .text.BKP_TamperPinLevelConfig:00000000 BKP_TamperPinLevelConfig
     /tmp/ccNqU2tg.s:74     .text.BKP_TamperPinLevelConfig:00000008 $d
     /tmp/ccNqU2tg.s:79     .text.BKP_TamperPinCmd:00000000 $t
     /tmp/ccNqU2tg.s:85     .text.BKP_TamperPinCmd:00000000 BKP_TamperPinCmd
     /tmp/ccNqU2tg.s:103    .text.BKP_TamperPinCmd:00000008 $d
     /tmp/ccNqU2tg.s:108    .text.BKP_ITConfig:00000000 $t
     /tmp/ccNqU2tg.s:114    .text.BKP_ITConfig:00000000 BKP_ITConfig
     /tmp/ccNqU2tg.s:132    .text.BKP_ITConfig:00000008 $d
     /tmp/ccNqU2tg.s:137    .text.BKP_RTCOutputConfig:00000000 $t
     /tmp/ccNqU2tg.s:143    .text.BKP_RTCOutputConfig:00000000 BKP_RTCOutputConfig
     /tmp/ccNqU2tg.s:175    .text.BKP_RTCOutputConfig:00000010 $d
     /tmp/ccNqU2tg.s:180    .text.BKP_SetRTCCalibrationValue:00000000 $t
     /tmp/ccNqU2tg.s:186    .text.BKP_SetRTCCalibrationValue:00000000 BKP_SetRTCCalibrationValue
     /tmp/ccNqU2tg.s:218    .text.BKP_SetRTCCalibrationValue:00000010 $d
     /tmp/ccNqU2tg.s:223    .text.BKP_WriteBackupRegister:00000000 $t
     /tmp/ccNqU2tg.s:229    .text.BKP_WriteBackupRegister:00000000 BKP_WriteBackupRegister
     /tmp/ccNqU2tg.s:271    .text.BKP_WriteBackupRegister:00000018 $d
     /tmp/ccNqU2tg.s:276    .text.BKP_ReadBackupRegister:00000000 $t
     /tmp/ccNqU2tg.s:282    .text.BKP_ReadBackupRegister:00000000 BKP_ReadBackupRegister
     /tmp/ccNqU2tg.s:325    .text.BKP_ReadBackupRegister:0000001c $d
     /tmp/ccNqU2tg.s:330    .text.BKP_GetFlagStatus:00000000 $t
     /tmp/ccNqU2tg.s:336    .text.BKP_GetFlagStatus:00000000 BKP_GetFlagStatus
     /tmp/ccNqU2tg.s:353    .text.BKP_GetFlagStatus:0000000c $d
     /tmp/ccNqU2tg.s:358    .text.BKP_ClearFlag:00000000 $t
     /tmp/ccNqU2tg.s:364    .text.BKP_ClearFlag:00000000 BKP_ClearFlag
     /tmp/ccNqU2tg.s:384    .text.BKP_ClearFlag:00000010 $d
     /tmp/ccNqU2tg.s:389    .text.BKP_GetITStatus:00000000 $t
     /tmp/ccNqU2tg.s:395    .text.BKP_GetITStatus:00000000 BKP_GetITStatus
     /tmp/ccNqU2tg.s:412    .text.BKP_GetITStatus:0000000c $d
     /tmp/ccNqU2tg.s:417    .text.BKP_ClearITPendingBit:00000000 $t
     /tmp/ccNqU2tg.s:423    .text.BKP_ClearITPendingBit:00000000 BKP_ClearITPendingBit
     /tmp/ccNqU2tg.s:443    .text.BKP_ClearITPendingBit:00000010 $d

UNDEFINED SYMBOLS
RCC_BackupResetCmd

ARM GAS  /tmp/ccW6rN33.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f10x_cec.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "./FWLIB/src/stm32f10x_cec.c"
  18              		.section	.text.CEC_DeInit,"ax",%progbits
  19              		.align	1
  20              		.global	CEC_DeInit
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	CEC_DeInit:
  26              	.LFB29:
   1:./FWLIB/src/stm32f10x_cec.c **** /**
   2:./FWLIB/src/stm32f10x_cec.c ****   ******************************************************************************
   3:./FWLIB/src/stm32f10x_cec.c ****   * @file    stm32f10x_cec.c
   4:./FWLIB/src/stm32f10x_cec.c ****   * @author  MCD Application Team
   5:./FWLIB/src/stm32f10x_cec.c ****   * @version V3.5.0
   6:./FWLIB/src/stm32f10x_cec.c ****   * @date    11-March-2011
   7:./FWLIB/src/stm32f10x_cec.c ****   * @brief   This file provides all the CEC firmware functions.
   8:./FWLIB/src/stm32f10x_cec.c ****   ******************************************************************************
   9:./FWLIB/src/stm32f10x_cec.c ****   * @attention
  10:./FWLIB/src/stm32f10x_cec.c ****   *
  11:./FWLIB/src/stm32f10x_cec.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  12:./FWLIB/src/stm32f10x_cec.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  13:./FWLIB/src/stm32f10x_cec.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  14:./FWLIB/src/stm32f10x_cec.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  15:./FWLIB/src/stm32f10x_cec.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  16:./FWLIB/src/stm32f10x_cec.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  17:./FWLIB/src/stm32f10x_cec.c ****   *
  18:./FWLIB/src/stm32f10x_cec.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
  19:./FWLIB/src/stm32f10x_cec.c ****   ******************************************************************************
  20:./FWLIB/src/stm32f10x_cec.c ****   */
  21:./FWLIB/src/stm32f10x_cec.c **** 
  22:./FWLIB/src/stm32f10x_cec.c **** /* Includes ------------------------------------------------------------------*/
  23:./FWLIB/src/stm32f10x_cec.c **** #include "stm32f10x_cec.h"
  24:./FWLIB/src/stm32f10x_cec.c **** #include "stm32f10x_rcc.h"
  25:./FWLIB/src/stm32f10x_cec.c **** 
  26:./FWLIB/src/stm32f10x_cec.c **** /** @addtogroup STM32F10x_StdPeriph_Driver
  27:./FWLIB/src/stm32f10x_cec.c ****   * @{
  28:./FWLIB/src/stm32f10x_cec.c ****   */
  29:./FWLIB/src/stm32f10x_cec.c **** 
  30:./FWLIB/src/stm32f10x_cec.c **** /** @defgroup CEC 
  31:./FWLIB/src/stm32f10x_cec.c ****   * @brief CEC driver modules
  32:./FWLIB/src/stm32f10x_cec.c ****   * @{
ARM GAS  /tmp/ccW6rN33.s 			page 2


  33:./FWLIB/src/stm32f10x_cec.c ****   */
  34:./FWLIB/src/stm32f10x_cec.c **** 
  35:./FWLIB/src/stm32f10x_cec.c **** /** @defgroup CEC_Private_TypesDefinitions
  36:./FWLIB/src/stm32f10x_cec.c ****   * @{
  37:./FWLIB/src/stm32f10x_cec.c ****   */
  38:./FWLIB/src/stm32f10x_cec.c **** 
  39:./FWLIB/src/stm32f10x_cec.c **** /**
  40:./FWLIB/src/stm32f10x_cec.c ****   * @}
  41:./FWLIB/src/stm32f10x_cec.c ****   */
  42:./FWLIB/src/stm32f10x_cec.c **** 
  43:./FWLIB/src/stm32f10x_cec.c **** 
  44:./FWLIB/src/stm32f10x_cec.c **** /** @defgroup CEC_Private_Defines
  45:./FWLIB/src/stm32f10x_cec.c ****   * @{
  46:./FWLIB/src/stm32f10x_cec.c ****   */ 
  47:./FWLIB/src/stm32f10x_cec.c **** 
  48:./FWLIB/src/stm32f10x_cec.c **** /* ------------ CEC registers bit address in the alias region ----------- */
  49:./FWLIB/src/stm32f10x_cec.c **** #define CEC_OFFSET                (CEC_BASE - PERIPH_BASE)
  50:./FWLIB/src/stm32f10x_cec.c **** 
  51:./FWLIB/src/stm32f10x_cec.c **** /* --- CFGR Register ---*/
  52:./FWLIB/src/stm32f10x_cec.c **** 
  53:./FWLIB/src/stm32f10x_cec.c **** /* Alias word address of PE bit */
  54:./FWLIB/src/stm32f10x_cec.c **** #define CFGR_OFFSET                 (CEC_OFFSET + 0x00)
  55:./FWLIB/src/stm32f10x_cec.c **** #define PE_BitNumber                0x00
  56:./FWLIB/src/stm32f10x_cec.c **** #define CFGR_PE_BB                  (PERIPH_BB_BASE + (CFGR_OFFSET * 32) + (PE_BitNumber * 4))
  57:./FWLIB/src/stm32f10x_cec.c **** 
  58:./FWLIB/src/stm32f10x_cec.c **** /* Alias word address of IE bit */
  59:./FWLIB/src/stm32f10x_cec.c **** #define IE_BitNumber                0x01
  60:./FWLIB/src/stm32f10x_cec.c **** #define CFGR_IE_BB                  (PERIPH_BB_BASE + (CFGR_OFFSET * 32) + (IE_BitNumber * 4))
  61:./FWLIB/src/stm32f10x_cec.c **** 
  62:./FWLIB/src/stm32f10x_cec.c **** /* --- CSR Register ---*/
  63:./FWLIB/src/stm32f10x_cec.c **** 
  64:./FWLIB/src/stm32f10x_cec.c **** /* Alias word address of TSOM bit */
  65:./FWLIB/src/stm32f10x_cec.c **** #define CSR_OFFSET                  (CEC_OFFSET + 0x10)
  66:./FWLIB/src/stm32f10x_cec.c **** #define TSOM_BitNumber              0x00
  67:./FWLIB/src/stm32f10x_cec.c **** #define CSR_TSOM_BB                 (PERIPH_BB_BASE + (CSR_OFFSET * 32) + (TSOM_BitNumber * 4))
  68:./FWLIB/src/stm32f10x_cec.c **** 
  69:./FWLIB/src/stm32f10x_cec.c **** /* Alias word address of TEOM bit */
  70:./FWLIB/src/stm32f10x_cec.c **** #define TEOM_BitNumber              0x01
  71:./FWLIB/src/stm32f10x_cec.c **** #define CSR_TEOM_BB                 (PERIPH_BB_BASE + (CSR_OFFSET * 32) + (TEOM_BitNumber * 4))
  72:./FWLIB/src/stm32f10x_cec.c ****   
  73:./FWLIB/src/stm32f10x_cec.c **** #define CFGR_CLEAR_Mask            (uint8_t)(0xF3)        /* CFGR register Mask */
  74:./FWLIB/src/stm32f10x_cec.c **** #define FLAG_Mask                  ((uint32_t)0x00FFFFFF) /* CEC FLAG mask */
  75:./FWLIB/src/stm32f10x_cec.c ****  
  76:./FWLIB/src/stm32f10x_cec.c **** /**
  77:./FWLIB/src/stm32f10x_cec.c ****   * @}
  78:./FWLIB/src/stm32f10x_cec.c ****   */ 
  79:./FWLIB/src/stm32f10x_cec.c **** 
  80:./FWLIB/src/stm32f10x_cec.c **** 
  81:./FWLIB/src/stm32f10x_cec.c **** /** @defgroup CEC_Private_Macros
  82:./FWLIB/src/stm32f10x_cec.c ****   * @{
  83:./FWLIB/src/stm32f10x_cec.c ****   */ 
  84:./FWLIB/src/stm32f10x_cec.c **** 
  85:./FWLIB/src/stm32f10x_cec.c **** /**
  86:./FWLIB/src/stm32f10x_cec.c ****   * @}
  87:./FWLIB/src/stm32f10x_cec.c ****   */ 
  88:./FWLIB/src/stm32f10x_cec.c **** 
  89:./FWLIB/src/stm32f10x_cec.c **** 
ARM GAS  /tmp/ccW6rN33.s 			page 3


  90:./FWLIB/src/stm32f10x_cec.c **** /** @defgroup CEC_Private_Variables
  91:./FWLIB/src/stm32f10x_cec.c ****   * @{
  92:./FWLIB/src/stm32f10x_cec.c ****   */ 
  93:./FWLIB/src/stm32f10x_cec.c **** 
  94:./FWLIB/src/stm32f10x_cec.c **** /**
  95:./FWLIB/src/stm32f10x_cec.c ****   * @}
  96:./FWLIB/src/stm32f10x_cec.c ****   */ 
  97:./FWLIB/src/stm32f10x_cec.c **** 
  98:./FWLIB/src/stm32f10x_cec.c **** 
  99:./FWLIB/src/stm32f10x_cec.c **** /** @defgroup CEC_Private_FunctionPrototypes
 100:./FWLIB/src/stm32f10x_cec.c ****   * @{
 101:./FWLIB/src/stm32f10x_cec.c ****   */
 102:./FWLIB/src/stm32f10x_cec.c ****  
 103:./FWLIB/src/stm32f10x_cec.c **** /**
 104:./FWLIB/src/stm32f10x_cec.c ****   * @}
 105:./FWLIB/src/stm32f10x_cec.c ****   */ 
 106:./FWLIB/src/stm32f10x_cec.c **** 
 107:./FWLIB/src/stm32f10x_cec.c **** 
 108:./FWLIB/src/stm32f10x_cec.c **** /** @defgroup CEC_Private_Functions
 109:./FWLIB/src/stm32f10x_cec.c ****   * @{
 110:./FWLIB/src/stm32f10x_cec.c ****   */ 
 111:./FWLIB/src/stm32f10x_cec.c **** 
 112:./FWLIB/src/stm32f10x_cec.c **** /**
 113:./FWLIB/src/stm32f10x_cec.c ****   * @brief  Deinitializes the CEC peripheral registers to their default reset 
 114:./FWLIB/src/stm32f10x_cec.c ****   *         values.
 115:./FWLIB/src/stm32f10x_cec.c ****   * @param  None
 116:./FWLIB/src/stm32f10x_cec.c ****   * @retval None
 117:./FWLIB/src/stm32f10x_cec.c ****   */
 118:./FWLIB/src/stm32f10x_cec.c **** void CEC_DeInit(void)
 119:./FWLIB/src/stm32f10x_cec.c **** {
  27              		.loc 1 119 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 08B5     		push	{r3, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 3, -8
  35              		.cfi_offset 14, -4
 120:./FWLIB/src/stm32f10x_cec.c ****   /* Enable CEC reset state */
 121:./FWLIB/src/stm32f10x_cec.c ****   RCC_APB1PeriphResetCmd(RCC_APB1Periph_CEC, ENABLE);  
  36              		.loc 1 121 3 view .LVU1
  37 0002 0121     		movs	r1, #1
  38 0004 4FF08040 		mov	r0, #1073741824
  39 0008 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
  40              	.LVL0:
 122:./FWLIB/src/stm32f10x_cec.c ****   /* Release CEC from reset state */
 123:./FWLIB/src/stm32f10x_cec.c ****   RCC_APB1PeriphResetCmd(RCC_APB1Periph_CEC, DISABLE); 
  41              		.loc 1 123 3 view .LVU2
  42 000c 0021     		movs	r1, #0
  43 000e 4FF08040 		mov	r0, #1073741824
  44 0012 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
  45              	.LVL1:
 124:./FWLIB/src/stm32f10x_cec.c **** }
  46              		.loc 1 124 1 is_stmt 0 view .LVU3
  47 0016 08BD     		pop	{r3, pc}
  48              		.cfi_endproc
ARM GAS  /tmp/ccW6rN33.s 			page 4


  49              	.LFE29:
  51              		.section	.text.CEC_Init,"ax",%progbits
  52              		.align	1
  53              		.global	CEC_Init
  54              		.syntax unified
  55              		.thumb
  56              		.thumb_func
  58              	CEC_Init:
  59              	.LVL2:
  60              	.LFB30:
 125:./FWLIB/src/stm32f10x_cec.c **** 
 126:./FWLIB/src/stm32f10x_cec.c **** 
 127:./FWLIB/src/stm32f10x_cec.c **** /**
 128:./FWLIB/src/stm32f10x_cec.c ****   * @brief  Initializes the CEC peripheral according to the specified 
 129:./FWLIB/src/stm32f10x_cec.c ****   *         parameters in the CEC_InitStruct.
 130:./FWLIB/src/stm32f10x_cec.c ****   * @param  CEC_InitStruct: pointer to an CEC_InitTypeDef structure that
 131:./FWLIB/src/stm32f10x_cec.c ****   *         contains the configuration information for the specified
 132:./FWLIB/src/stm32f10x_cec.c ****   *         CEC peripheral.
 133:./FWLIB/src/stm32f10x_cec.c ****   * @retval None
 134:./FWLIB/src/stm32f10x_cec.c ****   */
 135:./FWLIB/src/stm32f10x_cec.c **** void CEC_Init(CEC_InitTypeDef* CEC_InitStruct)
 136:./FWLIB/src/stm32f10x_cec.c **** {
  61              		.loc 1 136 1 is_stmt 1 view -0
  62              		.cfi_startproc
  63              		@ args = 0, pretend = 0, frame = 0
  64              		@ frame_needed = 0, uses_anonymous_args = 0
  65              		@ link register save eliminated.
 137:./FWLIB/src/stm32f10x_cec.c ****   uint16_t tmpreg = 0;
  66              		.loc 1 137 3 view .LVU5
 138:./FWLIB/src/stm32f10x_cec.c ****  
 139:./FWLIB/src/stm32f10x_cec.c ****   /* Check the parameters */
 140:./FWLIB/src/stm32f10x_cec.c ****   assert_param(IS_CEC_BIT_TIMING_ERROR_MODE(CEC_InitStruct->CEC_BitTimingMode)); 
  67              		.loc 1 140 3 view .LVU6
 141:./FWLIB/src/stm32f10x_cec.c ****   assert_param(IS_CEC_BIT_PERIOD_ERROR_MODE(CEC_InitStruct->CEC_BitPeriodMode));
  68              		.loc 1 141 3 view .LVU7
 142:./FWLIB/src/stm32f10x_cec.c ****      
 143:./FWLIB/src/stm32f10x_cec.c ****   /*---------------------------- CEC CFGR Configuration -----------------*/
 144:./FWLIB/src/stm32f10x_cec.c ****   /* Get the CEC CFGR value */
 145:./FWLIB/src/stm32f10x_cec.c ****   tmpreg = CEC->CFGR;
  69              		.loc 1 145 3 view .LVU8
  70              		.loc 1 145 15 is_stmt 0 view .LVU9
  71 0000 0449     		ldr	r1, .L4
  72 0002 0A68     		ldr	r2, [r1]
  73              	.LVL3:
 146:./FWLIB/src/stm32f10x_cec.c ****   
 147:./FWLIB/src/stm32f10x_cec.c ****   /* Clear BTEM and BPEM bits */
 148:./FWLIB/src/stm32f10x_cec.c ****   tmpreg &= CFGR_CLEAR_Mask;
  74              		.loc 1 148 3 is_stmt 1 view .LVU10
  75              		.loc 1 148 10 is_stmt 0 view .LVU11
  76 0004 02F0F302 		and	r2, r2, #243
  77              	.LVL4:
 149:./FWLIB/src/stm32f10x_cec.c ****   
 150:./FWLIB/src/stm32f10x_cec.c ****   /* Configure CEC: Bit Timing Error and Bit Period Error */
 151:./FWLIB/src/stm32f10x_cec.c ****   tmpreg |= (uint16_t)(CEC_InitStruct->CEC_BitTimingMode | CEC_InitStruct->CEC_BitPeriodMode);
  78              		.loc 1 151 3 is_stmt 1 view .LVU12
  79              		.loc 1 151 38 is_stmt 0 view .LVU13
  80 0008 0388     		ldrh	r3, [r0]
ARM GAS  /tmp/ccW6rN33.s 			page 5


  81              		.loc 1 151 74 view .LVU14
  82 000a 4088     		ldrh	r0, [r0, #2]
  83              	.LVL5:
  84              		.loc 1 151 13 view .LVU15
  85 000c 0343     		orrs	r3, r3, r0
  86              		.loc 1 151 10 view .LVU16
  87 000e 1343     		orrs	r3, r3, r2
  88              	.LVL6:
 152:./FWLIB/src/stm32f10x_cec.c **** 
 153:./FWLIB/src/stm32f10x_cec.c ****   /* Write to CEC CFGR  register*/
 154:./FWLIB/src/stm32f10x_cec.c ****   CEC->CFGR = tmpreg;
  89              		.loc 1 154 3 is_stmt 1 view .LVU17
  90              		.loc 1 154 13 is_stmt 0 view .LVU18
  91 0010 0B60     		str	r3, [r1]
 155:./FWLIB/src/stm32f10x_cec.c ****   
 156:./FWLIB/src/stm32f10x_cec.c **** }
  92              		.loc 1 156 1 view .LVU19
  93 0012 7047     		bx	lr
  94              	.L5:
  95              		.align	2
  96              	.L4:
  97 0014 00780040 		.word	1073772544
  98              		.cfi_endproc
  99              	.LFE30:
 101              		.section	.text.CEC_Cmd,"ax",%progbits
 102              		.align	1
 103              		.global	CEC_Cmd
 104              		.syntax unified
 105              		.thumb
 106              		.thumb_func
 108              	CEC_Cmd:
 109              	.LVL7:
 110              	.LFB31:
 157:./FWLIB/src/stm32f10x_cec.c **** 
 158:./FWLIB/src/stm32f10x_cec.c **** /**
 159:./FWLIB/src/stm32f10x_cec.c ****   * @brief  Enables or disables the specified CEC peripheral.
 160:./FWLIB/src/stm32f10x_cec.c ****   * @param  NewState: new state of the CEC peripheral. 
 161:./FWLIB/src/stm32f10x_cec.c ****   *     This parameter can be: ENABLE or DISABLE.
 162:./FWLIB/src/stm32f10x_cec.c ****   * @retval None
 163:./FWLIB/src/stm32f10x_cec.c ****   */
 164:./FWLIB/src/stm32f10x_cec.c **** void CEC_Cmd(FunctionalState NewState)
 165:./FWLIB/src/stm32f10x_cec.c **** {
 111              		.loc 1 165 1 is_stmt 1 view -0
 112              		.cfi_startproc
 113              		@ args = 0, pretend = 0, frame = 0
 114              		@ frame_needed = 0, uses_anonymous_args = 0
 115              		@ link register save eliminated.
 166:./FWLIB/src/stm32f10x_cec.c ****   /* Check the parameters */
 167:./FWLIB/src/stm32f10x_cec.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 116              		.loc 1 167 3 view .LVU21
 168:./FWLIB/src/stm32f10x_cec.c **** 
 169:./FWLIB/src/stm32f10x_cec.c ****   *(__IO uint32_t *) CFGR_PE_BB = (uint32_t)NewState;
 117              		.loc 1 169 3 view .LVU22
 118              		.loc 1 169 33 is_stmt 0 view .LVU23
 119 0000 044B     		ldr	r3, .L9
 120 0002 1860     		str	r0, [r3]
 170:./FWLIB/src/stm32f10x_cec.c **** 
ARM GAS  /tmp/ccW6rN33.s 			page 6


 171:./FWLIB/src/stm32f10x_cec.c ****   if(NewState == DISABLE)
 121              		.loc 1 171 3 is_stmt 1 view .LVU24
 122              		.loc 1 171 5 is_stmt 0 view .LVU25
 123 0004 20B9     		cbnz	r0, .L6
 124              	.L8:
 172:./FWLIB/src/stm32f10x_cec.c ****   {
 173:./FWLIB/src/stm32f10x_cec.c ****     /* Wait until the PE bit is cleared by hardware (Idle Line detected) */
 174:./FWLIB/src/stm32f10x_cec.c ****     while((CEC->CFGR & CEC_CFGR_PE) != (uint32_t)RESET)
 175:./FWLIB/src/stm32f10x_cec.c ****     {
 176:./FWLIB/src/stm32f10x_cec.c ****     }  
 125              		.loc 1 176 5 is_stmt 1 view .LVU26
 174:./FWLIB/src/stm32f10x_cec.c ****     {
 126              		.loc 1 174 37 discriminator 1 view .LVU27
 174:./FWLIB/src/stm32f10x_cec.c ****     {
 127              		.loc 1 174 15 is_stmt 0 discriminator 1 view .LVU28
 128 0006 044B     		ldr	r3, .L9+4
 129 0008 1B68     		ldr	r3, [r3]
 174:./FWLIB/src/stm32f10x_cec.c ****     {
 130              		.loc 1 174 37 discriminator 1 view .LVU29
 131 000a 13F0010F 		tst	r3, #1
 132 000e FAD1     		bne	.L8
 133              	.L6:
 177:./FWLIB/src/stm32f10x_cec.c ****   }  
 178:./FWLIB/src/stm32f10x_cec.c **** }
 134              		.loc 1 178 1 view .LVU30
 135 0010 7047     		bx	lr
 136              	.L10:
 137 0012 00BF     		.align	2
 138              	.L9:
 139 0014 00000F42 		.word	1108279296
 140 0018 00780040 		.word	1073772544
 141              		.cfi_endproc
 142              	.LFE31:
 144              		.section	.text.CEC_ITConfig,"ax",%progbits
 145              		.align	1
 146              		.global	CEC_ITConfig
 147              		.syntax unified
 148              		.thumb
 149              		.thumb_func
 151              	CEC_ITConfig:
 152              	.LVL8:
 153              	.LFB32:
 179:./FWLIB/src/stm32f10x_cec.c **** 
 180:./FWLIB/src/stm32f10x_cec.c **** /**
 181:./FWLIB/src/stm32f10x_cec.c ****   * @brief  Enables or disables the CEC interrupt.
 182:./FWLIB/src/stm32f10x_cec.c ****   * @param  NewState: new state of the CEC interrupt.
 183:./FWLIB/src/stm32f10x_cec.c ****   *   This parameter can be: ENABLE or DISABLE.
 184:./FWLIB/src/stm32f10x_cec.c ****   * @retval None
 185:./FWLIB/src/stm32f10x_cec.c ****   */
 186:./FWLIB/src/stm32f10x_cec.c **** void CEC_ITConfig(FunctionalState NewState)
 187:./FWLIB/src/stm32f10x_cec.c **** {
 154              		.loc 1 187 1 is_stmt 1 view -0
 155              		.cfi_startproc
 156              		@ args = 0, pretend = 0, frame = 0
 157              		@ frame_needed = 0, uses_anonymous_args = 0
 158              		@ link register save eliminated.
 188:./FWLIB/src/stm32f10x_cec.c ****   /* Check the parameters */
ARM GAS  /tmp/ccW6rN33.s 			page 7


 189:./FWLIB/src/stm32f10x_cec.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 159              		.loc 1 189 3 view .LVU32
 190:./FWLIB/src/stm32f10x_cec.c **** 
 191:./FWLIB/src/stm32f10x_cec.c ****   *(__IO uint32_t *) CFGR_IE_BB = (uint32_t)NewState;
 160              		.loc 1 191 3 view .LVU33
 161              		.loc 1 191 33 is_stmt 0 view .LVU34
 162 0000 014B     		ldr	r3, .L12
 163 0002 5860     		str	r0, [r3, #4]
 192:./FWLIB/src/stm32f10x_cec.c **** }
 164              		.loc 1 192 1 view .LVU35
 165 0004 7047     		bx	lr
 166              	.L13:
 167 0006 00BF     		.align	2
 168              	.L12:
 169 0008 00000F42 		.word	1108279296
 170              		.cfi_endproc
 171              	.LFE32:
 173              		.section	.text.CEC_OwnAddressConfig,"ax",%progbits
 174              		.align	1
 175              		.global	CEC_OwnAddressConfig
 176              		.syntax unified
 177              		.thumb
 178              		.thumb_func
 180              	CEC_OwnAddressConfig:
 181              	.LVL9:
 182              	.LFB33:
 193:./FWLIB/src/stm32f10x_cec.c **** 
 194:./FWLIB/src/stm32f10x_cec.c **** /**
 195:./FWLIB/src/stm32f10x_cec.c ****   * @brief  Defines the Own Address of the CEC device.
 196:./FWLIB/src/stm32f10x_cec.c ****   * @param  CEC_OwnAddress: The CEC own address
 197:./FWLIB/src/stm32f10x_cec.c ****   * @retval None
 198:./FWLIB/src/stm32f10x_cec.c ****   */
 199:./FWLIB/src/stm32f10x_cec.c **** void CEC_OwnAddressConfig(uint8_t CEC_OwnAddress)
 200:./FWLIB/src/stm32f10x_cec.c **** {
 183              		.loc 1 200 1 is_stmt 1 view -0
 184              		.cfi_startproc
 185              		@ args = 0, pretend = 0, frame = 0
 186              		@ frame_needed = 0, uses_anonymous_args = 0
 187              		@ link register save eliminated.
 201:./FWLIB/src/stm32f10x_cec.c ****   /* Check the parameters */
 202:./FWLIB/src/stm32f10x_cec.c ****   assert_param(IS_CEC_ADDRESS(CEC_OwnAddress));
 188              		.loc 1 202 3 view .LVU37
 203:./FWLIB/src/stm32f10x_cec.c **** 
 204:./FWLIB/src/stm32f10x_cec.c ****   /* Set the CEC own address */
 205:./FWLIB/src/stm32f10x_cec.c ****   CEC->OAR = CEC_OwnAddress;
 189              		.loc 1 205 3 view .LVU38
 190              		.loc 1 205 12 is_stmt 0 view .LVU39
 191 0000 014B     		ldr	r3, .L15
 192 0002 5860     		str	r0, [r3, #4]
 206:./FWLIB/src/stm32f10x_cec.c **** }
 193              		.loc 1 206 1 view .LVU40
 194 0004 7047     		bx	lr
 195              	.L16:
 196 0006 00BF     		.align	2
 197              	.L15:
 198 0008 00780040 		.word	1073772544
 199              		.cfi_endproc
ARM GAS  /tmp/ccW6rN33.s 			page 8


 200              	.LFE33:
 202              		.section	.text.CEC_SetPrescaler,"ax",%progbits
 203              		.align	1
 204              		.global	CEC_SetPrescaler
 205              		.syntax unified
 206              		.thumb
 207              		.thumb_func
 209              	CEC_SetPrescaler:
 210              	.LVL10:
 211              	.LFB34:
 207:./FWLIB/src/stm32f10x_cec.c **** 
 208:./FWLIB/src/stm32f10x_cec.c **** /**
 209:./FWLIB/src/stm32f10x_cec.c ****   * @brief  Sets the CEC prescaler value.
 210:./FWLIB/src/stm32f10x_cec.c ****   * @param  CEC_Prescaler: CEC prescaler new value
 211:./FWLIB/src/stm32f10x_cec.c ****   * @retval None
 212:./FWLIB/src/stm32f10x_cec.c ****   */
 213:./FWLIB/src/stm32f10x_cec.c **** void CEC_SetPrescaler(uint16_t CEC_Prescaler)
 214:./FWLIB/src/stm32f10x_cec.c **** {
 212              		.loc 1 214 1 is_stmt 1 view -0
 213              		.cfi_startproc
 214              		@ args = 0, pretend = 0, frame = 0
 215              		@ frame_needed = 0, uses_anonymous_args = 0
 216              		@ link register save eliminated.
 215:./FWLIB/src/stm32f10x_cec.c ****   /* Check the parameters */
 216:./FWLIB/src/stm32f10x_cec.c ****   assert_param(IS_CEC_PRESCALER(CEC_Prescaler));
 217              		.loc 1 216 3 view .LVU42
 217:./FWLIB/src/stm32f10x_cec.c **** 
 218:./FWLIB/src/stm32f10x_cec.c ****   /* Set the  Prescaler value*/
 219:./FWLIB/src/stm32f10x_cec.c ****   CEC->PRES = CEC_Prescaler;
 218              		.loc 1 219 3 view .LVU43
 219              		.loc 1 219 13 is_stmt 0 view .LVU44
 220 0000 014B     		ldr	r3, .L18
 221 0002 9860     		str	r0, [r3, #8]
 220:./FWLIB/src/stm32f10x_cec.c **** }
 222              		.loc 1 220 1 view .LVU45
 223 0004 7047     		bx	lr
 224              	.L19:
 225 0006 00BF     		.align	2
 226              	.L18:
 227 0008 00780040 		.word	1073772544
 228              		.cfi_endproc
 229              	.LFE34:
 231              		.section	.text.CEC_SendDataByte,"ax",%progbits
 232              		.align	1
 233              		.global	CEC_SendDataByte
 234              		.syntax unified
 235              		.thumb
 236              		.thumb_func
 238              	CEC_SendDataByte:
 239              	.LVL11:
 240              	.LFB35:
 221:./FWLIB/src/stm32f10x_cec.c **** 
 222:./FWLIB/src/stm32f10x_cec.c **** /**
 223:./FWLIB/src/stm32f10x_cec.c ****   * @brief  Transmits single data through the CEC peripheral.
 224:./FWLIB/src/stm32f10x_cec.c ****   * @param  Data: the data to transmit.
 225:./FWLIB/src/stm32f10x_cec.c ****   * @retval None
 226:./FWLIB/src/stm32f10x_cec.c ****   */
ARM GAS  /tmp/ccW6rN33.s 			page 9


 227:./FWLIB/src/stm32f10x_cec.c **** void CEC_SendDataByte(uint8_t Data)
 228:./FWLIB/src/stm32f10x_cec.c **** {  
 241              		.loc 1 228 1 is_stmt 1 view -0
 242              		.cfi_startproc
 243              		@ args = 0, pretend = 0, frame = 0
 244              		@ frame_needed = 0, uses_anonymous_args = 0
 245              		@ link register save eliminated.
 229:./FWLIB/src/stm32f10x_cec.c ****   /* Transmit Data */
 230:./FWLIB/src/stm32f10x_cec.c ****   CEC->TXD = Data ;
 246              		.loc 1 230 3 view .LVU47
 247              		.loc 1 230 12 is_stmt 0 view .LVU48
 248 0000 014B     		ldr	r3, .L21
 249 0002 5861     		str	r0, [r3, #20]
 231:./FWLIB/src/stm32f10x_cec.c **** }
 250              		.loc 1 231 1 view .LVU49
 251 0004 7047     		bx	lr
 252              	.L22:
 253 0006 00BF     		.align	2
 254              	.L21:
 255 0008 00780040 		.word	1073772544
 256              		.cfi_endproc
 257              	.LFE35:
 259              		.section	.text.CEC_ReceiveDataByte,"ax",%progbits
 260              		.align	1
 261              		.global	CEC_ReceiveDataByte
 262              		.syntax unified
 263              		.thumb
 264              		.thumb_func
 266              	CEC_ReceiveDataByte:
 267              	.LFB36:
 232:./FWLIB/src/stm32f10x_cec.c **** 
 233:./FWLIB/src/stm32f10x_cec.c **** 
 234:./FWLIB/src/stm32f10x_cec.c **** /**
 235:./FWLIB/src/stm32f10x_cec.c ****   * @brief  Returns the most recent received data by the CEC peripheral.
 236:./FWLIB/src/stm32f10x_cec.c ****   * @param  None
 237:./FWLIB/src/stm32f10x_cec.c ****   * @retval The received data.
 238:./FWLIB/src/stm32f10x_cec.c ****   */
 239:./FWLIB/src/stm32f10x_cec.c **** uint8_t CEC_ReceiveDataByte(void)
 240:./FWLIB/src/stm32f10x_cec.c **** {
 268              		.loc 1 240 1 is_stmt 1 view -0
 269              		.cfi_startproc
 270              		@ args = 0, pretend = 0, frame = 0
 271              		@ frame_needed = 0, uses_anonymous_args = 0
 272              		@ link register save eliminated.
 241:./FWLIB/src/stm32f10x_cec.c ****   /* Receive Data */
 242:./FWLIB/src/stm32f10x_cec.c ****   return (uint8_t)(CEC->RXD);
 273              		.loc 1 242 3 view .LVU51
 274              		.loc 1 242 23 is_stmt 0 view .LVU52
 275 0000 014B     		ldr	r3, .L24
 276 0002 9869     		ldr	r0, [r3, #24]
 243:./FWLIB/src/stm32f10x_cec.c **** }
 277              		.loc 1 243 1 view .LVU53
 278 0004 C0B2     		uxtb	r0, r0
 279 0006 7047     		bx	lr
 280              	.L25:
 281              		.align	2
 282              	.L24:
ARM GAS  /tmp/ccW6rN33.s 			page 10


 283 0008 00780040 		.word	1073772544
 284              		.cfi_endproc
 285              	.LFE36:
 287              		.section	.text.CEC_StartOfMessage,"ax",%progbits
 288              		.align	1
 289              		.global	CEC_StartOfMessage
 290              		.syntax unified
 291              		.thumb
 292              		.thumb_func
 294              	CEC_StartOfMessage:
 295              	.LFB37:
 244:./FWLIB/src/stm32f10x_cec.c **** 
 245:./FWLIB/src/stm32f10x_cec.c **** /**
 246:./FWLIB/src/stm32f10x_cec.c ****   * @brief  Starts a new message.
 247:./FWLIB/src/stm32f10x_cec.c ****   * @param  None
 248:./FWLIB/src/stm32f10x_cec.c ****   * @retval None
 249:./FWLIB/src/stm32f10x_cec.c ****   */
 250:./FWLIB/src/stm32f10x_cec.c **** void CEC_StartOfMessage(void)
 251:./FWLIB/src/stm32f10x_cec.c **** {  
 296              		.loc 1 251 1 is_stmt 1 view -0
 297              		.cfi_startproc
 298              		@ args = 0, pretend = 0, frame = 0
 299              		@ frame_needed = 0, uses_anonymous_args = 0
 300              		@ link register save eliminated.
 252:./FWLIB/src/stm32f10x_cec.c ****   /* Starts of new message */
 253:./FWLIB/src/stm32f10x_cec.c ****   *(__IO uint32_t *) CSR_TSOM_BB = (uint32_t)0x1;
 301              		.loc 1 253 3 view .LVU55
 302              		.loc 1 253 34 is_stmt 0 view .LVU56
 303 0000 024B     		ldr	r3, .L27
 304 0002 0122     		movs	r2, #1
 305 0004 C3F80022 		str	r2, [r3, #512]
 254:./FWLIB/src/stm32f10x_cec.c **** }
 306              		.loc 1 254 1 view .LVU57
 307 0008 7047     		bx	lr
 308              	.L28:
 309 000a 00BF     		.align	2
 310              	.L27:
 311 000c 00000F42 		.word	1108279296
 312              		.cfi_endproc
 313              	.LFE37:
 315              		.section	.text.CEC_EndOfMessageCmd,"ax",%progbits
 316              		.align	1
 317              		.global	CEC_EndOfMessageCmd
 318              		.syntax unified
 319              		.thumb
 320              		.thumb_func
 322              	CEC_EndOfMessageCmd:
 323              	.LVL12:
 324              	.LFB38:
 255:./FWLIB/src/stm32f10x_cec.c **** 
 256:./FWLIB/src/stm32f10x_cec.c **** /**
 257:./FWLIB/src/stm32f10x_cec.c ****   * @brief  Transmits message with or without an EOM bit.
 258:./FWLIB/src/stm32f10x_cec.c ****   * @param  NewState: new state of the CEC Tx End Of Message. 
 259:./FWLIB/src/stm32f10x_cec.c ****   *     This parameter can be: ENABLE or DISABLE.
 260:./FWLIB/src/stm32f10x_cec.c ****   * @retval None
 261:./FWLIB/src/stm32f10x_cec.c ****   */
 262:./FWLIB/src/stm32f10x_cec.c **** void CEC_EndOfMessageCmd(FunctionalState NewState)
ARM GAS  /tmp/ccW6rN33.s 			page 11


 263:./FWLIB/src/stm32f10x_cec.c **** {   
 325              		.loc 1 263 1 is_stmt 1 view -0
 326              		.cfi_startproc
 327              		@ args = 0, pretend = 0, frame = 0
 328              		@ frame_needed = 0, uses_anonymous_args = 0
 329              		@ link register save eliminated.
 264:./FWLIB/src/stm32f10x_cec.c ****   /* Check the parameters */
 265:./FWLIB/src/stm32f10x_cec.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 330              		.loc 1 265 3 view .LVU59
 266:./FWLIB/src/stm32f10x_cec.c ****   
 267:./FWLIB/src/stm32f10x_cec.c ****   /* The data byte will be transmitted with or without an EOM bit*/
 268:./FWLIB/src/stm32f10x_cec.c ****   *(__IO uint32_t *) CSR_TEOM_BB = (uint32_t)NewState;
 331              		.loc 1 268 3 view .LVU60
 332              		.loc 1 268 34 is_stmt 0 view .LVU61
 333 0000 014B     		ldr	r3, .L30
 334 0002 C3F80402 		str	r0, [r3, #516]
 269:./FWLIB/src/stm32f10x_cec.c **** }
 335              		.loc 1 269 1 view .LVU62
 336 0006 7047     		bx	lr
 337              	.L31:
 338              		.align	2
 339              	.L30:
 340 0008 00000F42 		.word	1108279296
 341              		.cfi_endproc
 342              	.LFE38:
 344              		.section	.text.CEC_GetFlagStatus,"ax",%progbits
 345              		.align	1
 346              		.global	CEC_GetFlagStatus
 347              		.syntax unified
 348              		.thumb
 349              		.thumb_func
 351              	CEC_GetFlagStatus:
 352              	.LVL13:
 353              	.LFB39:
 270:./FWLIB/src/stm32f10x_cec.c **** 
 271:./FWLIB/src/stm32f10x_cec.c **** /**
 272:./FWLIB/src/stm32f10x_cec.c ****   * @brief  Gets the CEC flag status
 273:./FWLIB/src/stm32f10x_cec.c ****   * @param  CEC_FLAG: specifies the CEC flag to check. 
 274:./FWLIB/src/stm32f10x_cec.c ****   *   This parameter can be one of the following values:
 275:./FWLIB/src/stm32f10x_cec.c ****   *     @arg CEC_FLAG_BTE: Bit Timing Error
 276:./FWLIB/src/stm32f10x_cec.c ****   *     @arg CEC_FLAG_BPE: Bit Period Error
 277:./FWLIB/src/stm32f10x_cec.c ****   *     @arg CEC_FLAG_RBTFE: Rx Block Transfer Finished Error
 278:./FWLIB/src/stm32f10x_cec.c ****   *     @arg CEC_FLAG_SBE: Start Bit Error
 279:./FWLIB/src/stm32f10x_cec.c ****   *     @arg CEC_FLAG_ACKE: Block Acknowledge Error
 280:./FWLIB/src/stm32f10x_cec.c ****   *     @arg CEC_FLAG_LINE: Line Error
 281:./FWLIB/src/stm32f10x_cec.c ****   *     @arg CEC_FLAG_TBTFE: Tx Block Transfer Finished Error
 282:./FWLIB/src/stm32f10x_cec.c ****   *     @arg CEC_FLAG_TEOM: Tx End Of Message 
 283:./FWLIB/src/stm32f10x_cec.c ****   *     @arg CEC_FLAG_TERR: Tx Error
 284:./FWLIB/src/stm32f10x_cec.c ****   *     @arg CEC_FLAG_TBTRF: Tx Byte Transfer Request or Block Transfer Finished
 285:./FWLIB/src/stm32f10x_cec.c ****   *     @arg CEC_FLAG_RSOM: Rx Start Of Message
 286:./FWLIB/src/stm32f10x_cec.c ****   *     @arg CEC_FLAG_REOM: Rx End Of Message
 287:./FWLIB/src/stm32f10x_cec.c ****   *     @arg CEC_FLAG_RERR: Rx Error
 288:./FWLIB/src/stm32f10x_cec.c ****   *     @arg CEC_FLAG_RBTF: Rx Byte/Block Transfer Finished
 289:./FWLIB/src/stm32f10x_cec.c ****   * @retval The new state of CEC_FLAG (SET or RESET)
 290:./FWLIB/src/stm32f10x_cec.c ****   */
 291:./FWLIB/src/stm32f10x_cec.c **** FlagStatus CEC_GetFlagStatus(uint32_t CEC_FLAG) 
 292:./FWLIB/src/stm32f10x_cec.c **** {
ARM GAS  /tmp/ccW6rN33.s 			page 12


 354              		.loc 1 292 1 is_stmt 1 view -0
 355              		.cfi_startproc
 356              		@ args = 0, pretend = 0, frame = 0
 357              		@ frame_needed = 0, uses_anonymous_args = 0
 358              		@ link register save eliminated.
 293:./FWLIB/src/stm32f10x_cec.c ****   FlagStatus bitstatus = RESET;
 359              		.loc 1 293 3 view .LVU64
 294:./FWLIB/src/stm32f10x_cec.c ****   uint32_t cecreg = 0, cecbase = 0;
 360              		.loc 1 294 3 view .LVU65
 295:./FWLIB/src/stm32f10x_cec.c ****   
 296:./FWLIB/src/stm32f10x_cec.c ****   /* Check the parameters */
 297:./FWLIB/src/stm32f10x_cec.c ****   assert_param(IS_CEC_GET_FLAG(CEC_FLAG));
 361              		.loc 1 297 3 view .LVU66
 298:./FWLIB/src/stm32f10x_cec.c ****  
 299:./FWLIB/src/stm32f10x_cec.c ****   /* Get the CEC peripheral base address */
 300:./FWLIB/src/stm32f10x_cec.c ****   cecbase = (uint32_t)(CEC_BASE);
 362              		.loc 1 300 3 view .LVU67
 301:./FWLIB/src/stm32f10x_cec.c ****   
 302:./FWLIB/src/stm32f10x_cec.c ****   /* Read flag register index */
 303:./FWLIB/src/stm32f10x_cec.c ****   cecreg = CEC_FLAG >> 28;
 363              		.loc 1 303 3 view .LVU68
 304:./FWLIB/src/stm32f10x_cec.c ****   
 305:./FWLIB/src/stm32f10x_cec.c ****   /* Get bit[23:0] of the flag */
 306:./FWLIB/src/stm32f10x_cec.c ****   CEC_FLAG &= FLAG_Mask;
 364              		.loc 1 306 3 view .LVU69
 365              		.loc 1 306 12 is_stmt 0 view .LVU70
 366 0000 20F07F43 		bic	r3, r0, #-16777216
 367              	.LVL14:
 307:./FWLIB/src/stm32f10x_cec.c ****   
 308:./FWLIB/src/stm32f10x_cec.c ****   if(cecreg != 0)
 368              		.loc 1 308 3 is_stmt 1 view .LVU71
 369              		.loc 1 308 5 is_stmt 0 view .LVU72
 370 0004 000F     		lsrs	r0, r0, #28
 371              	.LVL15:
 372              		.loc 1 308 5 view .LVU73
 373 0006 06D0     		beq	.L35
 309:./FWLIB/src/stm32f10x_cec.c ****   {
 310:./FWLIB/src/stm32f10x_cec.c ****     /* Flag in CEC ESR Register */
 311:./FWLIB/src/stm32f10x_cec.c ****     CEC_FLAG = (uint32_t)(CEC_FLAG >> 16);
 374              		.loc 1 311 5 is_stmt 1 view .LVU74
 375              		.loc 1 311 14 is_stmt 0 view .LVU75
 376 0008 1B0C     		lsrs	r3, r3, #16
 377              	.LVL16:
 312:./FWLIB/src/stm32f10x_cec.c ****     
 313:./FWLIB/src/stm32f10x_cec.c ****     /* Get the CEC ESR register address */
 314:./FWLIB/src/stm32f10x_cec.c ****     cecbase += 0xC;
 378              		.loc 1 314 5 is_stmt 1 view .LVU76
 379              		.loc 1 314 13 is_stmt 0 view .LVU77
 380 000a 054A     		ldr	r2, .L37
 381              	.LVL17:
 382              	.L33:
 315:./FWLIB/src/stm32f10x_cec.c ****   }
 316:./FWLIB/src/stm32f10x_cec.c ****   else
 317:./FWLIB/src/stm32f10x_cec.c ****   {
 318:./FWLIB/src/stm32f10x_cec.c ****     /* Get the CEC CSR register address */
 319:./FWLIB/src/stm32f10x_cec.c ****     cecbase += 0x10;
 320:./FWLIB/src/stm32f10x_cec.c ****   }
ARM GAS  /tmp/ccW6rN33.s 			page 13


 321:./FWLIB/src/stm32f10x_cec.c ****   
 322:./FWLIB/src/stm32f10x_cec.c ****   if(((*(__IO uint32_t *)cecbase) & CEC_FLAG) != (uint32_t)RESET)
 383              		.loc 1 322 3 is_stmt 1 view .LVU78
 384              		.loc 1 322 8 is_stmt 0 view .LVU79
 385 000c 1268     		ldr	r2, [r2]
 386              	.LVL18:
 387              		.loc 1 322 5 view .LVU80
 388 000e 1A42     		tst	r2, r3
 389 0010 03D0     		beq	.L36
 323:./FWLIB/src/stm32f10x_cec.c ****   {
 324:./FWLIB/src/stm32f10x_cec.c ****     /* CEC_FLAG is set */
 325:./FWLIB/src/stm32f10x_cec.c ****     bitstatus = SET;
 390              		.loc 1 325 15 view .LVU81
 391 0012 0120     		movs	r0, #1
 392 0014 7047     		bx	lr
 393              	.LVL19:
 394              	.L35:
 319:./FWLIB/src/stm32f10x_cec.c ****   }
 395              		.loc 1 319 13 view .LVU82
 396 0016 034A     		ldr	r2, .L37+4
 397 0018 F8E7     		b	.L33
 398              	.LVL20:
 399              	.L36:
 326:./FWLIB/src/stm32f10x_cec.c ****   }
 327:./FWLIB/src/stm32f10x_cec.c ****   else
 328:./FWLIB/src/stm32f10x_cec.c ****   {
 329:./FWLIB/src/stm32f10x_cec.c ****     /* CEC_FLAG is reset */
 330:./FWLIB/src/stm32f10x_cec.c ****     bitstatus = RESET;
 400              		.loc 1 330 15 view .LVU83
 401 001a 0020     		movs	r0, #0
 402              	.LVL21:
 331:./FWLIB/src/stm32f10x_cec.c ****   }
 332:./FWLIB/src/stm32f10x_cec.c ****   
 333:./FWLIB/src/stm32f10x_cec.c ****   /* Return the CEC_FLAG status */
 334:./FWLIB/src/stm32f10x_cec.c ****   return  bitstatus;
 403              		.loc 1 334 3 is_stmt 1 view .LVU84
 335:./FWLIB/src/stm32f10x_cec.c **** }
 404              		.loc 1 335 1 is_stmt 0 view .LVU85
 405 001c 7047     		bx	lr
 406              	.L38:
 407 001e 00BF     		.align	2
 408              	.L37:
 409 0020 0C780040 		.word	1073772556
 410 0024 10780040 		.word	1073772560
 411              		.cfi_endproc
 412              	.LFE39:
 414              		.section	.text.CEC_ClearFlag,"ax",%progbits
 415              		.align	1
 416              		.global	CEC_ClearFlag
 417              		.syntax unified
 418              		.thumb
 419              		.thumb_func
 421              	CEC_ClearFlag:
 422              	.LVL22:
 423              	.LFB40:
 336:./FWLIB/src/stm32f10x_cec.c **** 
 337:./FWLIB/src/stm32f10x_cec.c **** /**
ARM GAS  /tmp/ccW6rN33.s 			page 14


 338:./FWLIB/src/stm32f10x_cec.c ****   * @brief  Clears the CEC's pending flags.
 339:./FWLIB/src/stm32f10x_cec.c ****   * @param  CEC_FLAG: specifies the flag to clear. 
 340:./FWLIB/src/stm32f10x_cec.c ****   *   This parameter can be any combination of the following values:
 341:./FWLIB/src/stm32f10x_cec.c ****   *     @arg CEC_FLAG_TERR: Tx Error
 342:./FWLIB/src/stm32f10x_cec.c ****   *     @arg CEC_FLAG_TBTRF: Tx Byte Transfer Request or Block Transfer Finished
 343:./FWLIB/src/stm32f10x_cec.c ****   *     @arg CEC_FLAG_RSOM: Rx Start Of Message
 344:./FWLIB/src/stm32f10x_cec.c ****   *     @arg CEC_FLAG_REOM: Rx End Of Message
 345:./FWLIB/src/stm32f10x_cec.c ****   *     @arg CEC_FLAG_RERR: Rx Error
 346:./FWLIB/src/stm32f10x_cec.c ****   *     @arg CEC_FLAG_RBTF: Rx Byte/Block Transfer Finished
 347:./FWLIB/src/stm32f10x_cec.c ****   * @retval None
 348:./FWLIB/src/stm32f10x_cec.c ****   */
 349:./FWLIB/src/stm32f10x_cec.c **** void CEC_ClearFlag(uint32_t CEC_FLAG)
 350:./FWLIB/src/stm32f10x_cec.c **** { 
 424              		.loc 1 350 1 is_stmt 1 view -0
 425              		.cfi_startproc
 426              		@ args = 0, pretend = 0, frame = 0
 427              		@ frame_needed = 0, uses_anonymous_args = 0
 428              		@ link register save eliminated.
 351:./FWLIB/src/stm32f10x_cec.c ****   uint32_t tmp = 0x0;
 429              		.loc 1 351 3 view .LVU87
 352:./FWLIB/src/stm32f10x_cec.c ****   
 353:./FWLIB/src/stm32f10x_cec.c ****   /* Check the parameters */
 354:./FWLIB/src/stm32f10x_cec.c ****   assert_param(IS_CEC_CLEAR_FLAG(CEC_FLAG));
 430              		.loc 1 354 3 view .LVU88
 355:./FWLIB/src/stm32f10x_cec.c **** 
 356:./FWLIB/src/stm32f10x_cec.c ****   tmp = CEC->CSR & 0x2;
 431              		.loc 1 356 3 view .LVU89
 432              		.loc 1 356 12 is_stmt 0 view .LVU90
 433 0000 054B     		ldr	r3, .L40
 434 0002 1969     		ldr	r1, [r3, #16]
 435              		.loc 1 356 7 view .LVU91
 436 0004 01F00201 		and	r1, r1, #2
 437              	.LVL23:
 357:./FWLIB/src/stm32f10x_cec.c ****        
 358:./FWLIB/src/stm32f10x_cec.c ****   /* Clear the selected CEC flags */
 359:./FWLIB/src/stm32f10x_cec.c ****   CEC->CSR &= (uint32_t)(((~(uint32_t)CEC_FLAG) & 0xFFFFFFFC) | tmp);
 438              		.loc 1 359 3 is_stmt 1 view .LVU92
 439              		.loc 1 359 6 is_stmt 0 view .LVU93
 440 0008 1A69     		ldr	r2, [r3, #16]
 441              		.loc 1 359 28 view .LVU94
 442 000a C043     		mvns	r0, r0
 443              	.LVL24:
 444              		.loc 1 359 49 view .LVU95
 445 000c 20F00300 		bic	r0, r0, #3
 446              	.LVL25:
 447              		.loc 1 359 15 view .LVU96
 448 0010 0843     		orrs	r0, r0, r1
 449              		.loc 1 359 12 view .LVU97
 450 0012 0240     		ands	r2, r2, r0
 451 0014 1A61     		str	r2, [r3, #16]
 360:./FWLIB/src/stm32f10x_cec.c **** }
 452              		.loc 1 360 1 view .LVU98
 453 0016 7047     		bx	lr
 454              	.L41:
 455              		.align	2
 456              	.L40:
 457 0018 00780040 		.word	1073772544
ARM GAS  /tmp/ccW6rN33.s 			page 15


 458              		.cfi_endproc
 459              	.LFE40:
 461              		.section	.text.CEC_GetITStatus,"ax",%progbits
 462              		.align	1
 463              		.global	CEC_GetITStatus
 464              		.syntax unified
 465              		.thumb
 466              		.thumb_func
 468              	CEC_GetITStatus:
 469              	.LVL26:
 470              	.LFB41:
 361:./FWLIB/src/stm32f10x_cec.c **** 
 362:./FWLIB/src/stm32f10x_cec.c **** /**
 363:./FWLIB/src/stm32f10x_cec.c ****   * @brief  Checks whether the specified CEC interrupt has occurred or not.
 364:./FWLIB/src/stm32f10x_cec.c ****   * @param  CEC_IT: specifies the CEC interrupt source to check. 
 365:./FWLIB/src/stm32f10x_cec.c ****   *   This parameter can be one of the following values:
 366:./FWLIB/src/stm32f10x_cec.c ****   *     @arg CEC_IT_TERR: Tx Error
 367:./FWLIB/src/stm32f10x_cec.c ****   *     @arg CEC_IT_TBTF: Tx Block Transfer Finished
 368:./FWLIB/src/stm32f10x_cec.c ****   *     @arg CEC_IT_RERR: Rx Error
 369:./FWLIB/src/stm32f10x_cec.c ****   *     @arg CEC_IT_RBTF: Rx Block Transfer Finished
 370:./FWLIB/src/stm32f10x_cec.c ****   * @retval The new state of CEC_IT (SET or RESET).
 371:./FWLIB/src/stm32f10x_cec.c ****   */
 372:./FWLIB/src/stm32f10x_cec.c **** ITStatus CEC_GetITStatus(uint8_t CEC_IT)
 373:./FWLIB/src/stm32f10x_cec.c **** {
 471              		.loc 1 373 1 is_stmt 1 view -0
 472              		.cfi_startproc
 473              		@ args = 0, pretend = 0, frame = 0
 474              		@ frame_needed = 0, uses_anonymous_args = 0
 475              		@ link register save eliminated.
 374:./FWLIB/src/stm32f10x_cec.c ****   ITStatus bitstatus = RESET;
 476              		.loc 1 374 3 view .LVU100
 375:./FWLIB/src/stm32f10x_cec.c ****   uint32_t enablestatus = 0;
 477              		.loc 1 375 3 view .LVU101
 376:./FWLIB/src/stm32f10x_cec.c ****   
 377:./FWLIB/src/stm32f10x_cec.c ****   /* Check the parameters */
 378:./FWLIB/src/stm32f10x_cec.c ****    assert_param(IS_CEC_GET_IT(CEC_IT));
 478              		.loc 1 378 4 view .LVU102
 379:./FWLIB/src/stm32f10x_cec.c ****    
 380:./FWLIB/src/stm32f10x_cec.c ****   /* Get the CEC IT enable bit status */
 381:./FWLIB/src/stm32f10x_cec.c ****   enablestatus = (CEC->CFGR & (uint8_t)CEC_CFGR_IE) ;
 479              		.loc 1 381 3 view .LVU103
 480              		.loc 1 381 22 is_stmt 0 view .LVU104
 481 0000 064A     		ldr	r2, .L46
 482 0002 1368     		ldr	r3, [r2]
 483              		.loc 1 381 16 view .LVU105
 484 0004 03F00203 		and	r3, r3, #2
 485              	.LVL27:
 382:./FWLIB/src/stm32f10x_cec.c ****   
 383:./FWLIB/src/stm32f10x_cec.c ****   /* Check the status of the specified CEC interrupt */
 384:./FWLIB/src/stm32f10x_cec.c ****   if (((CEC->CSR & CEC_IT) != (uint32_t)RESET) && enablestatus)
 486              		.loc 1 384 3 is_stmt 1 view .LVU106
 487              		.loc 1 384 12 is_stmt 0 view .LVU107
 488 0008 1269     		ldr	r2, [r2, #16]
 489              		.loc 1 384 6 view .LVU108
 490 000a 1042     		tst	r0, r2
 491 000c 02D0     		beq	.L44
 492              		.loc 1 384 48 discriminator 1 view .LVU109
ARM GAS  /tmp/ccW6rN33.s 			page 16


 493 000e 1BB9     		cbnz	r3, .L45
 385:./FWLIB/src/stm32f10x_cec.c ****   {
 386:./FWLIB/src/stm32f10x_cec.c ****     /* CEC_IT is set */
 387:./FWLIB/src/stm32f10x_cec.c ****     bitstatus = SET;
 388:./FWLIB/src/stm32f10x_cec.c ****   }
 389:./FWLIB/src/stm32f10x_cec.c ****   else
 390:./FWLIB/src/stm32f10x_cec.c ****   {
 391:./FWLIB/src/stm32f10x_cec.c ****     /* CEC_IT is reset */
 392:./FWLIB/src/stm32f10x_cec.c ****     bitstatus = RESET;
 494              		.loc 1 392 15 view .LVU110
 495 0010 0020     		movs	r0, #0
 496              	.LVL28:
 497              		.loc 1 392 15 view .LVU111
 498 0012 7047     		bx	lr
 499              	.LVL29:
 500              	.L44:
 501              		.loc 1 392 15 view .LVU112
 502 0014 0020     		movs	r0, #0
 503              	.LVL30:
 504              		.loc 1 392 15 view .LVU113
 505 0016 7047     		bx	lr
 506              	.LVL31:
 507              	.L45:
 387:./FWLIB/src/stm32f10x_cec.c ****   }
 508              		.loc 1 387 15 view .LVU114
 509 0018 0120     		movs	r0, #1
 510              	.LVL32:
 393:./FWLIB/src/stm32f10x_cec.c ****   }
 394:./FWLIB/src/stm32f10x_cec.c ****   /* Return the CEC_IT status */
 395:./FWLIB/src/stm32f10x_cec.c ****   return  bitstatus;
 511              		.loc 1 395 3 is_stmt 1 view .LVU115
 396:./FWLIB/src/stm32f10x_cec.c **** }
 512              		.loc 1 396 1 is_stmt 0 view .LVU116
 513 001a 7047     		bx	lr
 514              	.L47:
 515              		.align	2
 516              	.L46:
 517 001c 00780040 		.word	1073772544
 518              		.cfi_endproc
 519              	.LFE41:
 521              		.section	.text.CEC_ClearITPendingBit,"ax",%progbits
 522              		.align	1
 523              		.global	CEC_ClearITPendingBit
 524              		.syntax unified
 525              		.thumb
 526              		.thumb_func
 528              	CEC_ClearITPendingBit:
 529              	.LVL33:
 530              	.LFB42:
 397:./FWLIB/src/stm32f10x_cec.c **** 
 398:./FWLIB/src/stm32f10x_cec.c **** /**
 399:./FWLIB/src/stm32f10x_cec.c ****   * @brief  Clears the CEC's interrupt pending bits.
 400:./FWLIB/src/stm32f10x_cec.c ****   * @param  CEC_IT: specifies the CEC interrupt pending bit to clear.
 401:./FWLIB/src/stm32f10x_cec.c ****   *   This parameter can be any combination of the following values:
 402:./FWLIB/src/stm32f10x_cec.c ****   *     @arg CEC_IT_TERR: Tx Error
 403:./FWLIB/src/stm32f10x_cec.c ****   *     @arg CEC_IT_TBTF: Tx Block Transfer Finished
 404:./FWLIB/src/stm32f10x_cec.c ****   *     @arg CEC_IT_RERR: Rx Error
ARM GAS  /tmp/ccW6rN33.s 			page 17


 405:./FWLIB/src/stm32f10x_cec.c ****   *     @arg CEC_IT_RBTF: Rx Block Transfer Finished
 406:./FWLIB/src/stm32f10x_cec.c ****   * @retval None
 407:./FWLIB/src/stm32f10x_cec.c ****   */
 408:./FWLIB/src/stm32f10x_cec.c **** void CEC_ClearITPendingBit(uint16_t CEC_IT)
 409:./FWLIB/src/stm32f10x_cec.c **** {
 531              		.loc 1 409 1 is_stmt 1 view -0
 532              		.cfi_startproc
 533              		@ args = 0, pretend = 0, frame = 0
 534              		@ frame_needed = 0, uses_anonymous_args = 0
 535              		@ link register save eliminated.
 410:./FWLIB/src/stm32f10x_cec.c ****   uint32_t tmp = 0x0;
 536              		.loc 1 410 3 view .LVU118
 411:./FWLIB/src/stm32f10x_cec.c ****   
 412:./FWLIB/src/stm32f10x_cec.c ****   /* Check the parameters */
 413:./FWLIB/src/stm32f10x_cec.c ****   assert_param(IS_CEC_GET_IT(CEC_IT));
 537              		.loc 1 413 3 view .LVU119
 414:./FWLIB/src/stm32f10x_cec.c ****   
 415:./FWLIB/src/stm32f10x_cec.c ****   tmp = CEC->CSR & 0x2;
 538              		.loc 1 415 3 view .LVU120
 539              		.loc 1 415 12 is_stmt 0 view .LVU121
 540 0000 054B     		ldr	r3, .L49
 541 0002 1969     		ldr	r1, [r3, #16]
 542              		.loc 1 415 7 view .LVU122
 543 0004 01F00201 		and	r1, r1, #2
 544              	.LVL34:
 416:./FWLIB/src/stm32f10x_cec.c ****   
 417:./FWLIB/src/stm32f10x_cec.c ****   /* Clear the selected CEC interrupt pending bits */
 418:./FWLIB/src/stm32f10x_cec.c ****   CEC->CSR &= (uint32_t)(((~(uint32_t)CEC_IT) & 0xFFFFFFFC) | tmp);
 545              		.loc 1 418 3 is_stmt 1 view .LVU123
 546              		.loc 1 418 6 is_stmt 0 view .LVU124
 547 0008 1A69     		ldr	r2, [r3, #16]
 548              		.loc 1 418 28 view .LVU125
 549 000a C043     		mvns	r0, r0
 550              	.LVL35:
 551              		.loc 1 418 47 view .LVU126
 552 000c 20F00300 		bic	r0, r0, #3
 553              	.LVL36:
 554              		.loc 1 418 15 view .LVU127
 555 0010 0843     		orrs	r0, r0, r1
 556              		.loc 1 418 12 view .LVU128
 557 0012 0240     		ands	r2, r2, r0
 558 0014 1A61     		str	r2, [r3, #16]
 419:./FWLIB/src/stm32f10x_cec.c **** }
 559              		.loc 1 419 1 view .LVU129
 560 0016 7047     		bx	lr
 561              	.L50:
 562              		.align	2
 563              	.L49:
 564 0018 00780040 		.word	1073772544
 565              		.cfi_endproc
 566              	.LFE42:
 568              		.text
 569              	.Letext0:
 570              		.file 2 "/usr/lib/gcc/arm-none-eabi/14.1.0/include/stdint-gcc.h"
 571              		.file 3 "USER/stm32f10x.h"
 572              		.file 4 "FWLIB/inc/stm32f10x_cec.h"
 573              		.file 5 "FWLIB/inc/stm32f10x_rcc.h"
ARM GAS  /tmp/ccW6rN33.s 			page 18


ARM GAS  /tmp/ccW6rN33.s 			page 19


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f10x_cec.c
     /tmp/ccW6rN33.s:19     .text.CEC_DeInit:00000000 $t
     /tmp/ccW6rN33.s:25     .text.CEC_DeInit:00000000 CEC_DeInit
     /tmp/ccW6rN33.s:52     .text.CEC_Init:00000000 $t
     /tmp/ccW6rN33.s:58     .text.CEC_Init:00000000 CEC_Init
     /tmp/ccW6rN33.s:97     .text.CEC_Init:00000014 $d
     /tmp/ccW6rN33.s:102    .text.CEC_Cmd:00000000 $t
     /tmp/ccW6rN33.s:108    .text.CEC_Cmd:00000000 CEC_Cmd
     /tmp/ccW6rN33.s:139    .text.CEC_Cmd:00000014 $d
     /tmp/ccW6rN33.s:145    .text.CEC_ITConfig:00000000 $t
     /tmp/ccW6rN33.s:151    .text.CEC_ITConfig:00000000 CEC_ITConfig
     /tmp/ccW6rN33.s:169    .text.CEC_ITConfig:00000008 $d
     /tmp/ccW6rN33.s:174    .text.CEC_OwnAddressConfig:00000000 $t
     /tmp/ccW6rN33.s:180    .text.CEC_OwnAddressConfig:00000000 CEC_OwnAddressConfig
     /tmp/ccW6rN33.s:198    .text.CEC_OwnAddressConfig:00000008 $d
     /tmp/ccW6rN33.s:203    .text.CEC_SetPrescaler:00000000 $t
     /tmp/ccW6rN33.s:209    .text.CEC_SetPrescaler:00000000 CEC_SetPrescaler
     /tmp/ccW6rN33.s:227    .text.CEC_SetPrescaler:00000008 $d
     /tmp/ccW6rN33.s:232    .text.CEC_SendDataByte:00000000 $t
     /tmp/ccW6rN33.s:238    .text.CEC_SendDataByte:00000000 CEC_SendDataByte
     /tmp/ccW6rN33.s:255    .text.CEC_SendDataByte:00000008 $d
     /tmp/ccW6rN33.s:260    .text.CEC_ReceiveDataByte:00000000 $t
     /tmp/ccW6rN33.s:266    .text.CEC_ReceiveDataByte:00000000 CEC_ReceiveDataByte
     /tmp/ccW6rN33.s:283    .text.CEC_ReceiveDataByte:00000008 $d
     /tmp/ccW6rN33.s:288    .text.CEC_StartOfMessage:00000000 $t
     /tmp/ccW6rN33.s:294    .text.CEC_StartOfMessage:00000000 CEC_StartOfMessage
     /tmp/ccW6rN33.s:311    .text.CEC_StartOfMessage:0000000c $d
     /tmp/ccW6rN33.s:316    .text.CEC_EndOfMessageCmd:00000000 $t
     /tmp/ccW6rN33.s:322    .text.CEC_EndOfMessageCmd:00000000 CEC_EndOfMessageCmd
     /tmp/ccW6rN33.s:340    .text.CEC_EndOfMessageCmd:00000008 $d
     /tmp/ccW6rN33.s:345    .text.CEC_GetFlagStatus:00000000 $t
     /tmp/ccW6rN33.s:351    .text.CEC_GetFlagStatus:00000000 CEC_GetFlagStatus
     /tmp/ccW6rN33.s:409    .text.CEC_GetFlagStatus:00000020 $d
     /tmp/ccW6rN33.s:415    .text.CEC_ClearFlag:00000000 $t
     /tmp/ccW6rN33.s:421    .text.CEC_ClearFlag:00000000 CEC_ClearFlag
     /tmp/ccW6rN33.s:457    .text.CEC_ClearFlag:00000018 $d
     /tmp/ccW6rN33.s:462    .text.CEC_GetITStatus:00000000 $t
     /tmp/ccW6rN33.s:468    .text.CEC_GetITStatus:00000000 CEC_GetITStatus
     /tmp/ccW6rN33.s:517    .text.CEC_GetITStatus:0000001c $d
     /tmp/ccW6rN33.s:522    .text.CEC_ClearITPendingBit:00000000 $t
     /tmp/ccW6rN33.s:528    .text.CEC_ClearITPendingBit:00000000 CEC_ClearITPendingBit
     /tmp/ccW6rN33.s:564    .text.CEC_ClearITPendingBit:00000018 $d

UNDEFINED SYMBOLS
RCC_APB1PeriphResetCmd

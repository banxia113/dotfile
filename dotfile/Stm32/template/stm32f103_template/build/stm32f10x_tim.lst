ARM GAS  /tmp/ccvVNijM.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f10x_tim.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "./FWLIB/src/stm32f10x_tim.c"
  18              		.section	.text.TI1_Config,"ax",%progbits
  19              		.align	1
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  24              	TI1_Config:
  25              	.LVL0:
  26              	.LFB116:
   1:./FWLIB/src/stm32f10x_tim.c **** /**
   2:./FWLIB/src/stm32f10x_tim.c ****   ******************************************************************************
   3:./FWLIB/src/stm32f10x_tim.c ****   * @file    stm32f10x_tim.c
   4:./FWLIB/src/stm32f10x_tim.c ****   * @author  MCD Application Team
   5:./FWLIB/src/stm32f10x_tim.c ****   * @version V3.5.0
   6:./FWLIB/src/stm32f10x_tim.c ****   * @date    11-March-2011
   7:./FWLIB/src/stm32f10x_tim.c ****   * @brief   This file provides all the TIM firmware functions.
   8:./FWLIB/src/stm32f10x_tim.c ****   ******************************************************************************
   9:./FWLIB/src/stm32f10x_tim.c ****   * @attention
  10:./FWLIB/src/stm32f10x_tim.c ****   *
  11:./FWLIB/src/stm32f10x_tim.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  12:./FWLIB/src/stm32f10x_tim.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  13:./FWLIB/src/stm32f10x_tim.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  14:./FWLIB/src/stm32f10x_tim.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  15:./FWLIB/src/stm32f10x_tim.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  16:./FWLIB/src/stm32f10x_tim.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  17:./FWLIB/src/stm32f10x_tim.c ****   *
  18:./FWLIB/src/stm32f10x_tim.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
  19:./FWLIB/src/stm32f10x_tim.c ****   ******************************************************************************
  20:./FWLIB/src/stm32f10x_tim.c ****   */
  21:./FWLIB/src/stm32f10x_tim.c **** 
  22:./FWLIB/src/stm32f10x_tim.c **** /* Includes ------------------------------------------------------------------*/
  23:./FWLIB/src/stm32f10x_tim.c **** #include "stm32f10x_tim.h"
  24:./FWLIB/src/stm32f10x_tim.c **** #include "stm32f10x_rcc.h"
  25:./FWLIB/src/stm32f10x_tim.c **** 
  26:./FWLIB/src/stm32f10x_tim.c **** /** @addtogroup STM32F10x_StdPeriph_Driver
  27:./FWLIB/src/stm32f10x_tim.c ****   * @{
  28:./FWLIB/src/stm32f10x_tim.c ****   */
  29:./FWLIB/src/stm32f10x_tim.c **** 
  30:./FWLIB/src/stm32f10x_tim.c **** /** @defgroup TIM 
  31:./FWLIB/src/stm32f10x_tim.c ****   * @brief TIM driver modules
  32:./FWLIB/src/stm32f10x_tim.c ****   * @{
ARM GAS  /tmp/ccvVNijM.s 			page 2


  33:./FWLIB/src/stm32f10x_tim.c ****   */
  34:./FWLIB/src/stm32f10x_tim.c **** 
  35:./FWLIB/src/stm32f10x_tim.c **** /** @defgroup TIM_Private_TypesDefinitions
  36:./FWLIB/src/stm32f10x_tim.c ****   * @{
  37:./FWLIB/src/stm32f10x_tim.c ****   */
  38:./FWLIB/src/stm32f10x_tim.c **** 
  39:./FWLIB/src/stm32f10x_tim.c **** /**
  40:./FWLIB/src/stm32f10x_tim.c ****   * @}
  41:./FWLIB/src/stm32f10x_tim.c ****   */
  42:./FWLIB/src/stm32f10x_tim.c **** 
  43:./FWLIB/src/stm32f10x_tim.c **** /** @defgroup TIM_Private_Defines
  44:./FWLIB/src/stm32f10x_tim.c ****   * @{
  45:./FWLIB/src/stm32f10x_tim.c ****   */
  46:./FWLIB/src/stm32f10x_tim.c **** 
  47:./FWLIB/src/stm32f10x_tim.c **** /* ---------------------- TIM registers bit mask ------------------------ */
  48:./FWLIB/src/stm32f10x_tim.c **** #define SMCR_ETR_Mask               ((uint16_t)0x00FF) 
  49:./FWLIB/src/stm32f10x_tim.c **** #define CCMR_Offset                 ((uint16_t)0x0018)
  50:./FWLIB/src/stm32f10x_tim.c **** #define CCER_CCE_Set                ((uint16_t)0x0001)  
  51:./FWLIB/src/stm32f10x_tim.c **** #define	CCER_CCNE_Set               ((uint16_t)0x0004) 
  52:./FWLIB/src/stm32f10x_tim.c **** 
  53:./FWLIB/src/stm32f10x_tim.c **** /**
  54:./FWLIB/src/stm32f10x_tim.c ****   * @}
  55:./FWLIB/src/stm32f10x_tim.c ****   */
  56:./FWLIB/src/stm32f10x_tim.c **** 
  57:./FWLIB/src/stm32f10x_tim.c **** /** @defgroup TIM_Private_Macros
  58:./FWLIB/src/stm32f10x_tim.c ****   * @{
  59:./FWLIB/src/stm32f10x_tim.c ****   */
  60:./FWLIB/src/stm32f10x_tim.c **** 
  61:./FWLIB/src/stm32f10x_tim.c **** /**
  62:./FWLIB/src/stm32f10x_tim.c ****   * @}
  63:./FWLIB/src/stm32f10x_tim.c ****   */
  64:./FWLIB/src/stm32f10x_tim.c **** 
  65:./FWLIB/src/stm32f10x_tim.c **** /** @defgroup TIM_Private_Variables
  66:./FWLIB/src/stm32f10x_tim.c ****   * @{
  67:./FWLIB/src/stm32f10x_tim.c ****   */
  68:./FWLIB/src/stm32f10x_tim.c **** 
  69:./FWLIB/src/stm32f10x_tim.c **** /**
  70:./FWLIB/src/stm32f10x_tim.c ****   * @}
  71:./FWLIB/src/stm32f10x_tim.c ****   */
  72:./FWLIB/src/stm32f10x_tim.c **** 
  73:./FWLIB/src/stm32f10x_tim.c **** /** @defgroup TIM_Private_FunctionPrototypes
  74:./FWLIB/src/stm32f10x_tim.c ****   * @{
  75:./FWLIB/src/stm32f10x_tim.c ****   */
  76:./FWLIB/src/stm32f10x_tim.c **** 
  77:./FWLIB/src/stm32f10x_tim.c **** static void TI1_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
  78:./FWLIB/src/stm32f10x_tim.c ****                        uint16_t TIM_ICFilter);
  79:./FWLIB/src/stm32f10x_tim.c **** static void TI2_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
  80:./FWLIB/src/stm32f10x_tim.c ****                        uint16_t TIM_ICFilter);
  81:./FWLIB/src/stm32f10x_tim.c **** static void TI3_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
  82:./FWLIB/src/stm32f10x_tim.c ****                        uint16_t TIM_ICFilter);
  83:./FWLIB/src/stm32f10x_tim.c **** static void TI4_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
  84:./FWLIB/src/stm32f10x_tim.c ****                        uint16_t TIM_ICFilter);
  85:./FWLIB/src/stm32f10x_tim.c **** /**
  86:./FWLIB/src/stm32f10x_tim.c ****   * @}
  87:./FWLIB/src/stm32f10x_tim.c ****   */
  88:./FWLIB/src/stm32f10x_tim.c **** 
  89:./FWLIB/src/stm32f10x_tim.c **** /** @defgroup TIM_Private_Macros
ARM GAS  /tmp/ccvVNijM.s 			page 3


  90:./FWLIB/src/stm32f10x_tim.c ****   * @{
  91:./FWLIB/src/stm32f10x_tim.c ****   */
  92:./FWLIB/src/stm32f10x_tim.c **** 
  93:./FWLIB/src/stm32f10x_tim.c **** /**
  94:./FWLIB/src/stm32f10x_tim.c ****   * @}
  95:./FWLIB/src/stm32f10x_tim.c ****   */
  96:./FWLIB/src/stm32f10x_tim.c **** 
  97:./FWLIB/src/stm32f10x_tim.c **** /** @defgroup TIM_Private_Variables
  98:./FWLIB/src/stm32f10x_tim.c ****   * @{
  99:./FWLIB/src/stm32f10x_tim.c ****   */
 100:./FWLIB/src/stm32f10x_tim.c **** 
 101:./FWLIB/src/stm32f10x_tim.c **** /**
 102:./FWLIB/src/stm32f10x_tim.c ****   * @}
 103:./FWLIB/src/stm32f10x_tim.c ****   */
 104:./FWLIB/src/stm32f10x_tim.c **** 
 105:./FWLIB/src/stm32f10x_tim.c **** /** @defgroup TIM_Private_FunctionPrototypes
 106:./FWLIB/src/stm32f10x_tim.c ****   * @{
 107:./FWLIB/src/stm32f10x_tim.c ****   */
 108:./FWLIB/src/stm32f10x_tim.c **** 
 109:./FWLIB/src/stm32f10x_tim.c **** /**
 110:./FWLIB/src/stm32f10x_tim.c ****   * @}
 111:./FWLIB/src/stm32f10x_tim.c ****   */
 112:./FWLIB/src/stm32f10x_tim.c **** 
 113:./FWLIB/src/stm32f10x_tim.c **** /** @defgroup TIM_Private_Functions
 114:./FWLIB/src/stm32f10x_tim.c ****   * @{
 115:./FWLIB/src/stm32f10x_tim.c ****   */
 116:./FWLIB/src/stm32f10x_tim.c **** 
 117:./FWLIB/src/stm32f10x_tim.c **** /**
 118:./FWLIB/src/stm32f10x_tim.c ****   * @brief  Deinitializes the TIMx peripheral registers to their default reset values.
 119:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 to select the TIM peripheral.
 120:./FWLIB/src/stm32f10x_tim.c ****   * @retval None
 121:./FWLIB/src/stm32f10x_tim.c ****   */
 122:./FWLIB/src/stm32f10x_tim.c **** void TIM_DeInit(TIM_TypeDef* TIMx)
 123:./FWLIB/src/stm32f10x_tim.c **** {
 124:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 125:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx)); 
 126:./FWLIB/src/stm32f10x_tim.c ****  
 127:./FWLIB/src/stm32f10x_tim.c ****   if (TIMx == TIM1)
 128:./FWLIB/src/stm32f10x_tim.c ****   {
 129:./FWLIB/src/stm32f10x_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM1, ENABLE);
 130:./FWLIB/src/stm32f10x_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM1, DISABLE);  
 131:./FWLIB/src/stm32f10x_tim.c ****   }     
 132:./FWLIB/src/stm32f10x_tim.c ****   else if (TIMx == TIM2)
 133:./FWLIB/src/stm32f10x_tim.c ****   {
 134:./FWLIB/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM2, ENABLE);
 135:./FWLIB/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM2, DISABLE);
 136:./FWLIB/src/stm32f10x_tim.c ****   }
 137:./FWLIB/src/stm32f10x_tim.c ****   else if (TIMx == TIM3)
 138:./FWLIB/src/stm32f10x_tim.c ****   {
 139:./FWLIB/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM3, ENABLE);
 140:./FWLIB/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM3, DISABLE);
 141:./FWLIB/src/stm32f10x_tim.c ****   }
 142:./FWLIB/src/stm32f10x_tim.c ****   else if (TIMx == TIM4)
 143:./FWLIB/src/stm32f10x_tim.c ****   {
 144:./FWLIB/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM4, ENABLE);
 145:./FWLIB/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM4, DISABLE);
 146:./FWLIB/src/stm32f10x_tim.c ****   } 
ARM GAS  /tmp/ccvVNijM.s 			page 4


 147:./FWLIB/src/stm32f10x_tim.c ****   else if (TIMx == TIM5)
 148:./FWLIB/src/stm32f10x_tim.c ****   {
 149:./FWLIB/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM5, ENABLE);
 150:./FWLIB/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM5, DISABLE);
 151:./FWLIB/src/stm32f10x_tim.c ****   } 
 152:./FWLIB/src/stm32f10x_tim.c ****   else if (TIMx == TIM6)
 153:./FWLIB/src/stm32f10x_tim.c ****   {
 154:./FWLIB/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM6, ENABLE);
 155:./FWLIB/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM6, DISABLE);
 156:./FWLIB/src/stm32f10x_tim.c ****   } 
 157:./FWLIB/src/stm32f10x_tim.c ****   else if (TIMx == TIM7)
 158:./FWLIB/src/stm32f10x_tim.c ****   {
 159:./FWLIB/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM7, ENABLE);
 160:./FWLIB/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM7, DISABLE);
 161:./FWLIB/src/stm32f10x_tim.c ****   } 
 162:./FWLIB/src/stm32f10x_tim.c ****   else if (TIMx == TIM8)
 163:./FWLIB/src/stm32f10x_tim.c ****   {
 164:./FWLIB/src/stm32f10x_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM8, ENABLE);
 165:./FWLIB/src/stm32f10x_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM8, DISABLE);
 166:./FWLIB/src/stm32f10x_tim.c ****   }
 167:./FWLIB/src/stm32f10x_tim.c ****   else if (TIMx == TIM9)
 168:./FWLIB/src/stm32f10x_tim.c ****   {      
 169:./FWLIB/src/stm32f10x_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM9, ENABLE);
 170:./FWLIB/src/stm32f10x_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM9, DISABLE);  
 171:./FWLIB/src/stm32f10x_tim.c ****    }  
 172:./FWLIB/src/stm32f10x_tim.c ****   else if (TIMx == TIM10)
 173:./FWLIB/src/stm32f10x_tim.c ****   {      
 174:./FWLIB/src/stm32f10x_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM10, ENABLE);
 175:./FWLIB/src/stm32f10x_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM10, DISABLE);  
 176:./FWLIB/src/stm32f10x_tim.c ****   }  
 177:./FWLIB/src/stm32f10x_tim.c ****   else if (TIMx == TIM11) 
 178:./FWLIB/src/stm32f10x_tim.c ****   {     
 179:./FWLIB/src/stm32f10x_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM11, ENABLE);
 180:./FWLIB/src/stm32f10x_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM11, DISABLE);  
 181:./FWLIB/src/stm32f10x_tim.c ****   }  
 182:./FWLIB/src/stm32f10x_tim.c ****   else if (TIMx == TIM12)
 183:./FWLIB/src/stm32f10x_tim.c ****   {      
 184:./FWLIB/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM12, ENABLE);
 185:./FWLIB/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM12, DISABLE);  
 186:./FWLIB/src/stm32f10x_tim.c ****   }  
 187:./FWLIB/src/stm32f10x_tim.c ****   else if (TIMx == TIM13) 
 188:./FWLIB/src/stm32f10x_tim.c ****   {       
 189:./FWLIB/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM13, ENABLE);
 190:./FWLIB/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM13, DISABLE);  
 191:./FWLIB/src/stm32f10x_tim.c ****   }
 192:./FWLIB/src/stm32f10x_tim.c ****   else if (TIMx == TIM14) 
 193:./FWLIB/src/stm32f10x_tim.c ****   {       
 194:./FWLIB/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM14, ENABLE);
 195:./FWLIB/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM14, DISABLE);  
 196:./FWLIB/src/stm32f10x_tim.c ****   }        
 197:./FWLIB/src/stm32f10x_tim.c ****   else if (TIMx == TIM15)
 198:./FWLIB/src/stm32f10x_tim.c ****   {
 199:./FWLIB/src/stm32f10x_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM15, ENABLE);
 200:./FWLIB/src/stm32f10x_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM15, DISABLE);
 201:./FWLIB/src/stm32f10x_tim.c ****   } 
 202:./FWLIB/src/stm32f10x_tim.c ****   else if (TIMx == TIM16)
 203:./FWLIB/src/stm32f10x_tim.c ****   {
ARM GAS  /tmp/ccvVNijM.s 			page 5


 204:./FWLIB/src/stm32f10x_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM16, ENABLE);
 205:./FWLIB/src/stm32f10x_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM16, DISABLE);
 206:./FWLIB/src/stm32f10x_tim.c ****   } 
 207:./FWLIB/src/stm32f10x_tim.c ****   else
 208:./FWLIB/src/stm32f10x_tim.c ****   {
 209:./FWLIB/src/stm32f10x_tim.c ****     if (TIMx == TIM17)
 210:./FWLIB/src/stm32f10x_tim.c ****     {
 211:./FWLIB/src/stm32f10x_tim.c ****       RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM17, ENABLE);
 212:./FWLIB/src/stm32f10x_tim.c ****       RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM17, DISABLE);
 213:./FWLIB/src/stm32f10x_tim.c ****     }  
 214:./FWLIB/src/stm32f10x_tim.c ****   }
 215:./FWLIB/src/stm32f10x_tim.c **** }
 216:./FWLIB/src/stm32f10x_tim.c **** 
 217:./FWLIB/src/stm32f10x_tim.c **** /**
 218:./FWLIB/src/stm32f10x_tim.c ****   * @brief  Initializes the TIMx Time Base Unit peripheral according to 
 219:./FWLIB/src/stm32f10x_tim.c ****   *         the specified parameters in the TIM_TimeBaseInitStruct.
 220:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 to select the TIM peripheral.
 221:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_TimeBaseInitStruct: pointer to a TIM_TimeBaseInitTypeDef
 222:./FWLIB/src/stm32f10x_tim.c ****   *         structure that contains the configuration information for the 
 223:./FWLIB/src/stm32f10x_tim.c ****   *         specified TIM peripheral.
 224:./FWLIB/src/stm32f10x_tim.c ****   * @retval None
 225:./FWLIB/src/stm32f10x_tim.c ****   */
 226:./FWLIB/src/stm32f10x_tim.c **** void TIM_TimeBaseInit(TIM_TypeDef* TIMx, TIM_TimeBaseInitTypeDef* TIM_TimeBaseInitStruct)
 227:./FWLIB/src/stm32f10x_tim.c **** {
 228:./FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpcr1 = 0;
 229:./FWLIB/src/stm32f10x_tim.c **** 
 230:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 231:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx)); 
 232:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_COUNTER_MODE(TIM_TimeBaseInitStruct->TIM_CounterMode));
 233:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_CKD_DIV(TIM_TimeBaseInitStruct->TIM_ClockDivision));
 234:./FWLIB/src/stm32f10x_tim.c **** 
 235:./FWLIB/src/stm32f10x_tim.c ****   tmpcr1 = TIMx->CR1;  
 236:./FWLIB/src/stm32f10x_tim.c **** 
 237:./FWLIB/src/stm32f10x_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8)|| (TIMx == TIM2) || (TIMx == TIM3)||
 238:./FWLIB/src/stm32f10x_tim.c ****      (TIMx == TIM4) || (TIMx == TIM5)) 
 239:./FWLIB/src/stm32f10x_tim.c ****   {
 240:./FWLIB/src/stm32f10x_tim.c ****     /* Select the Counter Mode */
 241:./FWLIB/src/stm32f10x_tim.c ****     tmpcr1 &= (uint16_t)(~((uint16_t)(TIM_CR1_DIR | TIM_CR1_CMS)));
 242:./FWLIB/src/stm32f10x_tim.c ****     tmpcr1 |= (uint32_t)TIM_TimeBaseInitStruct->TIM_CounterMode;
 243:./FWLIB/src/stm32f10x_tim.c ****   }
 244:./FWLIB/src/stm32f10x_tim.c ****  
 245:./FWLIB/src/stm32f10x_tim.c ****   if((TIMx != TIM6) && (TIMx != TIM7))
 246:./FWLIB/src/stm32f10x_tim.c ****   {
 247:./FWLIB/src/stm32f10x_tim.c ****     /* Set the clock division */
 248:./FWLIB/src/stm32f10x_tim.c ****     tmpcr1 &= (uint16_t)(~((uint16_t)TIM_CR1_CKD));
 249:./FWLIB/src/stm32f10x_tim.c ****     tmpcr1 |= (uint32_t)TIM_TimeBaseInitStruct->TIM_ClockDivision;
 250:./FWLIB/src/stm32f10x_tim.c ****   }
 251:./FWLIB/src/stm32f10x_tim.c **** 
 252:./FWLIB/src/stm32f10x_tim.c ****   TIMx->CR1 = tmpcr1;
 253:./FWLIB/src/stm32f10x_tim.c **** 
 254:./FWLIB/src/stm32f10x_tim.c ****   /* Set the Autoreload value */
 255:./FWLIB/src/stm32f10x_tim.c ****   TIMx->ARR = TIM_TimeBaseInitStruct->TIM_Period ;
 256:./FWLIB/src/stm32f10x_tim.c ****  
 257:./FWLIB/src/stm32f10x_tim.c ****   /* Set the Prescaler value */
 258:./FWLIB/src/stm32f10x_tim.c ****   TIMx->PSC = TIM_TimeBaseInitStruct->TIM_Prescaler;
 259:./FWLIB/src/stm32f10x_tim.c ****     
 260:./FWLIB/src/stm32f10x_tim.c ****   if ((TIMx == TIM1) || (TIMx == TIM8)|| (TIMx == TIM15)|| (TIMx == TIM16) || (TIMx == TIM17))  
ARM GAS  /tmp/ccvVNijM.s 			page 6


 261:./FWLIB/src/stm32f10x_tim.c ****   {
 262:./FWLIB/src/stm32f10x_tim.c ****     /* Set the Repetition Counter value */
 263:./FWLIB/src/stm32f10x_tim.c ****     TIMx->RCR = TIM_TimeBaseInitStruct->TIM_RepetitionCounter;
 264:./FWLIB/src/stm32f10x_tim.c ****   }
 265:./FWLIB/src/stm32f10x_tim.c **** 
 266:./FWLIB/src/stm32f10x_tim.c ****   /* Generate an update event to reload the Prescaler and the Repetition counter
 267:./FWLIB/src/stm32f10x_tim.c ****      values immediately */
 268:./FWLIB/src/stm32f10x_tim.c ****   TIMx->EGR = TIM_PSCReloadMode_Immediate;           
 269:./FWLIB/src/stm32f10x_tim.c **** }
 270:./FWLIB/src/stm32f10x_tim.c **** 
 271:./FWLIB/src/stm32f10x_tim.c **** /**
 272:./FWLIB/src/stm32f10x_tim.c ****   * @brief  Initializes the TIMx Channel1 according to the specified
 273:./FWLIB/src/stm32f10x_tim.c ****   *         parameters in the TIM_OCInitStruct.
 274:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1 to 17 except 6 and 7 to select the TIM peripheral.
 275:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_OCInitStruct: pointer to a TIM_OCInitTypeDef structure
 276:./FWLIB/src/stm32f10x_tim.c ****   *         that contains the configuration information for the specified TIM peripheral.
 277:./FWLIB/src/stm32f10x_tim.c ****   * @retval None
 278:./FWLIB/src/stm32f10x_tim.c ****   */
 279:./FWLIB/src/stm32f10x_tim.c **** void TIM_OC1Init(TIM_TypeDef* TIMx, TIM_OCInitTypeDef* TIM_OCInitStruct)
 280:./FWLIB/src/stm32f10x_tim.c **** {
 281:./FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpccmrx = 0, tmpccer = 0, tmpcr2 = 0;
 282:./FWLIB/src/stm32f10x_tim.c ****    
 283:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 284:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST8_PERIPH(TIMx));
 285:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OC_MODE(TIM_OCInitStruct->TIM_OCMode));
 286:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OUTPUT_STATE(TIM_OCInitStruct->TIM_OutputState));
 287:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCInitStruct->TIM_OCPolarity));   
 288:./FWLIB/src/stm32f10x_tim.c ****  /* Disable the Channel 1: Reset the CC1E Bit */
 289:./FWLIB/src/stm32f10x_tim.c ****   TIMx->CCER &= (uint16_t)(~(uint16_t)TIM_CCER_CC1E);
 290:./FWLIB/src/stm32f10x_tim.c ****   /* Get the TIMx CCER register value */
 291:./FWLIB/src/stm32f10x_tim.c ****   tmpccer = TIMx->CCER;
 292:./FWLIB/src/stm32f10x_tim.c ****   /* Get the TIMx CR2 register value */
 293:./FWLIB/src/stm32f10x_tim.c ****   tmpcr2 =  TIMx->CR2;
 294:./FWLIB/src/stm32f10x_tim.c ****   
 295:./FWLIB/src/stm32f10x_tim.c ****   /* Get the TIMx CCMR1 register value */
 296:./FWLIB/src/stm32f10x_tim.c ****   tmpccmrx = TIMx->CCMR1;
 297:./FWLIB/src/stm32f10x_tim.c ****     
 298:./FWLIB/src/stm32f10x_tim.c ****   /* Reset the Output Compare Mode Bits */
 299:./FWLIB/src/stm32f10x_tim.c ****   tmpccmrx &= (uint16_t)(~((uint16_t)TIM_CCMR1_OC1M));
 300:./FWLIB/src/stm32f10x_tim.c ****   tmpccmrx &= (uint16_t)(~((uint16_t)TIM_CCMR1_CC1S));
 301:./FWLIB/src/stm32f10x_tim.c **** 
 302:./FWLIB/src/stm32f10x_tim.c ****   /* Select the Output Compare Mode */
 303:./FWLIB/src/stm32f10x_tim.c ****   tmpccmrx |= TIM_OCInitStruct->TIM_OCMode;
 304:./FWLIB/src/stm32f10x_tim.c ****   
 305:./FWLIB/src/stm32f10x_tim.c ****   /* Reset the Output Polarity level */
 306:./FWLIB/src/stm32f10x_tim.c ****   tmpccer &= (uint16_t)(~((uint16_t)TIM_CCER_CC1P));
 307:./FWLIB/src/stm32f10x_tim.c ****   /* Set the Output Compare Polarity */
 308:./FWLIB/src/stm32f10x_tim.c ****   tmpccer |= TIM_OCInitStruct->TIM_OCPolarity;
 309:./FWLIB/src/stm32f10x_tim.c ****   
 310:./FWLIB/src/stm32f10x_tim.c ****   /* Set the Output State */
 311:./FWLIB/src/stm32f10x_tim.c ****   tmpccer |= TIM_OCInitStruct->TIM_OutputState;
 312:./FWLIB/src/stm32f10x_tim.c ****     
 313:./FWLIB/src/stm32f10x_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8)|| (TIMx == TIM15)||
 314:./FWLIB/src/stm32f10x_tim.c ****      (TIMx == TIM16)|| (TIMx == TIM17))
 315:./FWLIB/src/stm32f10x_tim.c ****   {
 316:./FWLIB/src/stm32f10x_tim.c ****     assert_param(IS_TIM_OUTPUTN_STATE(TIM_OCInitStruct->TIM_OutputNState));
 317:./FWLIB/src/stm32f10x_tim.c ****     assert_param(IS_TIM_OCN_POLARITY(TIM_OCInitStruct->TIM_OCNPolarity));
ARM GAS  /tmp/ccvVNijM.s 			page 7


 318:./FWLIB/src/stm32f10x_tim.c ****     assert_param(IS_TIM_OCNIDLE_STATE(TIM_OCInitStruct->TIM_OCNIdleState));
 319:./FWLIB/src/stm32f10x_tim.c ****     assert_param(IS_TIM_OCIDLE_STATE(TIM_OCInitStruct->TIM_OCIdleState));
 320:./FWLIB/src/stm32f10x_tim.c ****     
 321:./FWLIB/src/stm32f10x_tim.c ****     /* Reset the Output N Polarity level */
 322:./FWLIB/src/stm32f10x_tim.c ****     tmpccer &= (uint16_t)(~((uint16_t)TIM_CCER_CC1NP));
 323:./FWLIB/src/stm32f10x_tim.c ****     /* Set the Output N Polarity */
 324:./FWLIB/src/stm32f10x_tim.c ****     tmpccer |= TIM_OCInitStruct->TIM_OCNPolarity;
 325:./FWLIB/src/stm32f10x_tim.c ****     
 326:./FWLIB/src/stm32f10x_tim.c ****     /* Reset the Output N State */
 327:./FWLIB/src/stm32f10x_tim.c ****     tmpccer &= (uint16_t)(~((uint16_t)TIM_CCER_CC1NE));    
 328:./FWLIB/src/stm32f10x_tim.c ****     /* Set the Output N State */
 329:./FWLIB/src/stm32f10x_tim.c ****     tmpccer |= TIM_OCInitStruct->TIM_OutputNState;
 330:./FWLIB/src/stm32f10x_tim.c ****     
 331:./FWLIB/src/stm32f10x_tim.c ****     /* Reset the Output Compare and Output Compare N IDLE State */
 332:./FWLIB/src/stm32f10x_tim.c ****     tmpcr2 &= (uint16_t)(~((uint16_t)TIM_CR2_OIS1));
 333:./FWLIB/src/stm32f10x_tim.c ****     tmpcr2 &= (uint16_t)(~((uint16_t)TIM_CR2_OIS1N));
 334:./FWLIB/src/stm32f10x_tim.c ****     
 335:./FWLIB/src/stm32f10x_tim.c ****     /* Set the Output Idle state */
 336:./FWLIB/src/stm32f10x_tim.c ****     tmpcr2 |= TIM_OCInitStruct->TIM_OCIdleState;
 337:./FWLIB/src/stm32f10x_tim.c ****     /* Set the Output N Idle state */
 338:./FWLIB/src/stm32f10x_tim.c ****     tmpcr2 |= TIM_OCInitStruct->TIM_OCNIdleState;
 339:./FWLIB/src/stm32f10x_tim.c ****   }
 340:./FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CR2 */
 341:./FWLIB/src/stm32f10x_tim.c ****   TIMx->CR2 = tmpcr2;
 342:./FWLIB/src/stm32f10x_tim.c ****   
 343:./FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR1 */
 344:./FWLIB/src/stm32f10x_tim.c ****   TIMx->CCMR1 = tmpccmrx;
 345:./FWLIB/src/stm32f10x_tim.c **** 
 346:./FWLIB/src/stm32f10x_tim.c ****   /* Set the Capture Compare Register value */
 347:./FWLIB/src/stm32f10x_tim.c ****   TIMx->CCR1 = TIM_OCInitStruct->TIM_Pulse; 
 348:./FWLIB/src/stm32f10x_tim.c ****  
 349:./FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCER */
 350:./FWLIB/src/stm32f10x_tim.c ****   TIMx->CCER = tmpccer;
 351:./FWLIB/src/stm32f10x_tim.c **** }
 352:./FWLIB/src/stm32f10x_tim.c **** 
 353:./FWLIB/src/stm32f10x_tim.c **** /**
 354:./FWLIB/src/stm32f10x_tim.c ****   * @brief  Initializes the TIMx Channel2 according to the specified
 355:./FWLIB/src/stm32f10x_tim.c ****   *         parameters in the TIM_OCInitStruct.
 356:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5, 8, 9, 12 or 15 to select 
 357:./FWLIB/src/stm32f10x_tim.c ****   *         the TIM peripheral.
 358:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_OCInitStruct: pointer to a TIM_OCInitTypeDef structure
 359:./FWLIB/src/stm32f10x_tim.c ****   *         that contains the configuration information for the specified TIM peripheral.
 360:./FWLIB/src/stm32f10x_tim.c ****   * @retval None
 361:./FWLIB/src/stm32f10x_tim.c ****   */
 362:./FWLIB/src/stm32f10x_tim.c **** void TIM_OC2Init(TIM_TypeDef* TIMx, TIM_OCInitTypeDef* TIM_OCInitStruct)
 363:./FWLIB/src/stm32f10x_tim.c **** {
 364:./FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpccmrx = 0, tmpccer = 0, tmpcr2 = 0;
 365:./FWLIB/src/stm32f10x_tim.c ****    
 366:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 367:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST6_PERIPH(TIMx)); 
 368:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OC_MODE(TIM_OCInitStruct->TIM_OCMode));
 369:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OUTPUT_STATE(TIM_OCInitStruct->TIM_OutputState));
 370:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCInitStruct->TIM_OCPolarity));   
 371:./FWLIB/src/stm32f10x_tim.c ****    /* Disable the Channel 2: Reset the CC2E Bit */
 372:./FWLIB/src/stm32f10x_tim.c ****   TIMx->CCER &= (uint16_t)(~((uint16_t)TIM_CCER_CC2E));
 373:./FWLIB/src/stm32f10x_tim.c ****   
 374:./FWLIB/src/stm32f10x_tim.c ****   /* Get the TIMx CCER register value */  
ARM GAS  /tmp/ccvVNijM.s 			page 8


 375:./FWLIB/src/stm32f10x_tim.c ****   tmpccer = TIMx->CCER;
 376:./FWLIB/src/stm32f10x_tim.c ****   /* Get the TIMx CR2 register value */
 377:./FWLIB/src/stm32f10x_tim.c ****   tmpcr2 =  TIMx->CR2;
 378:./FWLIB/src/stm32f10x_tim.c ****   
 379:./FWLIB/src/stm32f10x_tim.c ****   /* Get the TIMx CCMR1 register value */
 380:./FWLIB/src/stm32f10x_tim.c ****   tmpccmrx = TIMx->CCMR1;
 381:./FWLIB/src/stm32f10x_tim.c ****     
 382:./FWLIB/src/stm32f10x_tim.c ****   /* Reset the Output Compare mode and Capture/Compare selection Bits */
 383:./FWLIB/src/stm32f10x_tim.c ****   tmpccmrx &= (uint16_t)(~((uint16_t)TIM_CCMR1_OC2M));
 384:./FWLIB/src/stm32f10x_tim.c ****   tmpccmrx &= (uint16_t)(~((uint16_t)TIM_CCMR1_CC2S));
 385:./FWLIB/src/stm32f10x_tim.c ****   
 386:./FWLIB/src/stm32f10x_tim.c ****   /* Select the Output Compare Mode */
 387:./FWLIB/src/stm32f10x_tim.c ****   tmpccmrx |= (uint16_t)(TIM_OCInitStruct->TIM_OCMode << 8);
 388:./FWLIB/src/stm32f10x_tim.c ****   
 389:./FWLIB/src/stm32f10x_tim.c ****   /* Reset the Output Polarity level */
 390:./FWLIB/src/stm32f10x_tim.c ****   tmpccer &= (uint16_t)(~((uint16_t)TIM_CCER_CC2P));
 391:./FWLIB/src/stm32f10x_tim.c ****   /* Set the Output Compare Polarity */
 392:./FWLIB/src/stm32f10x_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OCPolarity << 4);
 393:./FWLIB/src/stm32f10x_tim.c ****   
 394:./FWLIB/src/stm32f10x_tim.c ****   /* Set the Output State */
 395:./FWLIB/src/stm32f10x_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OutputState << 4);
 396:./FWLIB/src/stm32f10x_tim.c ****     
 397:./FWLIB/src/stm32f10x_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8))
 398:./FWLIB/src/stm32f10x_tim.c ****   {
 399:./FWLIB/src/stm32f10x_tim.c ****     assert_param(IS_TIM_OUTPUTN_STATE(TIM_OCInitStruct->TIM_OutputNState));
 400:./FWLIB/src/stm32f10x_tim.c ****     assert_param(IS_TIM_OCN_POLARITY(TIM_OCInitStruct->TIM_OCNPolarity));
 401:./FWLIB/src/stm32f10x_tim.c ****     assert_param(IS_TIM_OCNIDLE_STATE(TIM_OCInitStruct->TIM_OCNIdleState));
 402:./FWLIB/src/stm32f10x_tim.c ****     assert_param(IS_TIM_OCIDLE_STATE(TIM_OCInitStruct->TIM_OCIdleState));
 403:./FWLIB/src/stm32f10x_tim.c ****     
 404:./FWLIB/src/stm32f10x_tim.c ****     /* Reset the Output N Polarity level */
 405:./FWLIB/src/stm32f10x_tim.c ****     tmpccer &= (uint16_t)(~((uint16_t)TIM_CCER_CC2NP));
 406:./FWLIB/src/stm32f10x_tim.c ****     /* Set the Output N Polarity */
 407:./FWLIB/src/stm32f10x_tim.c ****     tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OCNPolarity << 4);
 408:./FWLIB/src/stm32f10x_tim.c ****     
 409:./FWLIB/src/stm32f10x_tim.c ****     /* Reset the Output N State */
 410:./FWLIB/src/stm32f10x_tim.c ****     tmpccer &= (uint16_t)(~((uint16_t)TIM_CCER_CC2NE));    
 411:./FWLIB/src/stm32f10x_tim.c ****     /* Set the Output N State */
 412:./FWLIB/src/stm32f10x_tim.c ****     tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OutputNState << 4);
 413:./FWLIB/src/stm32f10x_tim.c ****     
 414:./FWLIB/src/stm32f10x_tim.c ****     /* Reset the Output Compare and Output Compare N IDLE State */
 415:./FWLIB/src/stm32f10x_tim.c ****     tmpcr2 &= (uint16_t)(~((uint16_t)TIM_CR2_OIS2));
 416:./FWLIB/src/stm32f10x_tim.c ****     tmpcr2 &= (uint16_t)(~((uint16_t)TIM_CR2_OIS2N));
 417:./FWLIB/src/stm32f10x_tim.c ****     
 418:./FWLIB/src/stm32f10x_tim.c ****     /* Set the Output Idle state */
 419:./FWLIB/src/stm32f10x_tim.c ****     tmpcr2 |= (uint16_t)(TIM_OCInitStruct->TIM_OCIdleState << 2);
 420:./FWLIB/src/stm32f10x_tim.c ****     /* Set the Output N Idle state */
 421:./FWLIB/src/stm32f10x_tim.c ****     tmpcr2 |= (uint16_t)(TIM_OCInitStruct->TIM_OCNIdleState << 2);
 422:./FWLIB/src/stm32f10x_tim.c ****   }
 423:./FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CR2 */
 424:./FWLIB/src/stm32f10x_tim.c ****   TIMx->CR2 = tmpcr2;
 425:./FWLIB/src/stm32f10x_tim.c ****   
 426:./FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR1 */
 427:./FWLIB/src/stm32f10x_tim.c ****   TIMx->CCMR1 = tmpccmrx;
 428:./FWLIB/src/stm32f10x_tim.c **** 
 429:./FWLIB/src/stm32f10x_tim.c ****   /* Set the Capture Compare Register value */
 430:./FWLIB/src/stm32f10x_tim.c ****   TIMx->CCR2 = TIM_OCInitStruct->TIM_Pulse;
 431:./FWLIB/src/stm32f10x_tim.c ****   
ARM GAS  /tmp/ccvVNijM.s 			page 9


 432:./FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCER */
 433:./FWLIB/src/stm32f10x_tim.c ****   TIMx->CCER = tmpccer;
 434:./FWLIB/src/stm32f10x_tim.c **** }
 435:./FWLIB/src/stm32f10x_tim.c **** 
 436:./FWLIB/src/stm32f10x_tim.c **** /**
 437:./FWLIB/src/stm32f10x_tim.c ****   * @brief  Initializes the TIMx Channel3 according to the specified
 438:./FWLIB/src/stm32f10x_tim.c ****   *         parameters in the TIM_OCInitStruct.
 439:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
 440:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_OCInitStruct: pointer to a TIM_OCInitTypeDef structure
 441:./FWLIB/src/stm32f10x_tim.c ****   *         that contains the configuration information for the specified TIM peripheral.
 442:./FWLIB/src/stm32f10x_tim.c ****   * @retval None
 443:./FWLIB/src/stm32f10x_tim.c ****   */
 444:./FWLIB/src/stm32f10x_tim.c **** void TIM_OC3Init(TIM_TypeDef* TIMx, TIM_OCInitTypeDef* TIM_OCInitStruct)
 445:./FWLIB/src/stm32f10x_tim.c **** {
 446:./FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpccmrx = 0, tmpccer = 0, tmpcr2 = 0;
 447:./FWLIB/src/stm32f10x_tim.c ****    
 448:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 449:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx)); 
 450:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OC_MODE(TIM_OCInitStruct->TIM_OCMode));
 451:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OUTPUT_STATE(TIM_OCInitStruct->TIM_OutputState));
 452:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCInitStruct->TIM_OCPolarity));   
 453:./FWLIB/src/stm32f10x_tim.c ****   /* Disable the Channel 2: Reset the CC2E Bit */
 454:./FWLIB/src/stm32f10x_tim.c ****   TIMx->CCER &= (uint16_t)(~((uint16_t)TIM_CCER_CC3E));
 455:./FWLIB/src/stm32f10x_tim.c ****   
 456:./FWLIB/src/stm32f10x_tim.c ****   /* Get the TIMx CCER register value */
 457:./FWLIB/src/stm32f10x_tim.c ****   tmpccer = TIMx->CCER;
 458:./FWLIB/src/stm32f10x_tim.c ****   /* Get the TIMx CR2 register value */
 459:./FWLIB/src/stm32f10x_tim.c ****   tmpcr2 =  TIMx->CR2;
 460:./FWLIB/src/stm32f10x_tim.c ****   
 461:./FWLIB/src/stm32f10x_tim.c ****   /* Get the TIMx CCMR2 register value */
 462:./FWLIB/src/stm32f10x_tim.c ****   tmpccmrx = TIMx->CCMR2;
 463:./FWLIB/src/stm32f10x_tim.c ****     
 464:./FWLIB/src/stm32f10x_tim.c ****   /* Reset the Output Compare mode and Capture/Compare selection Bits */
 465:./FWLIB/src/stm32f10x_tim.c ****   tmpccmrx &= (uint16_t)(~((uint16_t)TIM_CCMR2_OC3M));
 466:./FWLIB/src/stm32f10x_tim.c ****   tmpccmrx &= (uint16_t)(~((uint16_t)TIM_CCMR2_CC3S));  
 467:./FWLIB/src/stm32f10x_tim.c ****   /* Select the Output Compare Mode */
 468:./FWLIB/src/stm32f10x_tim.c ****   tmpccmrx |= TIM_OCInitStruct->TIM_OCMode;
 469:./FWLIB/src/stm32f10x_tim.c ****   
 470:./FWLIB/src/stm32f10x_tim.c ****   /* Reset the Output Polarity level */
 471:./FWLIB/src/stm32f10x_tim.c ****   tmpccer &= (uint16_t)(~((uint16_t)TIM_CCER_CC3P));
 472:./FWLIB/src/stm32f10x_tim.c ****   /* Set the Output Compare Polarity */
 473:./FWLIB/src/stm32f10x_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OCPolarity << 8);
 474:./FWLIB/src/stm32f10x_tim.c ****   
 475:./FWLIB/src/stm32f10x_tim.c ****   /* Set the Output State */
 476:./FWLIB/src/stm32f10x_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OutputState << 8);
 477:./FWLIB/src/stm32f10x_tim.c ****     
 478:./FWLIB/src/stm32f10x_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8))
 479:./FWLIB/src/stm32f10x_tim.c ****   {
 480:./FWLIB/src/stm32f10x_tim.c ****     assert_param(IS_TIM_OUTPUTN_STATE(TIM_OCInitStruct->TIM_OutputNState));
 481:./FWLIB/src/stm32f10x_tim.c ****     assert_param(IS_TIM_OCN_POLARITY(TIM_OCInitStruct->TIM_OCNPolarity));
 482:./FWLIB/src/stm32f10x_tim.c ****     assert_param(IS_TIM_OCNIDLE_STATE(TIM_OCInitStruct->TIM_OCNIdleState));
 483:./FWLIB/src/stm32f10x_tim.c ****     assert_param(IS_TIM_OCIDLE_STATE(TIM_OCInitStruct->TIM_OCIdleState));
 484:./FWLIB/src/stm32f10x_tim.c ****     
 485:./FWLIB/src/stm32f10x_tim.c ****     /* Reset the Output N Polarity level */
 486:./FWLIB/src/stm32f10x_tim.c ****     tmpccer &= (uint16_t)(~((uint16_t)TIM_CCER_CC3NP));
 487:./FWLIB/src/stm32f10x_tim.c ****     /* Set the Output N Polarity */
 488:./FWLIB/src/stm32f10x_tim.c ****     tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OCNPolarity << 8);
ARM GAS  /tmp/ccvVNijM.s 			page 10


 489:./FWLIB/src/stm32f10x_tim.c ****     /* Reset the Output N State */
 490:./FWLIB/src/stm32f10x_tim.c ****     tmpccer &= (uint16_t)(~((uint16_t)TIM_CCER_CC3NE));
 491:./FWLIB/src/stm32f10x_tim.c ****     
 492:./FWLIB/src/stm32f10x_tim.c ****     /* Set the Output N State */
 493:./FWLIB/src/stm32f10x_tim.c ****     tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OutputNState << 8);
 494:./FWLIB/src/stm32f10x_tim.c ****     /* Reset the Output Compare and Output Compare N IDLE State */
 495:./FWLIB/src/stm32f10x_tim.c ****     tmpcr2 &= (uint16_t)(~((uint16_t)TIM_CR2_OIS3));
 496:./FWLIB/src/stm32f10x_tim.c ****     tmpcr2 &= (uint16_t)(~((uint16_t)TIM_CR2_OIS3N));
 497:./FWLIB/src/stm32f10x_tim.c ****     /* Set the Output Idle state */
 498:./FWLIB/src/stm32f10x_tim.c ****     tmpcr2 |= (uint16_t)(TIM_OCInitStruct->TIM_OCIdleState << 4);
 499:./FWLIB/src/stm32f10x_tim.c ****     /* Set the Output N Idle state */
 500:./FWLIB/src/stm32f10x_tim.c ****     tmpcr2 |= (uint16_t)(TIM_OCInitStruct->TIM_OCNIdleState << 4);
 501:./FWLIB/src/stm32f10x_tim.c ****   }
 502:./FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CR2 */
 503:./FWLIB/src/stm32f10x_tim.c ****   TIMx->CR2 = tmpcr2;
 504:./FWLIB/src/stm32f10x_tim.c ****   
 505:./FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR2 */
 506:./FWLIB/src/stm32f10x_tim.c ****   TIMx->CCMR2 = tmpccmrx;
 507:./FWLIB/src/stm32f10x_tim.c **** 
 508:./FWLIB/src/stm32f10x_tim.c ****   /* Set the Capture Compare Register value */
 509:./FWLIB/src/stm32f10x_tim.c ****   TIMx->CCR3 = TIM_OCInitStruct->TIM_Pulse;
 510:./FWLIB/src/stm32f10x_tim.c ****   
 511:./FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCER */
 512:./FWLIB/src/stm32f10x_tim.c ****   TIMx->CCER = tmpccer;
 513:./FWLIB/src/stm32f10x_tim.c **** }
 514:./FWLIB/src/stm32f10x_tim.c **** 
 515:./FWLIB/src/stm32f10x_tim.c **** /**
 516:./FWLIB/src/stm32f10x_tim.c ****   * @brief  Initializes the TIMx Channel4 according to the specified
 517:./FWLIB/src/stm32f10x_tim.c ****   *         parameters in the TIM_OCInitStruct.
 518:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
 519:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_OCInitStruct: pointer to a TIM_OCInitTypeDef structure
 520:./FWLIB/src/stm32f10x_tim.c ****   *         that contains the configuration information for the specified TIM peripheral.
 521:./FWLIB/src/stm32f10x_tim.c ****   * @retval None
 522:./FWLIB/src/stm32f10x_tim.c ****   */
 523:./FWLIB/src/stm32f10x_tim.c **** void TIM_OC4Init(TIM_TypeDef* TIMx, TIM_OCInitTypeDef* TIM_OCInitStruct)
 524:./FWLIB/src/stm32f10x_tim.c **** {
 525:./FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpccmrx = 0, tmpccer = 0, tmpcr2 = 0;
 526:./FWLIB/src/stm32f10x_tim.c ****    
 527:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 528:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx)); 
 529:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OC_MODE(TIM_OCInitStruct->TIM_OCMode));
 530:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OUTPUT_STATE(TIM_OCInitStruct->TIM_OutputState));
 531:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCInitStruct->TIM_OCPolarity));   
 532:./FWLIB/src/stm32f10x_tim.c ****   /* Disable the Channel 2: Reset the CC4E Bit */
 533:./FWLIB/src/stm32f10x_tim.c ****   TIMx->CCER &= (uint16_t)(~((uint16_t)TIM_CCER_CC4E));
 534:./FWLIB/src/stm32f10x_tim.c ****   
 535:./FWLIB/src/stm32f10x_tim.c ****   /* Get the TIMx CCER register value */
 536:./FWLIB/src/stm32f10x_tim.c ****   tmpccer = TIMx->CCER;
 537:./FWLIB/src/stm32f10x_tim.c ****   /* Get the TIMx CR2 register value */
 538:./FWLIB/src/stm32f10x_tim.c ****   tmpcr2 =  TIMx->CR2;
 539:./FWLIB/src/stm32f10x_tim.c ****   
 540:./FWLIB/src/stm32f10x_tim.c ****   /* Get the TIMx CCMR2 register value */
 541:./FWLIB/src/stm32f10x_tim.c ****   tmpccmrx = TIMx->CCMR2;
 542:./FWLIB/src/stm32f10x_tim.c ****     
 543:./FWLIB/src/stm32f10x_tim.c ****   /* Reset the Output Compare mode and Capture/Compare selection Bits */
 544:./FWLIB/src/stm32f10x_tim.c ****   tmpccmrx &= (uint16_t)(~((uint16_t)TIM_CCMR2_OC4M));
 545:./FWLIB/src/stm32f10x_tim.c ****   tmpccmrx &= (uint16_t)(~((uint16_t)TIM_CCMR2_CC4S));
ARM GAS  /tmp/ccvVNijM.s 			page 11


 546:./FWLIB/src/stm32f10x_tim.c ****   
 547:./FWLIB/src/stm32f10x_tim.c ****   /* Select the Output Compare Mode */
 548:./FWLIB/src/stm32f10x_tim.c ****   tmpccmrx |= (uint16_t)(TIM_OCInitStruct->TIM_OCMode << 8);
 549:./FWLIB/src/stm32f10x_tim.c ****   
 550:./FWLIB/src/stm32f10x_tim.c ****   /* Reset the Output Polarity level */
 551:./FWLIB/src/stm32f10x_tim.c ****   tmpccer &= (uint16_t)(~((uint16_t)TIM_CCER_CC4P));
 552:./FWLIB/src/stm32f10x_tim.c ****   /* Set the Output Compare Polarity */
 553:./FWLIB/src/stm32f10x_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OCPolarity << 12);
 554:./FWLIB/src/stm32f10x_tim.c ****   
 555:./FWLIB/src/stm32f10x_tim.c ****   /* Set the Output State */
 556:./FWLIB/src/stm32f10x_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OutputState << 12);
 557:./FWLIB/src/stm32f10x_tim.c ****     
 558:./FWLIB/src/stm32f10x_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8))
 559:./FWLIB/src/stm32f10x_tim.c ****   {
 560:./FWLIB/src/stm32f10x_tim.c ****     assert_param(IS_TIM_OCIDLE_STATE(TIM_OCInitStruct->TIM_OCIdleState));
 561:./FWLIB/src/stm32f10x_tim.c ****     /* Reset the Output Compare IDLE State */
 562:./FWLIB/src/stm32f10x_tim.c ****     tmpcr2 &= (uint16_t)(~((uint16_t)TIM_CR2_OIS4));
 563:./FWLIB/src/stm32f10x_tim.c ****     /* Set the Output Idle state */
 564:./FWLIB/src/stm32f10x_tim.c ****     tmpcr2 |= (uint16_t)(TIM_OCInitStruct->TIM_OCIdleState << 6);
 565:./FWLIB/src/stm32f10x_tim.c ****   }
 566:./FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CR2 */
 567:./FWLIB/src/stm32f10x_tim.c ****   TIMx->CR2 = tmpcr2;
 568:./FWLIB/src/stm32f10x_tim.c ****   
 569:./FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR2 */  
 570:./FWLIB/src/stm32f10x_tim.c ****   TIMx->CCMR2 = tmpccmrx;
 571:./FWLIB/src/stm32f10x_tim.c **** 
 572:./FWLIB/src/stm32f10x_tim.c ****   /* Set the Capture Compare Register value */
 573:./FWLIB/src/stm32f10x_tim.c ****   TIMx->CCR4 = TIM_OCInitStruct->TIM_Pulse;
 574:./FWLIB/src/stm32f10x_tim.c ****   
 575:./FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCER */
 576:./FWLIB/src/stm32f10x_tim.c ****   TIMx->CCER = tmpccer;
 577:./FWLIB/src/stm32f10x_tim.c **** }
 578:./FWLIB/src/stm32f10x_tim.c **** 
 579:./FWLIB/src/stm32f10x_tim.c **** /**
 580:./FWLIB/src/stm32f10x_tim.c ****   * @brief  Initializes the TIM peripheral according to the specified
 581:./FWLIB/src/stm32f10x_tim.c ****   *         parameters in the TIM_ICInitStruct.
 582:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1 to 17 except 6 and 7 to select the TIM peripheral.
 583:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_ICInitStruct: pointer to a TIM_ICInitTypeDef structure
 584:./FWLIB/src/stm32f10x_tim.c ****   *         that contains the configuration information for the specified TIM peripheral.
 585:./FWLIB/src/stm32f10x_tim.c ****   * @retval None
 586:./FWLIB/src/stm32f10x_tim.c ****   */
 587:./FWLIB/src/stm32f10x_tim.c **** void TIM_ICInit(TIM_TypeDef* TIMx, TIM_ICInitTypeDef* TIM_ICInitStruct)
 588:./FWLIB/src/stm32f10x_tim.c **** {
 589:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 590:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_CHANNEL(TIM_ICInitStruct->TIM_Channel));  
 591:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_IC_SELECTION(TIM_ICInitStruct->TIM_ICSelection));
 592:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_IC_PRESCALER(TIM_ICInitStruct->TIM_ICPrescaler));
 593:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_IC_FILTER(TIM_ICInitStruct->TIM_ICFilter));
 594:./FWLIB/src/stm32f10x_tim.c ****   
 595:./FWLIB/src/stm32f10x_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8) || (TIMx == TIM2) || (TIMx == TIM3) ||
 596:./FWLIB/src/stm32f10x_tim.c ****      (TIMx == TIM4) ||(TIMx == TIM5))
 597:./FWLIB/src/stm32f10x_tim.c ****   {
 598:./FWLIB/src/stm32f10x_tim.c ****     assert_param(IS_TIM_IC_POLARITY(TIM_ICInitStruct->TIM_ICPolarity));
 599:./FWLIB/src/stm32f10x_tim.c ****   }
 600:./FWLIB/src/stm32f10x_tim.c ****   else
 601:./FWLIB/src/stm32f10x_tim.c ****   {
 602:./FWLIB/src/stm32f10x_tim.c ****     assert_param(IS_TIM_IC_POLARITY_LITE(TIM_ICInitStruct->TIM_ICPolarity));
ARM GAS  /tmp/ccvVNijM.s 			page 12


 603:./FWLIB/src/stm32f10x_tim.c ****   }
 604:./FWLIB/src/stm32f10x_tim.c ****   if (TIM_ICInitStruct->TIM_Channel == TIM_Channel_1)
 605:./FWLIB/src/stm32f10x_tim.c ****   {
 606:./FWLIB/src/stm32f10x_tim.c ****     assert_param(IS_TIM_LIST8_PERIPH(TIMx));
 607:./FWLIB/src/stm32f10x_tim.c ****     /* TI1 Configuration */
 608:./FWLIB/src/stm32f10x_tim.c ****     TI1_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
 609:./FWLIB/src/stm32f10x_tim.c ****                TIM_ICInitStruct->TIM_ICSelection,
 610:./FWLIB/src/stm32f10x_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
 611:./FWLIB/src/stm32f10x_tim.c ****     /* Set the Input Capture Prescaler value */
 612:./FWLIB/src/stm32f10x_tim.c ****     TIM_SetIC1Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 613:./FWLIB/src/stm32f10x_tim.c ****   }
 614:./FWLIB/src/stm32f10x_tim.c ****   else if (TIM_ICInitStruct->TIM_Channel == TIM_Channel_2)
 615:./FWLIB/src/stm32f10x_tim.c ****   {
 616:./FWLIB/src/stm32f10x_tim.c ****     assert_param(IS_TIM_LIST6_PERIPH(TIMx));
 617:./FWLIB/src/stm32f10x_tim.c ****     /* TI2 Configuration */
 618:./FWLIB/src/stm32f10x_tim.c ****     TI2_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
 619:./FWLIB/src/stm32f10x_tim.c ****                TIM_ICInitStruct->TIM_ICSelection,
 620:./FWLIB/src/stm32f10x_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
 621:./FWLIB/src/stm32f10x_tim.c ****     /* Set the Input Capture Prescaler value */
 622:./FWLIB/src/stm32f10x_tim.c ****     TIM_SetIC2Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 623:./FWLIB/src/stm32f10x_tim.c ****   }
 624:./FWLIB/src/stm32f10x_tim.c ****   else if (TIM_ICInitStruct->TIM_Channel == TIM_Channel_3)
 625:./FWLIB/src/stm32f10x_tim.c ****   {
 626:./FWLIB/src/stm32f10x_tim.c ****     assert_param(IS_TIM_LIST3_PERIPH(TIMx));
 627:./FWLIB/src/stm32f10x_tim.c ****     /* TI3 Configuration */
 628:./FWLIB/src/stm32f10x_tim.c ****     TI3_Config(TIMx,  TIM_ICInitStruct->TIM_ICPolarity,
 629:./FWLIB/src/stm32f10x_tim.c ****                TIM_ICInitStruct->TIM_ICSelection,
 630:./FWLIB/src/stm32f10x_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
 631:./FWLIB/src/stm32f10x_tim.c ****     /* Set the Input Capture Prescaler value */
 632:./FWLIB/src/stm32f10x_tim.c ****     TIM_SetIC3Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 633:./FWLIB/src/stm32f10x_tim.c ****   }
 634:./FWLIB/src/stm32f10x_tim.c ****   else
 635:./FWLIB/src/stm32f10x_tim.c ****   {
 636:./FWLIB/src/stm32f10x_tim.c ****     assert_param(IS_TIM_LIST3_PERIPH(TIMx));
 637:./FWLIB/src/stm32f10x_tim.c ****     /* TI4 Configuration */
 638:./FWLIB/src/stm32f10x_tim.c ****     TI4_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
 639:./FWLIB/src/stm32f10x_tim.c ****                TIM_ICInitStruct->TIM_ICSelection,
 640:./FWLIB/src/stm32f10x_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
 641:./FWLIB/src/stm32f10x_tim.c ****     /* Set the Input Capture Prescaler value */
 642:./FWLIB/src/stm32f10x_tim.c ****     TIM_SetIC4Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 643:./FWLIB/src/stm32f10x_tim.c ****   }
 644:./FWLIB/src/stm32f10x_tim.c **** }
 645:./FWLIB/src/stm32f10x_tim.c **** 
 646:./FWLIB/src/stm32f10x_tim.c **** /**
 647:./FWLIB/src/stm32f10x_tim.c ****   * @brief  Configures the TIM peripheral according to the specified
 648:./FWLIB/src/stm32f10x_tim.c ****   *         parameters in the TIM_ICInitStruct to measure an external PWM signal.
 649:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5, 8, 9, 12 or 15 to select the TIM peripheral.
 650:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_ICInitStruct: pointer to a TIM_ICInitTypeDef structure
 651:./FWLIB/src/stm32f10x_tim.c ****   *         that contains the configuration information for the specified TIM peripheral.
 652:./FWLIB/src/stm32f10x_tim.c ****   * @retval None
 653:./FWLIB/src/stm32f10x_tim.c ****   */
 654:./FWLIB/src/stm32f10x_tim.c **** void TIM_PWMIConfig(TIM_TypeDef* TIMx, TIM_ICInitTypeDef* TIM_ICInitStruct)
 655:./FWLIB/src/stm32f10x_tim.c **** {
 656:./FWLIB/src/stm32f10x_tim.c ****   uint16_t icoppositepolarity = TIM_ICPolarity_Rising;
 657:./FWLIB/src/stm32f10x_tim.c ****   uint16_t icoppositeselection = TIM_ICSelection_DirectTI;
 658:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 659:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST6_PERIPH(TIMx));
ARM GAS  /tmp/ccvVNijM.s 			page 13


 660:./FWLIB/src/stm32f10x_tim.c ****   /* Select the Opposite Input Polarity */
 661:./FWLIB/src/stm32f10x_tim.c ****   if (TIM_ICInitStruct->TIM_ICPolarity == TIM_ICPolarity_Rising)
 662:./FWLIB/src/stm32f10x_tim.c ****   {
 663:./FWLIB/src/stm32f10x_tim.c ****     icoppositepolarity = TIM_ICPolarity_Falling;
 664:./FWLIB/src/stm32f10x_tim.c ****   }
 665:./FWLIB/src/stm32f10x_tim.c ****   else
 666:./FWLIB/src/stm32f10x_tim.c ****   {
 667:./FWLIB/src/stm32f10x_tim.c ****     icoppositepolarity = TIM_ICPolarity_Rising;
 668:./FWLIB/src/stm32f10x_tim.c ****   }
 669:./FWLIB/src/stm32f10x_tim.c ****   /* Select the Opposite Input */
 670:./FWLIB/src/stm32f10x_tim.c ****   if (TIM_ICInitStruct->TIM_ICSelection == TIM_ICSelection_DirectTI)
 671:./FWLIB/src/stm32f10x_tim.c ****   {
 672:./FWLIB/src/stm32f10x_tim.c ****     icoppositeselection = TIM_ICSelection_IndirectTI;
 673:./FWLIB/src/stm32f10x_tim.c ****   }
 674:./FWLIB/src/stm32f10x_tim.c ****   else
 675:./FWLIB/src/stm32f10x_tim.c ****   {
 676:./FWLIB/src/stm32f10x_tim.c ****     icoppositeselection = TIM_ICSelection_DirectTI;
 677:./FWLIB/src/stm32f10x_tim.c ****   }
 678:./FWLIB/src/stm32f10x_tim.c ****   if (TIM_ICInitStruct->TIM_Channel == TIM_Channel_1)
 679:./FWLIB/src/stm32f10x_tim.c ****   {
 680:./FWLIB/src/stm32f10x_tim.c ****     /* TI1 Configuration */
 681:./FWLIB/src/stm32f10x_tim.c ****     TI1_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity, TIM_ICInitStruct->TIM_ICSelection,
 682:./FWLIB/src/stm32f10x_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
 683:./FWLIB/src/stm32f10x_tim.c ****     /* Set the Input Capture Prescaler value */
 684:./FWLIB/src/stm32f10x_tim.c ****     TIM_SetIC1Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 685:./FWLIB/src/stm32f10x_tim.c ****     /* TI2 Configuration */
 686:./FWLIB/src/stm32f10x_tim.c ****     TI2_Config(TIMx, icoppositepolarity, icoppositeselection, TIM_ICInitStruct->TIM_ICFilter);
 687:./FWLIB/src/stm32f10x_tim.c ****     /* Set the Input Capture Prescaler value */
 688:./FWLIB/src/stm32f10x_tim.c ****     TIM_SetIC2Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 689:./FWLIB/src/stm32f10x_tim.c ****   }
 690:./FWLIB/src/stm32f10x_tim.c ****   else
 691:./FWLIB/src/stm32f10x_tim.c ****   { 
 692:./FWLIB/src/stm32f10x_tim.c ****     /* TI2 Configuration */
 693:./FWLIB/src/stm32f10x_tim.c ****     TI2_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity, TIM_ICInitStruct->TIM_ICSelection,
 694:./FWLIB/src/stm32f10x_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
 695:./FWLIB/src/stm32f10x_tim.c ****     /* Set the Input Capture Prescaler value */
 696:./FWLIB/src/stm32f10x_tim.c ****     TIM_SetIC2Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 697:./FWLIB/src/stm32f10x_tim.c ****     /* TI1 Configuration */
 698:./FWLIB/src/stm32f10x_tim.c ****     TI1_Config(TIMx, icoppositepolarity, icoppositeselection, TIM_ICInitStruct->TIM_ICFilter);
 699:./FWLIB/src/stm32f10x_tim.c ****     /* Set the Input Capture Prescaler value */
 700:./FWLIB/src/stm32f10x_tim.c ****     TIM_SetIC1Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 701:./FWLIB/src/stm32f10x_tim.c ****   }
 702:./FWLIB/src/stm32f10x_tim.c **** }
 703:./FWLIB/src/stm32f10x_tim.c **** 
 704:./FWLIB/src/stm32f10x_tim.c **** /**
 705:./FWLIB/src/stm32f10x_tim.c ****   * @brief  Configures the: Break feature, dead time, Lock level, the OSSI,
 706:./FWLIB/src/stm32f10x_tim.c ****   *         the OSSR State and the AOE(automatic output enable).
 707:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1 or 8 to select the TIM 
 708:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_BDTRInitStruct: pointer to a TIM_BDTRInitTypeDef structure that
 709:./FWLIB/src/stm32f10x_tim.c ****   *         contains the BDTR Register configuration  information for the TIM peripheral.
 710:./FWLIB/src/stm32f10x_tim.c ****   * @retval None
 711:./FWLIB/src/stm32f10x_tim.c ****   */
 712:./FWLIB/src/stm32f10x_tim.c **** void TIM_BDTRConfig(TIM_TypeDef* TIMx, TIM_BDTRInitTypeDef *TIM_BDTRInitStruct)
 713:./FWLIB/src/stm32f10x_tim.c **** {
 714:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 715:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
 716:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OSSR_STATE(TIM_BDTRInitStruct->TIM_OSSRState));
ARM GAS  /tmp/ccvVNijM.s 			page 14


 717:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OSSI_STATE(TIM_BDTRInitStruct->TIM_OSSIState));
 718:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LOCK_LEVEL(TIM_BDTRInitStruct->TIM_LOCKLevel));
 719:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_BREAK_STATE(TIM_BDTRInitStruct->TIM_Break));
 720:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_BREAK_POLARITY(TIM_BDTRInitStruct->TIM_BreakPolarity));
 721:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_AUTOMATIC_OUTPUT_STATE(TIM_BDTRInitStruct->TIM_AutomaticOutput));
 722:./FWLIB/src/stm32f10x_tim.c ****   /* Set the Lock level, the Break enable Bit and the Ploarity, the OSSR State,
 723:./FWLIB/src/stm32f10x_tim.c ****      the OSSI State, the dead time value and the Automatic Output Enable Bit */
 724:./FWLIB/src/stm32f10x_tim.c ****   TIMx->BDTR = (uint32_t)TIM_BDTRInitStruct->TIM_OSSRState | TIM_BDTRInitStruct->TIM_OSSIState |
 725:./FWLIB/src/stm32f10x_tim.c ****              TIM_BDTRInitStruct->TIM_LOCKLevel | TIM_BDTRInitStruct->TIM_DeadTime |
 726:./FWLIB/src/stm32f10x_tim.c ****              TIM_BDTRInitStruct->TIM_Break | TIM_BDTRInitStruct->TIM_BreakPolarity |
 727:./FWLIB/src/stm32f10x_tim.c ****              TIM_BDTRInitStruct->TIM_AutomaticOutput;
 728:./FWLIB/src/stm32f10x_tim.c **** }
 729:./FWLIB/src/stm32f10x_tim.c **** 
 730:./FWLIB/src/stm32f10x_tim.c **** /**
 731:./FWLIB/src/stm32f10x_tim.c ****   * @brief  Fills each TIM_TimeBaseInitStruct member with its default value.
 732:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_TimeBaseInitStruct : pointer to a TIM_TimeBaseInitTypeDef
 733:./FWLIB/src/stm32f10x_tim.c ****   *         structure which will be initialized.
 734:./FWLIB/src/stm32f10x_tim.c ****   * @retval None
 735:./FWLIB/src/stm32f10x_tim.c ****   */
 736:./FWLIB/src/stm32f10x_tim.c **** void TIM_TimeBaseStructInit(TIM_TimeBaseInitTypeDef* TIM_TimeBaseInitStruct)
 737:./FWLIB/src/stm32f10x_tim.c **** {
 738:./FWLIB/src/stm32f10x_tim.c ****   /* Set the default configuration */
 739:./FWLIB/src/stm32f10x_tim.c ****   TIM_TimeBaseInitStruct->TIM_Period = 0xFFFF;
 740:./FWLIB/src/stm32f10x_tim.c ****   TIM_TimeBaseInitStruct->TIM_Prescaler = 0x0000;
 741:./FWLIB/src/stm32f10x_tim.c ****   TIM_TimeBaseInitStruct->TIM_ClockDivision = TIM_CKD_DIV1;
 742:./FWLIB/src/stm32f10x_tim.c ****   TIM_TimeBaseInitStruct->TIM_CounterMode = TIM_CounterMode_Up;
 743:./FWLIB/src/stm32f10x_tim.c ****   TIM_TimeBaseInitStruct->TIM_RepetitionCounter = 0x0000;
 744:./FWLIB/src/stm32f10x_tim.c **** }
 745:./FWLIB/src/stm32f10x_tim.c **** 
 746:./FWLIB/src/stm32f10x_tim.c **** /**
 747:./FWLIB/src/stm32f10x_tim.c ****   * @brief  Fills each TIM_OCInitStruct member with its default value.
 748:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_OCInitStruct : pointer to a TIM_OCInitTypeDef structure which will
 749:./FWLIB/src/stm32f10x_tim.c ****   *         be initialized.
 750:./FWLIB/src/stm32f10x_tim.c ****   * @retval None
 751:./FWLIB/src/stm32f10x_tim.c ****   */
 752:./FWLIB/src/stm32f10x_tim.c **** void TIM_OCStructInit(TIM_OCInitTypeDef* TIM_OCInitStruct)
 753:./FWLIB/src/stm32f10x_tim.c **** {
 754:./FWLIB/src/stm32f10x_tim.c ****   /* Set the default configuration */
 755:./FWLIB/src/stm32f10x_tim.c ****   TIM_OCInitStruct->TIM_OCMode = TIM_OCMode_Timing;
 756:./FWLIB/src/stm32f10x_tim.c ****   TIM_OCInitStruct->TIM_OutputState = TIM_OutputState_Disable;
 757:./FWLIB/src/stm32f10x_tim.c ****   TIM_OCInitStruct->TIM_OutputNState = TIM_OutputNState_Disable;
 758:./FWLIB/src/stm32f10x_tim.c ****   TIM_OCInitStruct->TIM_Pulse = 0x0000;
 759:./FWLIB/src/stm32f10x_tim.c ****   TIM_OCInitStruct->TIM_OCPolarity = TIM_OCPolarity_High;
 760:./FWLIB/src/stm32f10x_tim.c ****   TIM_OCInitStruct->TIM_OCNPolarity = TIM_OCPolarity_High;
 761:./FWLIB/src/stm32f10x_tim.c ****   TIM_OCInitStruct->TIM_OCIdleState = TIM_OCIdleState_Reset;
 762:./FWLIB/src/stm32f10x_tim.c ****   TIM_OCInitStruct->TIM_OCNIdleState = TIM_OCNIdleState_Reset;
 763:./FWLIB/src/stm32f10x_tim.c **** }
 764:./FWLIB/src/stm32f10x_tim.c **** 
 765:./FWLIB/src/stm32f10x_tim.c **** /**
 766:./FWLIB/src/stm32f10x_tim.c ****   * @brief  Fills each TIM_ICInitStruct member with its default value.
 767:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_ICInitStruct: pointer to a TIM_ICInitTypeDef structure which will
 768:./FWLIB/src/stm32f10x_tim.c ****   *         be initialized.
 769:./FWLIB/src/stm32f10x_tim.c ****   * @retval None
 770:./FWLIB/src/stm32f10x_tim.c ****   */
 771:./FWLIB/src/stm32f10x_tim.c **** void TIM_ICStructInit(TIM_ICInitTypeDef* TIM_ICInitStruct)
 772:./FWLIB/src/stm32f10x_tim.c **** {
 773:./FWLIB/src/stm32f10x_tim.c ****   /* Set the default configuration */
ARM GAS  /tmp/ccvVNijM.s 			page 15


 774:./FWLIB/src/stm32f10x_tim.c ****   TIM_ICInitStruct->TIM_Channel = TIM_Channel_1;
 775:./FWLIB/src/stm32f10x_tim.c ****   TIM_ICInitStruct->TIM_ICPolarity = TIM_ICPolarity_Rising;
 776:./FWLIB/src/stm32f10x_tim.c ****   TIM_ICInitStruct->TIM_ICSelection = TIM_ICSelection_DirectTI;
 777:./FWLIB/src/stm32f10x_tim.c ****   TIM_ICInitStruct->TIM_ICPrescaler = TIM_ICPSC_DIV1;
 778:./FWLIB/src/stm32f10x_tim.c ****   TIM_ICInitStruct->TIM_ICFilter = 0x00;
 779:./FWLIB/src/stm32f10x_tim.c **** }
 780:./FWLIB/src/stm32f10x_tim.c **** 
 781:./FWLIB/src/stm32f10x_tim.c **** /**
 782:./FWLIB/src/stm32f10x_tim.c ****   * @brief  Fills each TIM_BDTRInitStruct member with its default value.
 783:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_BDTRInitStruct: pointer to a TIM_BDTRInitTypeDef structure which
 784:./FWLIB/src/stm32f10x_tim.c ****   *         will be initialized.
 785:./FWLIB/src/stm32f10x_tim.c ****   * @retval None
 786:./FWLIB/src/stm32f10x_tim.c ****   */
 787:./FWLIB/src/stm32f10x_tim.c **** void TIM_BDTRStructInit(TIM_BDTRInitTypeDef* TIM_BDTRInitStruct)
 788:./FWLIB/src/stm32f10x_tim.c **** {
 789:./FWLIB/src/stm32f10x_tim.c ****   /* Set the default configuration */
 790:./FWLIB/src/stm32f10x_tim.c ****   TIM_BDTRInitStruct->TIM_OSSRState = TIM_OSSRState_Disable;
 791:./FWLIB/src/stm32f10x_tim.c ****   TIM_BDTRInitStruct->TIM_OSSIState = TIM_OSSIState_Disable;
 792:./FWLIB/src/stm32f10x_tim.c ****   TIM_BDTRInitStruct->TIM_LOCKLevel = TIM_LOCKLevel_OFF;
 793:./FWLIB/src/stm32f10x_tim.c ****   TIM_BDTRInitStruct->TIM_DeadTime = 0x00;
 794:./FWLIB/src/stm32f10x_tim.c ****   TIM_BDTRInitStruct->TIM_Break = TIM_Break_Disable;
 795:./FWLIB/src/stm32f10x_tim.c ****   TIM_BDTRInitStruct->TIM_BreakPolarity = TIM_BreakPolarity_Low;
 796:./FWLIB/src/stm32f10x_tim.c ****   TIM_BDTRInitStruct->TIM_AutomaticOutput = TIM_AutomaticOutput_Disable;
 797:./FWLIB/src/stm32f10x_tim.c **** }
 798:./FWLIB/src/stm32f10x_tim.c **** 
 799:./FWLIB/src/stm32f10x_tim.c **** /**
 800:./FWLIB/src/stm32f10x_tim.c ****   * @brief  Enables or disables the specified TIM peripheral.
 801:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 to select the TIMx peripheral.
 802:./FWLIB/src/stm32f10x_tim.c ****   * @param  NewState: new state of the TIMx peripheral.
 803:./FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be: ENABLE or DISABLE.
 804:./FWLIB/src/stm32f10x_tim.c ****   * @retval None
 805:./FWLIB/src/stm32f10x_tim.c ****   */
 806:./FWLIB/src/stm32f10x_tim.c **** void TIM_Cmd(TIM_TypeDef* TIMx, FunctionalState NewState)
 807:./FWLIB/src/stm32f10x_tim.c **** {
 808:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 809:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 810:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 811:./FWLIB/src/stm32f10x_tim.c ****   
 812:./FWLIB/src/stm32f10x_tim.c ****   if (NewState != DISABLE)
 813:./FWLIB/src/stm32f10x_tim.c ****   {
 814:./FWLIB/src/stm32f10x_tim.c ****     /* Enable the TIM Counter */
 815:./FWLIB/src/stm32f10x_tim.c ****     TIMx->CR1 |= TIM_CR1_CEN;
 816:./FWLIB/src/stm32f10x_tim.c ****   }
 817:./FWLIB/src/stm32f10x_tim.c ****   else
 818:./FWLIB/src/stm32f10x_tim.c ****   {
 819:./FWLIB/src/stm32f10x_tim.c ****     /* Disable the TIM Counter */
 820:./FWLIB/src/stm32f10x_tim.c ****     TIMx->CR1 &= (uint16_t)(~((uint16_t)TIM_CR1_CEN));
 821:./FWLIB/src/stm32f10x_tim.c ****   }
 822:./FWLIB/src/stm32f10x_tim.c **** }
 823:./FWLIB/src/stm32f10x_tim.c **** 
 824:./FWLIB/src/stm32f10x_tim.c **** /**
 825:./FWLIB/src/stm32f10x_tim.c ****   * @brief  Enables or disables the TIM peripheral Main Outputs.
 826:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1, 8, 15, 16 or 17 to select the TIMx peripheral.
 827:./FWLIB/src/stm32f10x_tim.c ****   * @param  NewState: new state of the TIM peripheral Main Outputs.
 828:./FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be: ENABLE or DISABLE.
 829:./FWLIB/src/stm32f10x_tim.c ****   * @retval None
 830:./FWLIB/src/stm32f10x_tim.c ****   */
ARM GAS  /tmp/ccvVNijM.s 			page 16


 831:./FWLIB/src/stm32f10x_tim.c **** void TIM_CtrlPWMOutputs(TIM_TypeDef* TIMx, FunctionalState NewState)
 832:./FWLIB/src/stm32f10x_tim.c **** {
 833:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 834:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
 835:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 836:./FWLIB/src/stm32f10x_tim.c ****   if (NewState != DISABLE)
 837:./FWLIB/src/stm32f10x_tim.c ****   {
 838:./FWLIB/src/stm32f10x_tim.c ****     /* Enable the TIM Main Output */
 839:./FWLIB/src/stm32f10x_tim.c ****     TIMx->BDTR |= TIM_BDTR_MOE;
 840:./FWLIB/src/stm32f10x_tim.c ****   }
 841:./FWLIB/src/stm32f10x_tim.c ****   else
 842:./FWLIB/src/stm32f10x_tim.c ****   {
 843:./FWLIB/src/stm32f10x_tim.c ****     /* Disable the TIM Main Output */
 844:./FWLIB/src/stm32f10x_tim.c ****     TIMx->BDTR &= (uint16_t)(~((uint16_t)TIM_BDTR_MOE));
 845:./FWLIB/src/stm32f10x_tim.c ****   }  
 846:./FWLIB/src/stm32f10x_tim.c **** }
 847:./FWLIB/src/stm32f10x_tim.c **** 
 848:./FWLIB/src/stm32f10x_tim.c **** /**
 849:./FWLIB/src/stm32f10x_tim.c ****   * @brief  Enables or disables the specified TIM interrupts.
 850:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 to select the TIMx peripheral.
 851:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_IT: specifies the TIM interrupts sources to be enabled or disabled.
 852:./FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be any combination of the following values:
 853:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_IT_Update: TIM update Interrupt source
 854:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_IT_CC1: TIM Capture Compare 1 Interrupt source
 855:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_IT_CC2: TIM Capture Compare 2 Interrupt source
 856:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_IT_CC3: TIM Capture Compare 3 Interrupt source
 857:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_IT_CC4: TIM Capture Compare 4 Interrupt source
 858:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_IT_COM: TIM Commutation Interrupt source
 859:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_IT_Trigger: TIM Trigger Interrupt source
 860:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_IT_Break: TIM Break Interrupt source
 861:./FWLIB/src/stm32f10x_tim.c ****   * @note 
 862:./FWLIB/src/stm32f10x_tim.c ****   *   - TIM6 and TIM7 can only generate an update interrupt.
 863:./FWLIB/src/stm32f10x_tim.c ****   *   - TIM9, TIM12 and TIM15 can have only TIM_IT_Update, TIM_IT_CC1,
 864:./FWLIB/src/stm32f10x_tim.c ****   *      TIM_IT_CC2 or TIM_IT_Trigger. 
 865:./FWLIB/src/stm32f10x_tim.c ****   *   - TIM10, TIM11, TIM13, TIM14, TIM16 and TIM17 can have TIM_IT_Update or TIM_IT_CC1.   
 866:./FWLIB/src/stm32f10x_tim.c ****   *   - TIM_IT_Break is used only with TIM1, TIM8 and TIM15. 
 867:./FWLIB/src/stm32f10x_tim.c ****   *   - TIM_IT_COM is used only with TIM1, TIM8, TIM15, TIM16 and TIM17.    
 868:./FWLIB/src/stm32f10x_tim.c ****   * @param  NewState: new state of the TIM interrupts.
 869:./FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be: ENABLE or DISABLE.
 870:./FWLIB/src/stm32f10x_tim.c ****   * @retval None
 871:./FWLIB/src/stm32f10x_tim.c ****   */
 872:./FWLIB/src/stm32f10x_tim.c **** void TIM_ITConfig(TIM_TypeDef* TIMx, uint16_t TIM_IT, FunctionalState NewState)
 873:./FWLIB/src/stm32f10x_tim.c **** {  
 874:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 875:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 876:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_IT(TIM_IT));
 877:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 878:./FWLIB/src/stm32f10x_tim.c ****   
 879:./FWLIB/src/stm32f10x_tim.c ****   if (NewState != DISABLE)
 880:./FWLIB/src/stm32f10x_tim.c ****   {
 881:./FWLIB/src/stm32f10x_tim.c ****     /* Enable the Interrupt sources */
 882:./FWLIB/src/stm32f10x_tim.c ****     TIMx->DIER |= TIM_IT;
 883:./FWLIB/src/stm32f10x_tim.c ****   }
 884:./FWLIB/src/stm32f10x_tim.c ****   else
 885:./FWLIB/src/stm32f10x_tim.c ****   {
 886:./FWLIB/src/stm32f10x_tim.c ****     /* Disable the Interrupt sources */
 887:./FWLIB/src/stm32f10x_tim.c ****     TIMx->DIER &= (uint16_t)~TIM_IT;
ARM GAS  /tmp/ccvVNijM.s 			page 17


 888:./FWLIB/src/stm32f10x_tim.c ****   }
 889:./FWLIB/src/stm32f10x_tim.c **** }
 890:./FWLIB/src/stm32f10x_tim.c **** 
 891:./FWLIB/src/stm32f10x_tim.c **** /**
 892:./FWLIB/src/stm32f10x_tim.c ****   * @brief  Configures the TIMx event to be generate by software.
 893:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 to select the TIM peripheral.
 894:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_EventSource: specifies the event source.
 895:./FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be one or more of the following values:	   
 896:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_EventSource_Update: Timer update Event source
 897:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_EventSource_CC1: Timer Capture Compare 1 Event source
 898:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_EventSource_CC2: Timer Capture Compare 2 Event source
 899:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_EventSource_CC3: Timer Capture Compare 3 Event source
 900:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_EventSource_CC4: Timer Capture Compare 4 Event source
 901:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_EventSource_COM: Timer COM event source  
 902:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_EventSource_Trigger: Timer Trigger Event source
 903:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_EventSource_Break: Timer Break event source
 904:./FWLIB/src/stm32f10x_tim.c ****   * @note 
 905:./FWLIB/src/stm32f10x_tim.c ****   *   - TIM6 and TIM7 can only generate an update event. 
 906:./FWLIB/src/stm32f10x_tim.c ****   *   - TIM_EventSource_COM and TIM_EventSource_Break are used only with TIM1 and TIM8.      
 907:./FWLIB/src/stm32f10x_tim.c ****   * @retval None
 908:./FWLIB/src/stm32f10x_tim.c ****   */
 909:./FWLIB/src/stm32f10x_tim.c **** void TIM_GenerateEvent(TIM_TypeDef* TIMx, uint16_t TIM_EventSource)
 910:./FWLIB/src/stm32f10x_tim.c **** { 
 911:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 912:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 913:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_EVENT_SOURCE(TIM_EventSource));
 914:./FWLIB/src/stm32f10x_tim.c ****   
 915:./FWLIB/src/stm32f10x_tim.c ****   /* Set the event sources */
 916:./FWLIB/src/stm32f10x_tim.c ****   TIMx->EGR = TIM_EventSource;
 917:./FWLIB/src/stm32f10x_tim.c **** }
 918:./FWLIB/src/stm32f10x_tim.c **** 
 919:./FWLIB/src/stm32f10x_tim.c **** /**
 920:./FWLIB/src/stm32f10x_tim.c ****   * @brief  Configures the TIMx's DMA interface.
 921:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5, 8, 15, 16 or 17 to select 
 922:./FWLIB/src/stm32f10x_tim.c ****   *   the TIM peripheral.
 923:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_DMABase: DMA Base address.
 924:./FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
 925:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_DMABase_CR, TIM_DMABase_CR2, TIM_DMABase_SMCR,
 926:./FWLIB/src/stm32f10x_tim.c ****   *          TIM_DMABase_DIER, TIM1_DMABase_SR, TIM_DMABase_EGR,
 927:./FWLIB/src/stm32f10x_tim.c ****   *          TIM_DMABase_CCMR1, TIM_DMABase_CCMR2, TIM_DMABase_CCER,
 928:./FWLIB/src/stm32f10x_tim.c ****   *          TIM_DMABase_CNT, TIM_DMABase_PSC, TIM_DMABase_ARR,
 929:./FWLIB/src/stm32f10x_tim.c ****   *          TIM_DMABase_RCR, TIM_DMABase_CCR1, TIM_DMABase_CCR2,
 930:./FWLIB/src/stm32f10x_tim.c ****   *          TIM_DMABase_CCR3, TIM_DMABase_CCR4, TIM_DMABase_BDTR,
 931:./FWLIB/src/stm32f10x_tim.c ****   *          TIM_DMABase_DCR.
 932:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_DMABurstLength: DMA Burst length.
 933:./FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be one value between:
 934:./FWLIB/src/stm32f10x_tim.c ****   *   TIM_DMABurstLength_1Transfer and TIM_DMABurstLength_18Transfers.
 935:./FWLIB/src/stm32f10x_tim.c ****   * @retval None
 936:./FWLIB/src/stm32f10x_tim.c ****   */
 937:./FWLIB/src/stm32f10x_tim.c **** void TIM_DMAConfig(TIM_TypeDef* TIMx, uint16_t TIM_DMABase, uint16_t TIM_DMABurstLength)
 938:./FWLIB/src/stm32f10x_tim.c **** {
 939:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 940:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
 941:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_DMA_BASE(TIM_DMABase));
 942:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_DMA_LENGTH(TIM_DMABurstLength));
 943:./FWLIB/src/stm32f10x_tim.c ****   /* Set the DMA Base and the DMA Burst Length */
 944:./FWLIB/src/stm32f10x_tim.c ****   TIMx->DCR = TIM_DMABase | TIM_DMABurstLength;
ARM GAS  /tmp/ccvVNijM.s 			page 18


 945:./FWLIB/src/stm32f10x_tim.c **** }
 946:./FWLIB/src/stm32f10x_tim.c **** 
 947:./FWLIB/src/stm32f10x_tim.c **** /**
 948:./FWLIB/src/stm32f10x_tim.c ****   * @brief  Enables or disables the TIMx's DMA Requests.
 949:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5, 6, 7, 8, 15, 16 or 17 
 950:./FWLIB/src/stm32f10x_tim.c ****   *   to select the TIM peripheral. 
 951:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_DMASource: specifies the DMA Request sources.
 952:./FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be any combination of the following values:
 953:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_DMA_Update: TIM update Interrupt source
 954:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_DMA_CC1: TIM Capture Compare 1 DMA source
 955:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_DMA_CC2: TIM Capture Compare 2 DMA source
 956:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_DMA_CC3: TIM Capture Compare 3 DMA source
 957:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_DMA_CC4: TIM Capture Compare 4 DMA source
 958:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_DMA_COM: TIM Commutation DMA source
 959:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_DMA_Trigger: TIM Trigger DMA source
 960:./FWLIB/src/stm32f10x_tim.c ****   * @param  NewState: new state of the DMA Request sources.
 961:./FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be: ENABLE or DISABLE.
 962:./FWLIB/src/stm32f10x_tim.c ****   * @retval None
 963:./FWLIB/src/stm32f10x_tim.c ****   */
 964:./FWLIB/src/stm32f10x_tim.c **** void TIM_DMACmd(TIM_TypeDef* TIMx, uint16_t TIM_DMASource, FunctionalState NewState)
 965:./FWLIB/src/stm32f10x_tim.c **** { 
 966:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 967:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST9_PERIPH(TIMx));
 968:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_DMA_SOURCE(TIM_DMASource));
 969:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 970:./FWLIB/src/stm32f10x_tim.c ****   
 971:./FWLIB/src/stm32f10x_tim.c ****   if (NewState != DISABLE)
 972:./FWLIB/src/stm32f10x_tim.c ****   {
 973:./FWLIB/src/stm32f10x_tim.c ****     /* Enable the DMA sources */
 974:./FWLIB/src/stm32f10x_tim.c ****     TIMx->DIER |= TIM_DMASource; 
 975:./FWLIB/src/stm32f10x_tim.c ****   }
 976:./FWLIB/src/stm32f10x_tim.c ****   else
 977:./FWLIB/src/stm32f10x_tim.c ****   {
 978:./FWLIB/src/stm32f10x_tim.c ****     /* Disable the DMA sources */
 979:./FWLIB/src/stm32f10x_tim.c ****     TIMx->DIER &= (uint16_t)~TIM_DMASource;
 980:./FWLIB/src/stm32f10x_tim.c ****   }
 981:./FWLIB/src/stm32f10x_tim.c **** }
 982:./FWLIB/src/stm32f10x_tim.c **** 
 983:./FWLIB/src/stm32f10x_tim.c **** /**
 984:./FWLIB/src/stm32f10x_tim.c ****   * @brief  Configures the TIMx internal Clock
 985:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5, 8, 9, 12 or 15
 986:./FWLIB/src/stm32f10x_tim.c ****   *         to select the TIM peripheral.
 987:./FWLIB/src/stm32f10x_tim.c ****   * @retval None
 988:./FWLIB/src/stm32f10x_tim.c ****   */
 989:./FWLIB/src/stm32f10x_tim.c **** void TIM_InternalClockConfig(TIM_TypeDef* TIMx)
 990:./FWLIB/src/stm32f10x_tim.c **** {
 991:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 992:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST6_PERIPH(TIMx));
 993:./FWLIB/src/stm32f10x_tim.c ****   /* Disable slave mode to clock the prescaler directly with the internal clock */
 994:./FWLIB/src/stm32f10x_tim.c ****   TIMx->SMCR &=  (uint16_t)(~((uint16_t)TIM_SMCR_SMS));
 995:./FWLIB/src/stm32f10x_tim.c **** }
 996:./FWLIB/src/stm32f10x_tim.c **** 
 997:./FWLIB/src/stm32f10x_tim.c **** /**
 998:./FWLIB/src/stm32f10x_tim.c ****   * @brief  Configures the TIMx Internal Trigger as External Clock
 999:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5, 9, 12 or 15 to select the TIM peripheral.
1000:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_ITRSource: Trigger source.
1001:./FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
ARM GAS  /tmp/ccvVNijM.s 			page 19


1002:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_TS_ITR0: Internal Trigger 0
1003:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_TS_ITR1: Internal Trigger 1
1004:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_TS_ITR2: Internal Trigger 2
1005:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_TS_ITR3: Internal Trigger 3
1006:./FWLIB/src/stm32f10x_tim.c ****   * @retval None
1007:./FWLIB/src/stm32f10x_tim.c ****   */
1008:./FWLIB/src/stm32f10x_tim.c **** void TIM_ITRxExternalClockConfig(TIM_TypeDef* TIMx, uint16_t TIM_InputTriggerSource)
1009:./FWLIB/src/stm32f10x_tim.c **** {
1010:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
1011:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST6_PERIPH(TIMx));
1012:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_INTERNAL_TRIGGER_SELECTION(TIM_InputTriggerSource));
1013:./FWLIB/src/stm32f10x_tim.c ****   /* Select the Internal Trigger */
1014:./FWLIB/src/stm32f10x_tim.c ****   TIM_SelectInputTrigger(TIMx, TIM_InputTriggerSource);
1015:./FWLIB/src/stm32f10x_tim.c ****   /* Select the External clock mode1 */
1016:./FWLIB/src/stm32f10x_tim.c ****   TIMx->SMCR |= TIM_SlaveMode_External1;
1017:./FWLIB/src/stm32f10x_tim.c **** }
1018:./FWLIB/src/stm32f10x_tim.c **** 
1019:./FWLIB/src/stm32f10x_tim.c **** /**
1020:./FWLIB/src/stm32f10x_tim.c ****   * @brief  Configures the TIMx Trigger as External Clock
1021:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5, 9, 12 or 15 to select the TIM peripheral.
1022:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_TIxExternalCLKSource: Trigger source.
1023:./FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1024:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_TIxExternalCLK1Source_TI1ED: TI1 Edge Detector
1025:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_TIxExternalCLK1Source_TI1: Filtered Timer Input 1
1026:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_TIxExternalCLK1Source_TI2: Filtered Timer Input 2
1027:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_ICPolarity: specifies the TIx Polarity.
1028:./FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1029:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_ICPolarity_Rising
1030:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_ICPolarity_Falling
1031:./FWLIB/src/stm32f10x_tim.c ****   * @param  ICFilter : specifies the filter value.
1032:./FWLIB/src/stm32f10x_tim.c ****   *   This parameter must be a value between 0x0 and 0xF.
1033:./FWLIB/src/stm32f10x_tim.c ****   * @retval None
1034:./FWLIB/src/stm32f10x_tim.c ****   */
1035:./FWLIB/src/stm32f10x_tim.c **** void TIM_TIxExternalClockConfig(TIM_TypeDef* TIMx, uint16_t TIM_TIxExternalCLKSource,
1036:./FWLIB/src/stm32f10x_tim.c ****                                 uint16_t TIM_ICPolarity, uint16_t ICFilter)
1037:./FWLIB/src/stm32f10x_tim.c **** {
1038:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
1039:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST6_PERIPH(TIMx));
1040:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_TIXCLK_SOURCE(TIM_TIxExternalCLKSource));
1041:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_IC_POLARITY(TIM_ICPolarity));
1042:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_IC_FILTER(ICFilter));
1043:./FWLIB/src/stm32f10x_tim.c ****   /* Configure the Timer Input Clock Source */
1044:./FWLIB/src/stm32f10x_tim.c ****   if (TIM_TIxExternalCLKSource == TIM_TIxExternalCLK1Source_TI2)
1045:./FWLIB/src/stm32f10x_tim.c ****   {
1046:./FWLIB/src/stm32f10x_tim.c ****     TI2_Config(TIMx, TIM_ICPolarity, TIM_ICSelection_DirectTI, ICFilter);
1047:./FWLIB/src/stm32f10x_tim.c ****   }
1048:./FWLIB/src/stm32f10x_tim.c ****   else
1049:./FWLIB/src/stm32f10x_tim.c ****   {
1050:./FWLIB/src/stm32f10x_tim.c ****     TI1_Config(TIMx, TIM_ICPolarity, TIM_ICSelection_DirectTI, ICFilter);
1051:./FWLIB/src/stm32f10x_tim.c ****   }
1052:./FWLIB/src/stm32f10x_tim.c ****   /* Select the Trigger source */
1053:./FWLIB/src/stm32f10x_tim.c ****   TIM_SelectInputTrigger(TIMx, TIM_TIxExternalCLKSource);
1054:./FWLIB/src/stm32f10x_tim.c ****   /* Select the External clock mode1 */
1055:./FWLIB/src/stm32f10x_tim.c ****   TIMx->SMCR |= TIM_SlaveMode_External1;
1056:./FWLIB/src/stm32f10x_tim.c **** }
1057:./FWLIB/src/stm32f10x_tim.c **** 
1058:./FWLIB/src/stm32f10x_tim.c **** /**
ARM GAS  /tmp/ccvVNijM.s 			page 20


1059:./FWLIB/src/stm32f10x_tim.c ****   * @brief  Configures the External clock Mode1
1060:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1061:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_ExtTRGPrescaler: The external Trigger Prescaler.
1062:./FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1063:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_ExtTRGPSC_OFF: ETRP Prescaler OFF.
1064:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_ExtTRGPSC_DIV2: ETRP frequency divided by 2.
1065:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_ExtTRGPSC_DIV4: ETRP frequency divided by 4.
1066:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_ExtTRGPSC_DIV8: ETRP frequency divided by 8.
1067:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_ExtTRGPolarity: The external Trigger Polarity.
1068:./FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1069:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_ExtTRGPolarity_Inverted: active low or falling edge active.
1070:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_ExtTRGPolarity_NonInverted: active high or rising edge active.
1071:./FWLIB/src/stm32f10x_tim.c ****   * @param  ExtTRGFilter: External Trigger Filter.
1072:./FWLIB/src/stm32f10x_tim.c ****   *   This parameter must be a value between 0x00 and 0x0F
1073:./FWLIB/src/stm32f10x_tim.c ****   * @retval None
1074:./FWLIB/src/stm32f10x_tim.c ****   */
1075:./FWLIB/src/stm32f10x_tim.c **** void TIM_ETRClockMode1Config(TIM_TypeDef* TIMx, uint16_t TIM_ExtTRGPrescaler, uint16_t TIM_ExtTRGPo
1076:./FWLIB/src/stm32f10x_tim.c ****                              uint16_t ExtTRGFilter)
1077:./FWLIB/src/stm32f10x_tim.c **** {
1078:./FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpsmcr = 0;
1079:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
1080:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1081:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_EXT_PRESCALER(TIM_ExtTRGPrescaler));
1082:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_EXT_POLARITY(TIM_ExtTRGPolarity));
1083:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_EXT_FILTER(ExtTRGFilter));
1084:./FWLIB/src/stm32f10x_tim.c ****   /* Configure the ETR Clock source */
1085:./FWLIB/src/stm32f10x_tim.c ****   TIM_ETRConfig(TIMx, TIM_ExtTRGPrescaler, TIM_ExtTRGPolarity, ExtTRGFilter);
1086:./FWLIB/src/stm32f10x_tim.c ****   
1087:./FWLIB/src/stm32f10x_tim.c ****   /* Get the TIMx SMCR register value */
1088:./FWLIB/src/stm32f10x_tim.c ****   tmpsmcr = TIMx->SMCR;
1089:./FWLIB/src/stm32f10x_tim.c ****   /* Reset the SMS Bits */
1090:./FWLIB/src/stm32f10x_tim.c ****   tmpsmcr &= (uint16_t)(~((uint16_t)TIM_SMCR_SMS));
1091:./FWLIB/src/stm32f10x_tim.c ****   /* Select the External clock mode1 */
1092:./FWLIB/src/stm32f10x_tim.c ****   tmpsmcr |= TIM_SlaveMode_External1;
1093:./FWLIB/src/stm32f10x_tim.c ****   /* Select the Trigger selection : ETRF */
1094:./FWLIB/src/stm32f10x_tim.c ****   tmpsmcr &= (uint16_t)(~((uint16_t)TIM_SMCR_TS));
1095:./FWLIB/src/stm32f10x_tim.c ****   tmpsmcr |= TIM_TS_ETRF;
1096:./FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx SMCR */
1097:./FWLIB/src/stm32f10x_tim.c ****   TIMx->SMCR = tmpsmcr;
1098:./FWLIB/src/stm32f10x_tim.c **** }
1099:./FWLIB/src/stm32f10x_tim.c **** 
1100:./FWLIB/src/stm32f10x_tim.c **** /**
1101:./FWLIB/src/stm32f10x_tim.c ****   * @brief  Configures the External clock Mode2
1102:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1103:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_ExtTRGPrescaler: The external Trigger Prescaler.
1104:./FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1105:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_ExtTRGPSC_OFF: ETRP Prescaler OFF.
1106:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_ExtTRGPSC_DIV2: ETRP frequency divided by 2.
1107:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_ExtTRGPSC_DIV4: ETRP frequency divided by 4.
1108:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_ExtTRGPSC_DIV8: ETRP frequency divided by 8.
1109:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_ExtTRGPolarity: The external Trigger Polarity.
1110:./FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1111:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_ExtTRGPolarity_Inverted: active low or falling edge active.
1112:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_ExtTRGPolarity_NonInverted: active high or rising edge active.
1113:./FWLIB/src/stm32f10x_tim.c ****   * @param  ExtTRGFilter: External Trigger Filter.
1114:./FWLIB/src/stm32f10x_tim.c ****   *   This parameter must be a value between 0x00 and 0x0F
1115:./FWLIB/src/stm32f10x_tim.c ****   * @retval None
ARM GAS  /tmp/ccvVNijM.s 			page 21


1116:./FWLIB/src/stm32f10x_tim.c ****   */
1117:./FWLIB/src/stm32f10x_tim.c **** void TIM_ETRClockMode2Config(TIM_TypeDef* TIMx, uint16_t TIM_ExtTRGPrescaler, 
1118:./FWLIB/src/stm32f10x_tim.c ****                              uint16_t TIM_ExtTRGPolarity, uint16_t ExtTRGFilter)
1119:./FWLIB/src/stm32f10x_tim.c **** {
1120:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
1121:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1122:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_EXT_PRESCALER(TIM_ExtTRGPrescaler));
1123:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_EXT_POLARITY(TIM_ExtTRGPolarity));
1124:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_EXT_FILTER(ExtTRGFilter));
1125:./FWLIB/src/stm32f10x_tim.c ****   /* Configure the ETR Clock source */
1126:./FWLIB/src/stm32f10x_tim.c ****   TIM_ETRConfig(TIMx, TIM_ExtTRGPrescaler, TIM_ExtTRGPolarity, ExtTRGFilter);
1127:./FWLIB/src/stm32f10x_tim.c ****   /* Enable the External clock mode2 */
1128:./FWLIB/src/stm32f10x_tim.c ****   TIMx->SMCR |= TIM_SMCR_ECE;
1129:./FWLIB/src/stm32f10x_tim.c **** }
1130:./FWLIB/src/stm32f10x_tim.c **** 
1131:./FWLIB/src/stm32f10x_tim.c **** /**
1132:./FWLIB/src/stm32f10x_tim.c ****   * @brief  Configures the TIMx External Trigger (ETR).
1133:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1134:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_ExtTRGPrescaler: The external Trigger Prescaler.
1135:./FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1136:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_ExtTRGPSC_OFF: ETRP Prescaler OFF.
1137:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_ExtTRGPSC_DIV2: ETRP frequency divided by 2.
1138:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_ExtTRGPSC_DIV4: ETRP frequency divided by 4.
1139:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_ExtTRGPSC_DIV8: ETRP frequency divided by 8.
1140:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_ExtTRGPolarity: The external Trigger Polarity.
1141:./FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1142:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_ExtTRGPolarity_Inverted: active low or falling edge active.
1143:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_ExtTRGPolarity_NonInverted: active high or rising edge active.
1144:./FWLIB/src/stm32f10x_tim.c ****   * @param  ExtTRGFilter: External Trigger Filter.
1145:./FWLIB/src/stm32f10x_tim.c ****   *   This parameter must be a value between 0x00 and 0x0F
1146:./FWLIB/src/stm32f10x_tim.c ****   * @retval None
1147:./FWLIB/src/stm32f10x_tim.c ****   */
1148:./FWLIB/src/stm32f10x_tim.c **** void TIM_ETRConfig(TIM_TypeDef* TIMx, uint16_t TIM_ExtTRGPrescaler, uint16_t TIM_ExtTRGPolarity,
1149:./FWLIB/src/stm32f10x_tim.c ****                    uint16_t ExtTRGFilter)
1150:./FWLIB/src/stm32f10x_tim.c **** {
1151:./FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpsmcr = 0;
1152:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
1153:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1154:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_EXT_PRESCALER(TIM_ExtTRGPrescaler));
1155:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_EXT_POLARITY(TIM_ExtTRGPolarity));
1156:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_EXT_FILTER(ExtTRGFilter));
1157:./FWLIB/src/stm32f10x_tim.c ****   tmpsmcr = TIMx->SMCR;
1158:./FWLIB/src/stm32f10x_tim.c ****   /* Reset the ETR Bits */
1159:./FWLIB/src/stm32f10x_tim.c ****   tmpsmcr &= SMCR_ETR_Mask;
1160:./FWLIB/src/stm32f10x_tim.c ****   /* Set the Prescaler, the Filter value and the Polarity */
1161:./FWLIB/src/stm32f10x_tim.c ****   tmpsmcr |= (uint16_t)(TIM_ExtTRGPrescaler | (uint16_t)(TIM_ExtTRGPolarity | (uint16_t)(ExtTRGFilt
1162:./FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx SMCR */
1163:./FWLIB/src/stm32f10x_tim.c ****   TIMx->SMCR = tmpsmcr;
1164:./FWLIB/src/stm32f10x_tim.c **** }
1165:./FWLIB/src/stm32f10x_tim.c **** 
1166:./FWLIB/src/stm32f10x_tim.c **** /**
1167:./FWLIB/src/stm32f10x_tim.c ****   * @brief  Configures the TIMx Prescaler.
1168:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 to select the TIM peripheral.
1169:./FWLIB/src/stm32f10x_tim.c ****   * @param  Prescaler: specifies the Prescaler Register value
1170:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_PSCReloadMode: specifies the TIM Prescaler Reload mode
1171:./FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1172:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_PSCReloadMode_Update: The Prescaler is loaded at the update event.
ARM GAS  /tmp/ccvVNijM.s 			page 22


1173:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_PSCReloadMode_Immediate: The Prescaler is loaded immediately.
1174:./FWLIB/src/stm32f10x_tim.c ****   * @retval None
1175:./FWLIB/src/stm32f10x_tim.c ****   */
1176:./FWLIB/src/stm32f10x_tim.c **** void TIM_PrescalerConfig(TIM_TypeDef* TIMx, uint16_t Prescaler, uint16_t TIM_PSCReloadMode)
1177:./FWLIB/src/stm32f10x_tim.c **** {
1178:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
1179:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
1180:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_PRESCALER_RELOAD(TIM_PSCReloadMode));
1181:./FWLIB/src/stm32f10x_tim.c ****   /* Set the Prescaler value */
1182:./FWLIB/src/stm32f10x_tim.c ****   TIMx->PSC = Prescaler;
1183:./FWLIB/src/stm32f10x_tim.c ****   /* Set or reset the UG Bit */
1184:./FWLIB/src/stm32f10x_tim.c ****   TIMx->EGR = TIM_PSCReloadMode;
1185:./FWLIB/src/stm32f10x_tim.c **** }
1186:./FWLIB/src/stm32f10x_tim.c **** 
1187:./FWLIB/src/stm32f10x_tim.c **** /**
1188:./FWLIB/src/stm32f10x_tim.c ****   * @brief  Specifies the TIMx Counter Mode to be used.
1189:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1190:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_CounterMode: specifies the Counter Mode to be used
1191:./FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1192:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_CounterMode_Up: TIM Up Counting Mode
1193:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_CounterMode_Down: TIM Down Counting Mode
1194:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_CounterMode_CenterAligned1: TIM Center Aligned Mode1
1195:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_CounterMode_CenterAligned2: TIM Center Aligned Mode2
1196:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_CounterMode_CenterAligned3: TIM Center Aligned Mode3
1197:./FWLIB/src/stm32f10x_tim.c ****   * @retval None
1198:./FWLIB/src/stm32f10x_tim.c ****   */
1199:./FWLIB/src/stm32f10x_tim.c **** void TIM_CounterModeConfig(TIM_TypeDef* TIMx, uint16_t TIM_CounterMode)
1200:./FWLIB/src/stm32f10x_tim.c **** {
1201:./FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpcr1 = 0;
1202:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
1203:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1204:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_COUNTER_MODE(TIM_CounterMode));
1205:./FWLIB/src/stm32f10x_tim.c ****   tmpcr1 = TIMx->CR1;
1206:./FWLIB/src/stm32f10x_tim.c ****   /* Reset the CMS and DIR Bits */
1207:./FWLIB/src/stm32f10x_tim.c ****   tmpcr1 &= (uint16_t)(~((uint16_t)(TIM_CR1_DIR | TIM_CR1_CMS)));
1208:./FWLIB/src/stm32f10x_tim.c ****   /* Set the Counter Mode */
1209:./FWLIB/src/stm32f10x_tim.c ****   tmpcr1 |= TIM_CounterMode;
1210:./FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CR1 register */
1211:./FWLIB/src/stm32f10x_tim.c ****   TIMx->CR1 = tmpcr1;
1212:./FWLIB/src/stm32f10x_tim.c **** }
1213:./FWLIB/src/stm32f10x_tim.c **** 
1214:./FWLIB/src/stm32f10x_tim.c **** /**
1215:./FWLIB/src/stm32f10x_tim.c ****   * @brief  Selects the Input Trigger source
1216:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5, 8, 9, 12 or 15 to select the TIM peripheral.
1217:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_InputTriggerSource: The Input Trigger source.
1218:./FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1219:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_TS_ITR0: Internal Trigger 0
1220:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_TS_ITR1: Internal Trigger 1
1221:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_TS_ITR2: Internal Trigger 2
1222:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_TS_ITR3: Internal Trigger 3
1223:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_TS_TI1F_ED: TI1 Edge Detector
1224:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_TS_TI1FP1: Filtered Timer Input 1
1225:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_TS_TI2FP2: Filtered Timer Input 2
1226:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_TS_ETRF: External Trigger input
1227:./FWLIB/src/stm32f10x_tim.c ****   * @retval None
1228:./FWLIB/src/stm32f10x_tim.c ****   */
1229:./FWLIB/src/stm32f10x_tim.c **** void TIM_SelectInputTrigger(TIM_TypeDef* TIMx, uint16_t TIM_InputTriggerSource)
ARM GAS  /tmp/ccvVNijM.s 			page 23


1230:./FWLIB/src/stm32f10x_tim.c **** {
1231:./FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpsmcr = 0;
1232:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
1233:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST6_PERIPH(TIMx));
1234:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_TRIGGER_SELECTION(TIM_InputTriggerSource));
1235:./FWLIB/src/stm32f10x_tim.c ****   /* Get the TIMx SMCR register value */
1236:./FWLIB/src/stm32f10x_tim.c ****   tmpsmcr = TIMx->SMCR;
1237:./FWLIB/src/stm32f10x_tim.c ****   /* Reset the TS Bits */
1238:./FWLIB/src/stm32f10x_tim.c ****   tmpsmcr &= (uint16_t)(~((uint16_t)TIM_SMCR_TS));
1239:./FWLIB/src/stm32f10x_tim.c ****   /* Set the Input Trigger source */
1240:./FWLIB/src/stm32f10x_tim.c ****   tmpsmcr |= TIM_InputTriggerSource;
1241:./FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx SMCR */
1242:./FWLIB/src/stm32f10x_tim.c ****   TIMx->SMCR = tmpsmcr;
1243:./FWLIB/src/stm32f10x_tim.c **** }
1244:./FWLIB/src/stm32f10x_tim.c **** 
1245:./FWLIB/src/stm32f10x_tim.c **** /**
1246:./FWLIB/src/stm32f10x_tim.c ****   * @brief  Configures the TIMx Encoder Interface.
1247:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1248:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_EncoderMode: specifies the TIMx Encoder Mode.
1249:./FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1250:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_EncoderMode_TI1: Counter counts on TI1FP1 edge depending on TI2FP2 level.
1251:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_EncoderMode_TI2: Counter counts on TI2FP2 edge depending on TI1FP1 level.
1252:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_EncoderMode_TI12: Counter counts on both TI1FP1 and TI2FP2 edges depending
1253:./FWLIB/src/stm32f10x_tim.c ****   *                                on the level of the other input.
1254:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_IC1Polarity: specifies the IC1 Polarity
1255:./FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1256:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_ICPolarity_Falling: IC Falling edge.
1257:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_ICPolarity_Rising: IC Rising edge.
1258:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_IC2Polarity: specifies the IC2 Polarity
1259:./FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1260:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_ICPolarity_Falling: IC Falling edge.
1261:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_ICPolarity_Rising: IC Rising edge.
1262:./FWLIB/src/stm32f10x_tim.c ****   * @retval None
1263:./FWLIB/src/stm32f10x_tim.c ****   */
1264:./FWLIB/src/stm32f10x_tim.c **** void TIM_EncoderInterfaceConfig(TIM_TypeDef* TIMx, uint16_t TIM_EncoderMode,
1265:./FWLIB/src/stm32f10x_tim.c ****                                 uint16_t TIM_IC1Polarity, uint16_t TIM_IC2Polarity)
1266:./FWLIB/src/stm32f10x_tim.c **** {
1267:./FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpsmcr = 0;
1268:./FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpccmr1 = 0;
1269:./FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpccer = 0;
1270:./FWLIB/src/stm32f10x_tim.c ****     
1271:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
1272:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST5_PERIPH(TIMx));
1273:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_ENCODER_MODE(TIM_EncoderMode));
1274:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_IC_POLARITY(TIM_IC1Polarity));
1275:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_IC_POLARITY(TIM_IC2Polarity));
1276:./FWLIB/src/stm32f10x_tim.c **** 
1277:./FWLIB/src/stm32f10x_tim.c ****   /* Get the TIMx SMCR register value */
1278:./FWLIB/src/stm32f10x_tim.c ****   tmpsmcr = TIMx->SMCR;
1279:./FWLIB/src/stm32f10x_tim.c ****   
1280:./FWLIB/src/stm32f10x_tim.c ****   /* Get the TIMx CCMR1 register value */
1281:./FWLIB/src/stm32f10x_tim.c ****   tmpccmr1 = TIMx->CCMR1;
1282:./FWLIB/src/stm32f10x_tim.c ****   
1283:./FWLIB/src/stm32f10x_tim.c ****   /* Get the TIMx CCER register value */
1284:./FWLIB/src/stm32f10x_tim.c ****   tmpccer = TIMx->CCER;
1285:./FWLIB/src/stm32f10x_tim.c ****   
1286:./FWLIB/src/stm32f10x_tim.c ****   /* Set the encoder Mode */
ARM GAS  /tmp/ccvVNijM.s 			page 24


1287:./FWLIB/src/stm32f10x_tim.c ****   tmpsmcr &= (uint16_t)(~((uint16_t)TIM_SMCR_SMS));
1288:./FWLIB/src/stm32f10x_tim.c ****   tmpsmcr |= TIM_EncoderMode;
1289:./FWLIB/src/stm32f10x_tim.c ****   
1290:./FWLIB/src/stm32f10x_tim.c ****   /* Select the Capture Compare 1 and the Capture Compare 2 as input */
1291:./FWLIB/src/stm32f10x_tim.c ****   tmpccmr1 &= (uint16_t)(((uint16_t)~((uint16_t)TIM_CCMR1_CC1S)) & (uint16_t)(~((uint16_t)TIM_CCMR1
1292:./FWLIB/src/stm32f10x_tim.c ****   tmpccmr1 |= TIM_CCMR1_CC1S_0 | TIM_CCMR1_CC2S_0;
1293:./FWLIB/src/stm32f10x_tim.c ****   
1294:./FWLIB/src/stm32f10x_tim.c ****   /* Set the TI1 and the TI2 Polarities */
1295:./FWLIB/src/stm32f10x_tim.c ****   tmpccer &= (uint16_t)(((uint16_t)~((uint16_t)TIM_CCER_CC1P)) & ((uint16_t)~((uint16_t)TIM_CCER_CC
1296:./FWLIB/src/stm32f10x_tim.c ****   tmpccer |= (uint16_t)(TIM_IC1Polarity | (uint16_t)(TIM_IC2Polarity << (uint16_t)4));
1297:./FWLIB/src/stm32f10x_tim.c ****   
1298:./FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx SMCR */
1299:./FWLIB/src/stm32f10x_tim.c ****   TIMx->SMCR = tmpsmcr;
1300:./FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR1 */
1301:./FWLIB/src/stm32f10x_tim.c ****   TIMx->CCMR1 = tmpccmr1;
1302:./FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCER */
1303:./FWLIB/src/stm32f10x_tim.c ****   TIMx->CCER = tmpccer;
1304:./FWLIB/src/stm32f10x_tim.c **** }
1305:./FWLIB/src/stm32f10x_tim.c **** 
1306:./FWLIB/src/stm32f10x_tim.c **** /**
1307:./FWLIB/src/stm32f10x_tim.c ****   * @brief  Forces the TIMx output 1 waveform to active or inactive level.
1308:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1 to 17 except 6 and 7 to select the TIM peripheral.
1309:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_ForcedAction: specifies the forced Action to be set to the output waveform.
1310:./FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1311:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_ForcedAction_Active: Force active level on OC1REF
1312:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_ForcedAction_InActive: Force inactive level on OC1REF.
1313:./FWLIB/src/stm32f10x_tim.c ****   * @retval None
1314:./FWLIB/src/stm32f10x_tim.c ****   */
1315:./FWLIB/src/stm32f10x_tim.c **** void TIM_ForcedOC1Config(TIM_TypeDef* TIMx, uint16_t TIM_ForcedAction)
1316:./FWLIB/src/stm32f10x_tim.c **** {
1317:./FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpccmr1 = 0;
1318:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
1319:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST8_PERIPH(TIMx));
1320:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_FORCED_ACTION(TIM_ForcedAction));
1321:./FWLIB/src/stm32f10x_tim.c ****   tmpccmr1 = TIMx->CCMR1;
1322:./FWLIB/src/stm32f10x_tim.c ****   /* Reset the OC1M Bits */
1323:./FWLIB/src/stm32f10x_tim.c ****   tmpccmr1 &= (uint16_t)~((uint16_t)TIM_CCMR1_OC1M);
1324:./FWLIB/src/stm32f10x_tim.c ****   /* Configure The Forced output Mode */
1325:./FWLIB/src/stm32f10x_tim.c ****   tmpccmr1 |= TIM_ForcedAction;
1326:./FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR1 register */
1327:./FWLIB/src/stm32f10x_tim.c ****   TIMx->CCMR1 = tmpccmr1;
1328:./FWLIB/src/stm32f10x_tim.c **** }
1329:./FWLIB/src/stm32f10x_tim.c **** 
1330:./FWLIB/src/stm32f10x_tim.c **** /**
1331:./FWLIB/src/stm32f10x_tim.c ****   * @brief  Forces the TIMx output 2 waveform to active or inactive level.
1332:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5, 8, 9, 12 or 15 to select the TIM peripheral.
1333:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_ForcedAction: specifies the forced Action to be set to the output waveform.
1334:./FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1335:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_ForcedAction_Active: Force active level on OC2REF
1336:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_ForcedAction_InActive: Force inactive level on OC2REF.
1337:./FWLIB/src/stm32f10x_tim.c ****   * @retval None
1338:./FWLIB/src/stm32f10x_tim.c ****   */
1339:./FWLIB/src/stm32f10x_tim.c **** void TIM_ForcedOC2Config(TIM_TypeDef* TIMx, uint16_t TIM_ForcedAction)
1340:./FWLIB/src/stm32f10x_tim.c **** {
1341:./FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpccmr1 = 0;
1342:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
1343:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST6_PERIPH(TIMx));
ARM GAS  /tmp/ccvVNijM.s 			page 25


1344:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_FORCED_ACTION(TIM_ForcedAction));
1345:./FWLIB/src/stm32f10x_tim.c ****   tmpccmr1 = TIMx->CCMR1;
1346:./FWLIB/src/stm32f10x_tim.c ****   /* Reset the OC2M Bits */
1347:./FWLIB/src/stm32f10x_tim.c ****   tmpccmr1 &= (uint16_t)~((uint16_t)TIM_CCMR1_OC2M);
1348:./FWLIB/src/stm32f10x_tim.c ****   /* Configure The Forced output Mode */
1349:./FWLIB/src/stm32f10x_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_ForcedAction << 8);
1350:./FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR1 register */
1351:./FWLIB/src/stm32f10x_tim.c ****   TIMx->CCMR1 = tmpccmr1;
1352:./FWLIB/src/stm32f10x_tim.c **** }
1353:./FWLIB/src/stm32f10x_tim.c **** 
1354:./FWLIB/src/stm32f10x_tim.c **** /**
1355:./FWLIB/src/stm32f10x_tim.c ****   * @brief  Forces the TIMx output 3 waveform to active or inactive level.
1356:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1357:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_ForcedAction: specifies the forced Action to be set to the output waveform.
1358:./FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1359:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_ForcedAction_Active: Force active level on OC3REF
1360:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_ForcedAction_InActive: Force inactive level on OC3REF.
1361:./FWLIB/src/stm32f10x_tim.c ****   * @retval None
1362:./FWLIB/src/stm32f10x_tim.c ****   */
1363:./FWLIB/src/stm32f10x_tim.c **** void TIM_ForcedOC3Config(TIM_TypeDef* TIMx, uint16_t TIM_ForcedAction)
1364:./FWLIB/src/stm32f10x_tim.c **** {
1365:./FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpccmr2 = 0;
1366:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
1367:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1368:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_FORCED_ACTION(TIM_ForcedAction));
1369:./FWLIB/src/stm32f10x_tim.c ****   tmpccmr2 = TIMx->CCMR2;
1370:./FWLIB/src/stm32f10x_tim.c ****   /* Reset the OC1M Bits */
1371:./FWLIB/src/stm32f10x_tim.c ****   tmpccmr2 &= (uint16_t)~((uint16_t)TIM_CCMR2_OC3M);
1372:./FWLIB/src/stm32f10x_tim.c ****   /* Configure The Forced output Mode */
1373:./FWLIB/src/stm32f10x_tim.c ****   tmpccmr2 |= TIM_ForcedAction;
1374:./FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR2 register */
1375:./FWLIB/src/stm32f10x_tim.c ****   TIMx->CCMR2 = tmpccmr2;
1376:./FWLIB/src/stm32f10x_tim.c **** }
1377:./FWLIB/src/stm32f10x_tim.c **** 
1378:./FWLIB/src/stm32f10x_tim.c **** /**
1379:./FWLIB/src/stm32f10x_tim.c ****   * @brief  Forces the TIMx output 4 waveform to active or inactive level.
1380:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1381:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_ForcedAction: specifies the forced Action to be set to the output waveform.
1382:./FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1383:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_ForcedAction_Active: Force active level on OC4REF
1384:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_ForcedAction_InActive: Force inactive level on OC4REF.
1385:./FWLIB/src/stm32f10x_tim.c ****   * @retval None
1386:./FWLIB/src/stm32f10x_tim.c ****   */
1387:./FWLIB/src/stm32f10x_tim.c **** void TIM_ForcedOC4Config(TIM_TypeDef* TIMx, uint16_t TIM_ForcedAction)
1388:./FWLIB/src/stm32f10x_tim.c **** {
1389:./FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpccmr2 = 0;
1390:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
1391:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1392:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_FORCED_ACTION(TIM_ForcedAction));
1393:./FWLIB/src/stm32f10x_tim.c ****   tmpccmr2 = TIMx->CCMR2;
1394:./FWLIB/src/stm32f10x_tim.c ****   /* Reset the OC2M Bits */
1395:./FWLIB/src/stm32f10x_tim.c ****   tmpccmr2 &= (uint16_t)~((uint16_t)TIM_CCMR2_OC4M);
1396:./FWLIB/src/stm32f10x_tim.c ****   /* Configure The Forced output Mode */
1397:./FWLIB/src/stm32f10x_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_ForcedAction << 8);
1398:./FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR2 register */
1399:./FWLIB/src/stm32f10x_tim.c ****   TIMx->CCMR2 = tmpccmr2;
1400:./FWLIB/src/stm32f10x_tim.c **** }
ARM GAS  /tmp/ccvVNijM.s 			page 26


1401:./FWLIB/src/stm32f10x_tim.c **** 
1402:./FWLIB/src/stm32f10x_tim.c **** /**
1403:./FWLIB/src/stm32f10x_tim.c ****   * @brief  Enables or disables TIMx peripheral Preload register on ARR.
1404:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1 to 17 to select the TIM peripheral.
1405:./FWLIB/src/stm32f10x_tim.c ****   * @param  NewState: new state of the TIMx peripheral Preload register
1406:./FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be: ENABLE or DISABLE.
1407:./FWLIB/src/stm32f10x_tim.c ****   * @retval None
1408:./FWLIB/src/stm32f10x_tim.c ****   */
1409:./FWLIB/src/stm32f10x_tim.c **** void TIM_ARRPreloadConfig(TIM_TypeDef* TIMx, FunctionalState NewState)
1410:./FWLIB/src/stm32f10x_tim.c **** {
1411:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
1412:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
1413:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1414:./FWLIB/src/stm32f10x_tim.c ****   if (NewState != DISABLE)
1415:./FWLIB/src/stm32f10x_tim.c ****   {
1416:./FWLIB/src/stm32f10x_tim.c ****     /* Set the ARR Preload Bit */
1417:./FWLIB/src/stm32f10x_tim.c ****     TIMx->CR1 |= TIM_CR1_ARPE;
1418:./FWLIB/src/stm32f10x_tim.c ****   }
1419:./FWLIB/src/stm32f10x_tim.c ****   else
1420:./FWLIB/src/stm32f10x_tim.c ****   {
1421:./FWLIB/src/stm32f10x_tim.c ****     /* Reset the ARR Preload Bit */
1422:./FWLIB/src/stm32f10x_tim.c ****     TIMx->CR1 &= (uint16_t)~((uint16_t)TIM_CR1_ARPE);
1423:./FWLIB/src/stm32f10x_tim.c ****   }
1424:./FWLIB/src/stm32f10x_tim.c **** }
1425:./FWLIB/src/stm32f10x_tim.c **** 
1426:./FWLIB/src/stm32f10x_tim.c **** /**
1427:./FWLIB/src/stm32f10x_tim.c ****   * @brief  Selects the TIM peripheral Commutation event.
1428:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 8, 15, 16 or 17 to select the TIMx peripheral
1429:./FWLIB/src/stm32f10x_tim.c ****   * @param  NewState: new state of the Commutation event.
1430:./FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be: ENABLE or DISABLE.
1431:./FWLIB/src/stm32f10x_tim.c ****   * @retval None
1432:./FWLIB/src/stm32f10x_tim.c ****   */
1433:./FWLIB/src/stm32f10x_tim.c **** void TIM_SelectCOM(TIM_TypeDef* TIMx, FunctionalState NewState)
1434:./FWLIB/src/stm32f10x_tim.c **** {
1435:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
1436:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
1437:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1438:./FWLIB/src/stm32f10x_tim.c ****   if (NewState != DISABLE)
1439:./FWLIB/src/stm32f10x_tim.c ****   {
1440:./FWLIB/src/stm32f10x_tim.c ****     /* Set the COM Bit */
1441:./FWLIB/src/stm32f10x_tim.c ****     TIMx->CR2 |= TIM_CR2_CCUS;
1442:./FWLIB/src/stm32f10x_tim.c ****   }
1443:./FWLIB/src/stm32f10x_tim.c ****   else
1444:./FWLIB/src/stm32f10x_tim.c ****   {
1445:./FWLIB/src/stm32f10x_tim.c ****     /* Reset the COM Bit */
1446:./FWLIB/src/stm32f10x_tim.c ****     TIMx->CR2 &= (uint16_t)~((uint16_t)TIM_CR2_CCUS);
1447:./FWLIB/src/stm32f10x_tim.c ****   }
1448:./FWLIB/src/stm32f10x_tim.c **** }
1449:./FWLIB/src/stm32f10x_tim.c **** 
1450:./FWLIB/src/stm32f10x_tim.c **** /**
1451:./FWLIB/src/stm32f10x_tim.c ****   * @brief  Selects the TIMx peripheral Capture Compare DMA source.
1452:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5, 8, 15, 16 or 17 to select 
1453:./FWLIB/src/stm32f10x_tim.c ****   *         the TIM peripheral.
1454:./FWLIB/src/stm32f10x_tim.c ****   * @param  NewState: new state of the Capture Compare DMA source
1455:./FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be: ENABLE or DISABLE.
1456:./FWLIB/src/stm32f10x_tim.c ****   * @retval None
1457:./FWLIB/src/stm32f10x_tim.c ****   */
ARM GAS  /tmp/ccvVNijM.s 			page 27


1458:./FWLIB/src/stm32f10x_tim.c **** void TIM_SelectCCDMA(TIM_TypeDef* TIMx, FunctionalState NewState)
1459:./FWLIB/src/stm32f10x_tim.c **** {
1460:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
1461:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
1462:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1463:./FWLIB/src/stm32f10x_tim.c ****   if (NewState != DISABLE)
1464:./FWLIB/src/stm32f10x_tim.c ****   {
1465:./FWLIB/src/stm32f10x_tim.c ****     /* Set the CCDS Bit */
1466:./FWLIB/src/stm32f10x_tim.c ****     TIMx->CR2 |= TIM_CR2_CCDS;
1467:./FWLIB/src/stm32f10x_tim.c ****   }
1468:./FWLIB/src/stm32f10x_tim.c ****   else
1469:./FWLIB/src/stm32f10x_tim.c ****   {
1470:./FWLIB/src/stm32f10x_tim.c ****     /* Reset the CCDS Bit */
1471:./FWLIB/src/stm32f10x_tim.c ****     TIMx->CR2 &= (uint16_t)~((uint16_t)TIM_CR2_CCDS);
1472:./FWLIB/src/stm32f10x_tim.c ****   }
1473:./FWLIB/src/stm32f10x_tim.c **** }
1474:./FWLIB/src/stm32f10x_tim.c **** 
1475:./FWLIB/src/stm32f10x_tim.c **** /**
1476:./FWLIB/src/stm32f10x_tim.c ****   * @brief  Sets or Resets the TIM peripheral Capture Compare Preload Control bit.
1477:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be   1, 2, 3, 4, 5, 8 or 15 
1478:./FWLIB/src/stm32f10x_tim.c ****   *         to select the TIMx peripheral
1479:./FWLIB/src/stm32f10x_tim.c ****   * @param  NewState: new state of the Capture Compare Preload Control bit
1480:./FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be: ENABLE or DISABLE.
1481:./FWLIB/src/stm32f10x_tim.c ****   * @retval None
1482:./FWLIB/src/stm32f10x_tim.c ****   */
1483:./FWLIB/src/stm32f10x_tim.c **** void TIM_CCPreloadControl(TIM_TypeDef* TIMx, FunctionalState NewState)
1484:./FWLIB/src/stm32f10x_tim.c **** { 
1485:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
1486:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST5_PERIPH(TIMx));
1487:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1488:./FWLIB/src/stm32f10x_tim.c ****   if (NewState != DISABLE)
1489:./FWLIB/src/stm32f10x_tim.c ****   {
1490:./FWLIB/src/stm32f10x_tim.c ****     /* Set the CCPC Bit */
1491:./FWLIB/src/stm32f10x_tim.c ****     TIMx->CR2 |= TIM_CR2_CCPC;
1492:./FWLIB/src/stm32f10x_tim.c ****   }
1493:./FWLIB/src/stm32f10x_tim.c ****   else
1494:./FWLIB/src/stm32f10x_tim.c ****   {
1495:./FWLIB/src/stm32f10x_tim.c ****     /* Reset the CCPC Bit */
1496:./FWLIB/src/stm32f10x_tim.c ****     TIMx->CR2 &= (uint16_t)~((uint16_t)TIM_CR2_CCPC);
1497:./FWLIB/src/stm32f10x_tim.c ****   }
1498:./FWLIB/src/stm32f10x_tim.c **** }
1499:./FWLIB/src/stm32f10x_tim.c **** 
1500:./FWLIB/src/stm32f10x_tim.c **** /**
1501:./FWLIB/src/stm32f10x_tim.c ****   * @brief  Enables or disables the TIMx peripheral Preload register on CCR1.
1502:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1 to 17 except 6 and 7 to select the TIM peripheral.
1503:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_OCPreload: new state of the TIMx peripheral Preload register
1504:./FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1505:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_OCPreload_Enable
1506:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_OCPreload_Disable
1507:./FWLIB/src/stm32f10x_tim.c ****   * @retval None
1508:./FWLIB/src/stm32f10x_tim.c ****   */
1509:./FWLIB/src/stm32f10x_tim.c **** void TIM_OC1PreloadConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPreload)
1510:./FWLIB/src/stm32f10x_tim.c **** {
1511:./FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpccmr1 = 0;
1512:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
1513:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST8_PERIPH(TIMx));
1514:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OCPRELOAD_STATE(TIM_OCPreload));
ARM GAS  /tmp/ccvVNijM.s 			page 28


1515:./FWLIB/src/stm32f10x_tim.c ****   tmpccmr1 = TIMx->CCMR1;
1516:./FWLIB/src/stm32f10x_tim.c ****   /* Reset the OC1PE Bit */
1517:./FWLIB/src/stm32f10x_tim.c ****   tmpccmr1 &= (uint16_t)~((uint16_t)TIM_CCMR1_OC1PE);
1518:./FWLIB/src/stm32f10x_tim.c ****   /* Enable or Disable the Output Compare Preload feature */
1519:./FWLIB/src/stm32f10x_tim.c ****   tmpccmr1 |= TIM_OCPreload;
1520:./FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR1 register */
1521:./FWLIB/src/stm32f10x_tim.c ****   TIMx->CCMR1 = tmpccmr1;
1522:./FWLIB/src/stm32f10x_tim.c **** }
1523:./FWLIB/src/stm32f10x_tim.c **** 
1524:./FWLIB/src/stm32f10x_tim.c **** /**
1525:./FWLIB/src/stm32f10x_tim.c ****   * @brief  Enables or disables the TIMx peripheral Preload register on CCR2.
1526:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5, 8, 9, 12 or 15 to select 
1527:./FWLIB/src/stm32f10x_tim.c ****   *         the TIM peripheral.
1528:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_OCPreload: new state of the TIMx peripheral Preload register
1529:./FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1530:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_OCPreload_Enable
1531:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_OCPreload_Disable
1532:./FWLIB/src/stm32f10x_tim.c ****   * @retval None
1533:./FWLIB/src/stm32f10x_tim.c ****   */
1534:./FWLIB/src/stm32f10x_tim.c **** void TIM_OC2PreloadConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPreload)
1535:./FWLIB/src/stm32f10x_tim.c **** {
1536:./FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpccmr1 = 0;
1537:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
1538:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST6_PERIPH(TIMx));
1539:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OCPRELOAD_STATE(TIM_OCPreload));
1540:./FWLIB/src/stm32f10x_tim.c ****   tmpccmr1 = TIMx->CCMR1;
1541:./FWLIB/src/stm32f10x_tim.c ****   /* Reset the OC2PE Bit */
1542:./FWLIB/src/stm32f10x_tim.c ****   tmpccmr1 &= (uint16_t)~((uint16_t)TIM_CCMR1_OC2PE);
1543:./FWLIB/src/stm32f10x_tim.c ****   /* Enable or Disable the Output Compare Preload feature */
1544:./FWLIB/src/stm32f10x_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_OCPreload << 8);
1545:./FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR1 register */
1546:./FWLIB/src/stm32f10x_tim.c ****   TIMx->CCMR1 = tmpccmr1;
1547:./FWLIB/src/stm32f10x_tim.c **** }
1548:./FWLIB/src/stm32f10x_tim.c **** 
1549:./FWLIB/src/stm32f10x_tim.c **** /**
1550:./FWLIB/src/stm32f10x_tim.c ****   * @brief  Enables or disables the TIMx peripheral Preload register on CCR3.
1551:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1552:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_OCPreload: new state of the TIMx peripheral Preload register
1553:./FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1554:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_OCPreload_Enable
1555:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_OCPreload_Disable
1556:./FWLIB/src/stm32f10x_tim.c ****   * @retval None
1557:./FWLIB/src/stm32f10x_tim.c ****   */
1558:./FWLIB/src/stm32f10x_tim.c **** void TIM_OC3PreloadConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPreload)
1559:./FWLIB/src/stm32f10x_tim.c **** {
1560:./FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpccmr2 = 0;
1561:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
1562:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1563:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OCPRELOAD_STATE(TIM_OCPreload));
1564:./FWLIB/src/stm32f10x_tim.c ****   tmpccmr2 = TIMx->CCMR2;
1565:./FWLIB/src/stm32f10x_tim.c ****   /* Reset the OC3PE Bit */
1566:./FWLIB/src/stm32f10x_tim.c ****   tmpccmr2 &= (uint16_t)~((uint16_t)TIM_CCMR2_OC3PE);
1567:./FWLIB/src/stm32f10x_tim.c ****   /* Enable or Disable the Output Compare Preload feature */
1568:./FWLIB/src/stm32f10x_tim.c ****   tmpccmr2 |= TIM_OCPreload;
1569:./FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR2 register */
1570:./FWLIB/src/stm32f10x_tim.c ****   TIMx->CCMR2 = tmpccmr2;
1571:./FWLIB/src/stm32f10x_tim.c **** }
ARM GAS  /tmp/ccvVNijM.s 			page 29


1572:./FWLIB/src/stm32f10x_tim.c **** 
1573:./FWLIB/src/stm32f10x_tim.c **** /**
1574:./FWLIB/src/stm32f10x_tim.c ****   * @brief  Enables or disables the TIMx peripheral Preload register on CCR4.
1575:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1576:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_OCPreload: new state of the TIMx peripheral Preload register
1577:./FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1578:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_OCPreload_Enable
1579:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_OCPreload_Disable
1580:./FWLIB/src/stm32f10x_tim.c ****   * @retval None
1581:./FWLIB/src/stm32f10x_tim.c ****   */
1582:./FWLIB/src/stm32f10x_tim.c **** void TIM_OC4PreloadConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPreload)
1583:./FWLIB/src/stm32f10x_tim.c **** {
1584:./FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpccmr2 = 0;
1585:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
1586:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1587:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OCPRELOAD_STATE(TIM_OCPreload));
1588:./FWLIB/src/stm32f10x_tim.c ****   tmpccmr2 = TIMx->CCMR2;
1589:./FWLIB/src/stm32f10x_tim.c ****   /* Reset the OC4PE Bit */
1590:./FWLIB/src/stm32f10x_tim.c ****   tmpccmr2 &= (uint16_t)~((uint16_t)TIM_CCMR2_OC4PE);
1591:./FWLIB/src/stm32f10x_tim.c ****   /* Enable or Disable the Output Compare Preload feature */
1592:./FWLIB/src/stm32f10x_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_OCPreload << 8);
1593:./FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR2 register */
1594:./FWLIB/src/stm32f10x_tim.c ****   TIMx->CCMR2 = tmpccmr2;
1595:./FWLIB/src/stm32f10x_tim.c **** }
1596:./FWLIB/src/stm32f10x_tim.c **** 
1597:./FWLIB/src/stm32f10x_tim.c **** /**
1598:./FWLIB/src/stm32f10x_tim.c ****   * @brief  Configures the TIMx Output Compare 1 Fast feature.
1599:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1 to 17 except 6 and 7 to select the TIM peripheral.
1600:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_OCFast: new state of the Output Compare Fast Enable Bit.
1601:./FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1602:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_OCFast_Enable: TIM output compare fast enable
1603:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_OCFast_Disable: TIM output compare fast disable
1604:./FWLIB/src/stm32f10x_tim.c ****   * @retval None
1605:./FWLIB/src/stm32f10x_tim.c ****   */
1606:./FWLIB/src/stm32f10x_tim.c **** void TIM_OC1FastConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCFast)
1607:./FWLIB/src/stm32f10x_tim.c **** {
1608:./FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpccmr1 = 0;
1609:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
1610:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST8_PERIPH(TIMx));
1611:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OCFAST_STATE(TIM_OCFast));
1612:./FWLIB/src/stm32f10x_tim.c ****   /* Get the TIMx CCMR1 register value */
1613:./FWLIB/src/stm32f10x_tim.c ****   tmpccmr1 = TIMx->CCMR1;
1614:./FWLIB/src/stm32f10x_tim.c ****   /* Reset the OC1FE Bit */
1615:./FWLIB/src/stm32f10x_tim.c ****   tmpccmr1 &= (uint16_t)~((uint16_t)TIM_CCMR1_OC1FE);
1616:./FWLIB/src/stm32f10x_tim.c ****   /* Enable or Disable the Output Compare Fast Bit */
1617:./FWLIB/src/stm32f10x_tim.c ****   tmpccmr1 |= TIM_OCFast;
1618:./FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR1 */
1619:./FWLIB/src/stm32f10x_tim.c ****   TIMx->CCMR1 = tmpccmr1;
1620:./FWLIB/src/stm32f10x_tim.c **** }
1621:./FWLIB/src/stm32f10x_tim.c **** 
1622:./FWLIB/src/stm32f10x_tim.c **** /**
1623:./FWLIB/src/stm32f10x_tim.c ****   * @brief  Configures the TIMx Output Compare 2 Fast feature.
1624:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5, 8, 9, 12 or 15 to select 
1625:./FWLIB/src/stm32f10x_tim.c ****   *         the TIM peripheral.
1626:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_OCFast: new state of the Output Compare Fast Enable Bit.
1627:./FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1628:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_OCFast_Enable: TIM output compare fast enable
ARM GAS  /tmp/ccvVNijM.s 			page 30


1629:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_OCFast_Disable: TIM output compare fast disable
1630:./FWLIB/src/stm32f10x_tim.c ****   * @retval None
1631:./FWLIB/src/stm32f10x_tim.c ****   */
1632:./FWLIB/src/stm32f10x_tim.c **** void TIM_OC2FastConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCFast)
1633:./FWLIB/src/stm32f10x_tim.c **** {
1634:./FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpccmr1 = 0;
1635:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
1636:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST6_PERIPH(TIMx));
1637:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OCFAST_STATE(TIM_OCFast));
1638:./FWLIB/src/stm32f10x_tim.c ****   /* Get the TIMx CCMR1 register value */
1639:./FWLIB/src/stm32f10x_tim.c ****   tmpccmr1 = TIMx->CCMR1;
1640:./FWLIB/src/stm32f10x_tim.c ****   /* Reset the OC2FE Bit */
1641:./FWLIB/src/stm32f10x_tim.c ****   tmpccmr1 &= (uint16_t)~((uint16_t)TIM_CCMR1_OC2FE);
1642:./FWLIB/src/stm32f10x_tim.c ****   /* Enable or Disable the Output Compare Fast Bit */
1643:./FWLIB/src/stm32f10x_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_OCFast << 8);
1644:./FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR1 */
1645:./FWLIB/src/stm32f10x_tim.c ****   TIMx->CCMR1 = tmpccmr1;
1646:./FWLIB/src/stm32f10x_tim.c **** }
1647:./FWLIB/src/stm32f10x_tim.c **** 
1648:./FWLIB/src/stm32f10x_tim.c **** /**
1649:./FWLIB/src/stm32f10x_tim.c ****   * @brief  Configures the TIMx Output Compare 3 Fast feature.
1650:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1651:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_OCFast: new state of the Output Compare Fast Enable Bit.
1652:./FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1653:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_OCFast_Enable: TIM output compare fast enable
1654:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_OCFast_Disable: TIM output compare fast disable
1655:./FWLIB/src/stm32f10x_tim.c ****   * @retval None
1656:./FWLIB/src/stm32f10x_tim.c ****   */
1657:./FWLIB/src/stm32f10x_tim.c **** void TIM_OC3FastConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCFast)
1658:./FWLIB/src/stm32f10x_tim.c **** {
1659:./FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpccmr2 = 0;
1660:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
1661:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1662:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OCFAST_STATE(TIM_OCFast));
1663:./FWLIB/src/stm32f10x_tim.c ****   /* Get the TIMx CCMR2 register value */
1664:./FWLIB/src/stm32f10x_tim.c ****   tmpccmr2 = TIMx->CCMR2;
1665:./FWLIB/src/stm32f10x_tim.c ****   /* Reset the OC3FE Bit */
1666:./FWLIB/src/stm32f10x_tim.c ****   tmpccmr2 &= (uint16_t)~((uint16_t)TIM_CCMR2_OC3FE);
1667:./FWLIB/src/stm32f10x_tim.c ****   /* Enable or Disable the Output Compare Fast Bit */
1668:./FWLIB/src/stm32f10x_tim.c ****   tmpccmr2 |= TIM_OCFast;
1669:./FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR2 */
1670:./FWLIB/src/stm32f10x_tim.c ****   TIMx->CCMR2 = tmpccmr2;
1671:./FWLIB/src/stm32f10x_tim.c **** }
1672:./FWLIB/src/stm32f10x_tim.c **** 
1673:./FWLIB/src/stm32f10x_tim.c **** /**
1674:./FWLIB/src/stm32f10x_tim.c ****   * @brief  Configures the TIMx Output Compare 4 Fast feature.
1675:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1676:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_OCFast: new state of the Output Compare Fast Enable Bit.
1677:./FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1678:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_OCFast_Enable: TIM output compare fast enable
1679:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_OCFast_Disable: TIM output compare fast disable
1680:./FWLIB/src/stm32f10x_tim.c ****   * @retval None
1681:./FWLIB/src/stm32f10x_tim.c ****   */
1682:./FWLIB/src/stm32f10x_tim.c **** void TIM_OC4FastConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCFast)
1683:./FWLIB/src/stm32f10x_tim.c **** {
1684:./FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpccmr2 = 0;
1685:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
ARM GAS  /tmp/ccvVNijM.s 			page 31


1686:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1687:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OCFAST_STATE(TIM_OCFast));
1688:./FWLIB/src/stm32f10x_tim.c ****   /* Get the TIMx CCMR2 register value */
1689:./FWLIB/src/stm32f10x_tim.c ****   tmpccmr2 = TIMx->CCMR2;
1690:./FWLIB/src/stm32f10x_tim.c ****   /* Reset the OC4FE Bit */
1691:./FWLIB/src/stm32f10x_tim.c ****   tmpccmr2 &= (uint16_t)~((uint16_t)TIM_CCMR2_OC4FE);
1692:./FWLIB/src/stm32f10x_tim.c ****   /* Enable or Disable the Output Compare Fast Bit */
1693:./FWLIB/src/stm32f10x_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_OCFast << 8);
1694:./FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR2 */
1695:./FWLIB/src/stm32f10x_tim.c ****   TIMx->CCMR2 = tmpccmr2;
1696:./FWLIB/src/stm32f10x_tim.c **** }
1697:./FWLIB/src/stm32f10x_tim.c **** 
1698:./FWLIB/src/stm32f10x_tim.c **** /**
1699:./FWLIB/src/stm32f10x_tim.c ****   * @brief  Clears or safeguards the OCREF1 signal on an external event
1700:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1701:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_OCClear: new state of the Output Compare Clear Enable Bit.
1702:./FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1703:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_OCClear_Enable: TIM Output clear enable
1704:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_OCClear_Disable: TIM Output clear disable
1705:./FWLIB/src/stm32f10x_tim.c ****   * @retval None
1706:./FWLIB/src/stm32f10x_tim.c ****   */
1707:./FWLIB/src/stm32f10x_tim.c **** void TIM_ClearOC1Ref(TIM_TypeDef* TIMx, uint16_t TIM_OCClear)
1708:./FWLIB/src/stm32f10x_tim.c **** {
1709:./FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpccmr1 = 0;
1710:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
1711:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1712:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OCCLEAR_STATE(TIM_OCClear));
1713:./FWLIB/src/stm32f10x_tim.c **** 
1714:./FWLIB/src/stm32f10x_tim.c ****   tmpccmr1 = TIMx->CCMR1;
1715:./FWLIB/src/stm32f10x_tim.c **** 
1716:./FWLIB/src/stm32f10x_tim.c ****   /* Reset the OC1CE Bit */
1717:./FWLIB/src/stm32f10x_tim.c ****   tmpccmr1 &= (uint16_t)~((uint16_t)TIM_CCMR1_OC1CE);
1718:./FWLIB/src/stm32f10x_tim.c ****   /* Enable or Disable the Output Compare Clear Bit */
1719:./FWLIB/src/stm32f10x_tim.c ****   tmpccmr1 |= TIM_OCClear;
1720:./FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR1 register */
1721:./FWLIB/src/stm32f10x_tim.c ****   TIMx->CCMR1 = tmpccmr1;
1722:./FWLIB/src/stm32f10x_tim.c **** }
1723:./FWLIB/src/stm32f10x_tim.c **** 
1724:./FWLIB/src/stm32f10x_tim.c **** /**
1725:./FWLIB/src/stm32f10x_tim.c ****   * @brief  Clears or safeguards the OCREF2 signal on an external event
1726:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1727:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_OCClear: new state of the Output Compare Clear Enable Bit.
1728:./FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1729:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_OCClear_Enable: TIM Output clear enable
1730:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_OCClear_Disable: TIM Output clear disable
1731:./FWLIB/src/stm32f10x_tim.c ****   * @retval None
1732:./FWLIB/src/stm32f10x_tim.c ****   */
1733:./FWLIB/src/stm32f10x_tim.c **** void TIM_ClearOC2Ref(TIM_TypeDef* TIMx, uint16_t TIM_OCClear)
1734:./FWLIB/src/stm32f10x_tim.c **** {
1735:./FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpccmr1 = 0;
1736:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
1737:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1738:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OCCLEAR_STATE(TIM_OCClear));
1739:./FWLIB/src/stm32f10x_tim.c ****   tmpccmr1 = TIMx->CCMR1;
1740:./FWLIB/src/stm32f10x_tim.c ****   /* Reset the OC2CE Bit */
1741:./FWLIB/src/stm32f10x_tim.c ****   tmpccmr1 &= (uint16_t)~((uint16_t)TIM_CCMR1_OC2CE);
1742:./FWLIB/src/stm32f10x_tim.c ****   /* Enable or Disable the Output Compare Clear Bit */
ARM GAS  /tmp/ccvVNijM.s 			page 32


1743:./FWLIB/src/stm32f10x_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_OCClear << 8);
1744:./FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR1 register */
1745:./FWLIB/src/stm32f10x_tim.c ****   TIMx->CCMR1 = tmpccmr1;
1746:./FWLIB/src/stm32f10x_tim.c **** }
1747:./FWLIB/src/stm32f10x_tim.c **** 
1748:./FWLIB/src/stm32f10x_tim.c **** /**
1749:./FWLIB/src/stm32f10x_tim.c ****   * @brief  Clears or safeguards the OCREF3 signal on an external event
1750:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1751:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_OCClear: new state of the Output Compare Clear Enable Bit.
1752:./FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1753:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_OCClear_Enable: TIM Output clear enable
1754:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_OCClear_Disable: TIM Output clear disable
1755:./FWLIB/src/stm32f10x_tim.c ****   * @retval None
1756:./FWLIB/src/stm32f10x_tim.c ****   */
1757:./FWLIB/src/stm32f10x_tim.c **** void TIM_ClearOC3Ref(TIM_TypeDef* TIMx, uint16_t TIM_OCClear)
1758:./FWLIB/src/stm32f10x_tim.c **** {
1759:./FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpccmr2 = 0;
1760:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
1761:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1762:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OCCLEAR_STATE(TIM_OCClear));
1763:./FWLIB/src/stm32f10x_tim.c ****   tmpccmr2 = TIMx->CCMR2;
1764:./FWLIB/src/stm32f10x_tim.c ****   /* Reset the OC3CE Bit */
1765:./FWLIB/src/stm32f10x_tim.c ****   tmpccmr2 &= (uint16_t)~((uint16_t)TIM_CCMR2_OC3CE);
1766:./FWLIB/src/stm32f10x_tim.c ****   /* Enable or Disable the Output Compare Clear Bit */
1767:./FWLIB/src/stm32f10x_tim.c ****   tmpccmr2 |= TIM_OCClear;
1768:./FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR2 register */
1769:./FWLIB/src/stm32f10x_tim.c ****   TIMx->CCMR2 = tmpccmr2;
1770:./FWLIB/src/stm32f10x_tim.c **** }
1771:./FWLIB/src/stm32f10x_tim.c **** 
1772:./FWLIB/src/stm32f10x_tim.c **** /**
1773:./FWLIB/src/stm32f10x_tim.c ****   * @brief  Clears or safeguards the OCREF4 signal on an external event
1774:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1775:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_OCClear: new state of the Output Compare Clear Enable Bit.
1776:./FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1777:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_OCClear_Enable: TIM Output clear enable
1778:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_OCClear_Disable: TIM Output clear disable
1779:./FWLIB/src/stm32f10x_tim.c ****   * @retval None
1780:./FWLIB/src/stm32f10x_tim.c ****   */
1781:./FWLIB/src/stm32f10x_tim.c **** void TIM_ClearOC4Ref(TIM_TypeDef* TIMx, uint16_t TIM_OCClear)
1782:./FWLIB/src/stm32f10x_tim.c **** {
1783:./FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpccmr2 = 0;
1784:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
1785:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1786:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OCCLEAR_STATE(TIM_OCClear));
1787:./FWLIB/src/stm32f10x_tim.c ****   tmpccmr2 = TIMx->CCMR2;
1788:./FWLIB/src/stm32f10x_tim.c ****   /* Reset the OC4CE Bit */
1789:./FWLIB/src/stm32f10x_tim.c ****   tmpccmr2 &= (uint16_t)~((uint16_t)TIM_CCMR2_OC4CE);
1790:./FWLIB/src/stm32f10x_tim.c ****   /* Enable or Disable the Output Compare Clear Bit */
1791:./FWLIB/src/stm32f10x_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_OCClear << 8);
1792:./FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR2 register */
1793:./FWLIB/src/stm32f10x_tim.c ****   TIMx->CCMR2 = tmpccmr2;
1794:./FWLIB/src/stm32f10x_tim.c **** }
1795:./FWLIB/src/stm32f10x_tim.c **** 
1796:./FWLIB/src/stm32f10x_tim.c **** /**
1797:./FWLIB/src/stm32f10x_tim.c ****   * @brief  Configures the TIMx channel 1 polarity.
1798:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 except 6 and 7 to select the TIM peripheral.
1799:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_OCPolarity: specifies the OC1 Polarity
ARM GAS  /tmp/ccvVNijM.s 			page 33


1800:./FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1801:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_OCPolarity_High: Output Compare active high
1802:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_OCPolarity_Low: Output Compare active low
1803:./FWLIB/src/stm32f10x_tim.c ****   * @retval None
1804:./FWLIB/src/stm32f10x_tim.c ****   */
1805:./FWLIB/src/stm32f10x_tim.c **** void TIM_OC1PolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPolarity)
1806:./FWLIB/src/stm32f10x_tim.c **** {
1807:./FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpccer = 0;
1808:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
1809:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST8_PERIPH(TIMx));
1810:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCPolarity));
1811:./FWLIB/src/stm32f10x_tim.c ****   tmpccer = TIMx->CCER;
1812:./FWLIB/src/stm32f10x_tim.c ****   /* Set or Reset the CC1P Bit */
1813:./FWLIB/src/stm32f10x_tim.c ****   tmpccer &= (uint16_t)~((uint16_t)TIM_CCER_CC1P);
1814:./FWLIB/src/stm32f10x_tim.c ****   tmpccer |= TIM_OCPolarity;
1815:./FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCER register */
1816:./FWLIB/src/stm32f10x_tim.c ****   TIMx->CCER = tmpccer;
1817:./FWLIB/src/stm32f10x_tim.c **** }
1818:./FWLIB/src/stm32f10x_tim.c **** 
1819:./FWLIB/src/stm32f10x_tim.c **** /**
1820:./FWLIB/src/stm32f10x_tim.c ****   * @brief  Configures the TIMx Channel 1N polarity.
1821:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1, 8, 15, 16 or 17 to select the TIM peripheral.
1822:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_OCNPolarity: specifies the OC1N Polarity
1823:./FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1824:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_OCNPolarity_High: Output Compare active high
1825:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_OCNPolarity_Low: Output Compare active low
1826:./FWLIB/src/stm32f10x_tim.c ****   * @retval None
1827:./FWLIB/src/stm32f10x_tim.c ****   */
1828:./FWLIB/src/stm32f10x_tim.c **** void TIM_OC1NPolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCNPolarity)
1829:./FWLIB/src/stm32f10x_tim.c **** {
1830:./FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpccer = 0;
1831:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
1832:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
1833:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OCN_POLARITY(TIM_OCNPolarity));
1834:./FWLIB/src/stm32f10x_tim.c ****    
1835:./FWLIB/src/stm32f10x_tim.c ****   tmpccer = TIMx->CCER;
1836:./FWLIB/src/stm32f10x_tim.c ****   /* Set or Reset the CC1NP Bit */
1837:./FWLIB/src/stm32f10x_tim.c ****   tmpccer &= (uint16_t)~((uint16_t)TIM_CCER_CC1NP);
1838:./FWLIB/src/stm32f10x_tim.c ****   tmpccer |= TIM_OCNPolarity;
1839:./FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCER register */
1840:./FWLIB/src/stm32f10x_tim.c ****   TIMx->CCER = tmpccer;
1841:./FWLIB/src/stm32f10x_tim.c **** }
1842:./FWLIB/src/stm32f10x_tim.c **** 
1843:./FWLIB/src/stm32f10x_tim.c **** /**
1844:./FWLIB/src/stm32f10x_tim.c ****   * @brief  Configures the TIMx channel 2 polarity.
1845:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9, 12 or 15 to select the TIM peripheral.
1846:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_OCPolarity: specifies the OC2 Polarity
1847:./FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1848:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_OCPolarity_High: Output Compare active high
1849:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_OCPolarity_Low: Output Compare active low
1850:./FWLIB/src/stm32f10x_tim.c ****   * @retval None
1851:./FWLIB/src/stm32f10x_tim.c ****   */
1852:./FWLIB/src/stm32f10x_tim.c **** void TIM_OC2PolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPolarity)
1853:./FWLIB/src/stm32f10x_tim.c **** {
1854:./FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpccer = 0;
1855:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
1856:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST6_PERIPH(TIMx));
ARM GAS  /tmp/ccvVNijM.s 			page 34


1857:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCPolarity));
1858:./FWLIB/src/stm32f10x_tim.c ****   tmpccer = TIMx->CCER;
1859:./FWLIB/src/stm32f10x_tim.c ****   /* Set or Reset the CC2P Bit */
1860:./FWLIB/src/stm32f10x_tim.c ****   tmpccer &= (uint16_t)~((uint16_t)TIM_CCER_CC2P);
1861:./FWLIB/src/stm32f10x_tim.c ****   tmpccer |= (uint16_t)(TIM_OCPolarity << 4);
1862:./FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCER register */
1863:./FWLIB/src/stm32f10x_tim.c ****   TIMx->CCER = tmpccer;
1864:./FWLIB/src/stm32f10x_tim.c **** }
1865:./FWLIB/src/stm32f10x_tim.c **** 
1866:./FWLIB/src/stm32f10x_tim.c **** /**
1867:./FWLIB/src/stm32f10x_tim.c ****   * @brief  Configures the TIMx Channel 2N polarity.
1868:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 or 8 to select the TIM peripheral.
1869:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_OCNPolarity: specifies the OC2N Polarity
1870:./FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1871:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_OCNPolarity_High: Output Compare active high
1872:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_OCNPolarity_Low: Output Compare active low
1873:./FWLIB/src/stm32f10x_tim.c ****   * @retval None
1874:./FWLIB/src/stm32f10x_tim.c ****   */
1875:./FWLIB/src/stm32f10x_tim.c **** void TIM_OC2NPolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCNPolarity)
1876:./FWLIB/src/stm32f10x_tim.c **** {
1877:./FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpccer = 0;
1878:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
1879:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
1880:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OCN_POLARITY(TIM_OCNPolarity));
1881:./FWLIB/src/stm32f10x_tim.c ****   
1882:./FWLIB/src/stm32f10x_tim.c ****   tmpccer = TIMx->CCER;
1883:./FWLIB/src/stm32f10x_tim.c ****   /* Set or Reset the CC2NP Bit */
1884:./FWLIB/src/stm32f10x_tim.c ****   tmpccer &= (uint16_t)~((uint16_t)TIM_CCER_CC2NP);
1885:./FWLIB/src/stm32f10x_tim.c ****   tmpccer |= (uint16_t)(TIM_OCNPolarity << 4);
1886:./FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCER register */
1887:./FWLIB/src/stm32f10x_tim.c ****   TIMx->CCER = tmpccer;
1888:./FWLIB/src/stm32f10x_tim.c **** }
1889:./FWLIB/src/stm32f10x_tim.c **** 
1890:./FWLIB/src/stm32f10x_tim.c **** /**
1891:./FWLIB/src/stm32f10x_tim.c ****   * @brief  Configures the TIMx channel 3 polarity.
1892:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1893:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_OCPolarity: specifies the OC3 Polarity
1894:./FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1895:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_OCPolarity_High: Output Compare active high
1896:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_OCPolarity_Low: Output Compare active low
1897:./FWLIB/src/stm32f10x_tim.c ****   * @retval None
1898:./FWLIB/src/stm32f10x_tim.c ****   */
1899:./FWLIB/src/stm32f10x_tim.c **** void TIM_OC3PolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPolarity)
1900:./FWLIB/src/stm32f10x_tim.c **** {
1901:./FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpccer = 0;
1902:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
1903:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1904:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCPolarity));
1905:./FWLIB/src/stm32f10x_tim.c ****   tmpccer = TIMx->CCER;
1906:./FWLIB/src/stm32f10x_tim.c ****   /* Set or Reset the CC3P Bit */
1907:./FWLIB/src/stm32f10x_tim.c ****   tmpccer &= (uint16_t)~((uint16_t)TIM_CCER_CC3P);
1908:./FWLIB/src/stm32f10x_tim.c ****   tmpccer |= (uint16_t)(TIM_OCPolarity << 8);
1909:./FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCER register */
1910:./FWLIB/src/stm32f10x_tim.c ****   TIMx->CCER = tmpccer;
1911:./FWLIB/src/stm32f10x_tim.c **** }
1912:./FWLIB/src/stm32f10x_tim.c **** 
1913:./FWLIB/src/stm32f10x_tim.c **** /**
ARM GAS  /tmp/ccvVNijM.s 			page 35


1914:./FWLIB/src/stm32f10x_tim.c ****   * @brief  Configures the TIMx Channel 3N polarity.
1915:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 or 8 to select the TIM peripheral.
1916:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_OCNPolarity: specifies the OC3N Polarity
1917:./FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1918:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_OCNPolarity_High: Output Compare active high
1919:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_OCNPolarity_Low: Output Compare active low
1920:./FWLIB/src/stm32f10x_tim.c ****   * @retval None
1921:./FWLIB/src/stm32f10x_tim.c ****   */
1922:./FWLIB/src/stm32f10x_tim.c **** void TIM_OC3NPolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCNPolarity)
1923:./FWLIB/src/stm32f10x_tim.c **** {
1924:./FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpccer = 0;
1925:./FWLIB/src/stm32f10x_tim.c ****  
1926:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
1927:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
1928:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OCN_POLARITY(TIM_OCNPolarity));
1929:./FWLIB/src/stm32f10x_tim.c ****     
1930:./FWLIB/src/stm32f10x_tim.c ****   tmpccer = TIMx->CCER;
1931:./FWLIB/src/stm32f10x_tim.c ****   /* Set or Reset the CC3NP Bit */
1932:./FWLIB/src/stm32f10x_tim.c ****   tmpccer &= (uint16_t)~((uint16_t)TIM_CCER_CC3NP);
1933:./FWLIB/src/stm32f10x_tim.c ****   tmpccer |= (uint16_t)(TIM_OCNPolarity << 8);
1934:./FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCER register */
1935:./FWLIB/src/stm32f10x_tim.c ****   TIMx->CCER = tmpccer;
1936:./FWLIB/src/stm32f10x_tim.c **** }
1937:./FWLIB/src/stm32f10x_tim.c **** 
1938:./FWLIB/src/stm32f10x_tim.c **** /**
1939:./FWLIB/src/stm32f10x_tim.c ****   * @brief  Configures the TIMx channel 4 polarity.
1940:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1941:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_OCPolarity: specifies the OC4 Polarity
1942:./FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1943:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_OCPolarity_High: Output Compare active high
1944:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_OCPolarity_Low: Output Compare active low
1945:./FWLIB/src/stm32f10x_tim.c ****   * @retval None
1946:./FWLIB/src/stm32f10x_tim.c ****   */
1947:./FWLIB/src/stm32f10x_tim.c **** void TIM_OC4PolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPolarity)
1948:./FWLIB/src/stm32f10x_tim.c **** {
1949:./FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpccer = 0;
1950:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
1951:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1952:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCPolarity));
1953:./FWLIB/src/stm32f10x_tim.c ****   tmpccer = TIMx->CCER;
1954:./FWLIB/src/stm32f10x_tim.c ****   /* Set or Reset the CC4P Bit */
1955:./FWLIB/src/stm32f10x_tim.c ****   tmpccer &= (uint16_t)~((uint16_t)TIM_CCER_CC4P);
1956:./FWLIB/src/stm32f10x_tim.c ****   tmpccer |= (uint16_t)(TIM_OCPolarity << 12);
1957:./FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCER register */
1958:./FWLIB/src/stm32f10x_tim.c ****   TIMx->CCER = tmpccer;
1959:./FWLIB/src/stm32f10x_tim.c **** }
1960:./FWLIB/src/stm32f10x_tim.c **** 
1961:./FWLIB/src/stm32f10x_tim.c **** /**
1962:./FWLIB/src/stm32f10x_tim.c ****   * @brief  Enables or disables the TIM Capture Compare Channel x.
1963:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 except 6 and 7 to select the TIM peripheral.
1964:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_Channel: specifies the TIM Channel
1965:./FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1966:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_Channel_1: TIM Channel 1
1967:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_Channel_2: TIM Channel 2
1968:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_Channel_3: TIM Channel 3
1969:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_Channel_4: TIM Channel 4
1970:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_CCx: specifies the TIM Channel CCxE bit new state.
ARM GAS  /tmp/ccvVNijM.s 			page 36


1971:./FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be: TIM_CCx_Enable or TIM_CCx_Disable. 
1972:./FWLIB/src/stm32f10x_tim.c ****   * @retval None
1973:./FWLIB/src/stm32f10x_tim.c ****   */
1974:./FWLIB/src/stm32f10x_tim.c **** void TIM_CCxCmd(TIM_TypeDef* TIMx, uint16_t TIM_Channel, uint16_t TIM_CCx)
1975:./FWLIB/src/stm32f10x_tim.c **** {
1976:./FWLIB/src/stm32f10x_tim.c ****   uint16_t tmp = 0;
1977:./FWLIB/src/stm32f10x_tim.c **** 
1978:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
1979:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST8_PERIPH(TIMx));
1980:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_CHANNEL(TIM_Channel));
1981:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_CCX(TIM_CCx));
1982:./FWLIB/src/stm32f10x_tim.c **** 
1983:./FWLIB/src/stm32f10x_tim.c ****   tmp = CCER_CCE_Set << TIM_Channel;
1984:./FWLIB/src/stm32f10x_tim.c **** 
1985:./FWLIB/src/stm32f10x_tim.c ****   /* Reset the CCxE Bit */
1986:./FWLIB/src/stm32f10x_tim.c ****   TIMx->CCER &= (uint16_t)~ tmp;
1987:./FWLIB/src/stm32f10x_tim.c **** 
1988:./FWLIB/src/stm32f10x_tim.c ****   /* Set or reset the CCxE Bit */ 
1989:./FWLIB/src/stm32f10x_tim.c ****   TIMx->CCER |=  (uint16_t)(TIM_CCx << TIM_Channel);
1990:./FWLIB/src/stm32f10x_tim.c **** }
1991:./FWLIB/src/stm32f10x_tim.c **** 
1992:./FWLIB/src/stm32f10x_tim.c **** /**
1993:./FWLIB/src/stm32f10x_tim.c ****   * @brief  Enables or disables the TIM Capture Compare Channel xN.
1994:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1, 8, 15, 16 or 17 to select the TIM peripheral.
1995:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_Channel: specifies the TIM Channel
1996:./FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1997:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_Channel_1: TIM Channel 1
1998:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_Channel_2: TIM Channel 2
1999:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_Channel_3: TIM Channel 3
2000:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_CCxN: specifies the TIM Channel CCxNE bit new state.
2001:./FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be: TIM_CCxN_Enable or TIM_CCxN_Disable. 
2002:./FWLIB/src/stm32f10x_tim.c ****   * @retval None
2003:./FWLIB/src/stm32f10x_tim.c ****   */
2004:./FWLIB/src/stm32f10x_tim.c **** void TIM_CCxNCmd(TIM_TypeDef* TIMx, uint16_t TIM_Channel, uint16_t TIM_CCxN)
2005:./FWLIB/src/stm32f10x_tim.c **** {
2006:./FWLIB/src/stm32f10x_tim.c ****   uint16_t tmp = 0;
2007:./FWLIB/src/stm32f10x_tim.c **** 
2008:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
2009:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
2010:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_COMPLEMENTARY_CHANNEL(TIM_Channel));
2011:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_CCXN(TIM_CCxN));
2012:./FWLIB/src/stm32f10x_tim.c **** 
2013:./FWLIB/src/stm32f10x_tim.c ****   tmp = CCER_CCNE_Set << TIM_Channel;
2014:./FWLIB/src/stm32f10x_tim.c **** 
2015:./FWLIB/src/stm32f10x_tim.c ****   /* Reset the CCxNE Bit */
2016:./FWLIB/src/stm32f10x_tim.c ****   TIMx->CCER &= (uint16_t) ~tmp;
2017:./FWLIB/src/stm32f10x_tim.c **** 
2018:./FWLIB/src/stm32f10x_tim.c ****   /* Set or reset the CCxNE Bit */ 
2019:./FWLIB/src/stm32f10x_tim.c ****   TIMx->CCER |=  (uint16_t)(TIM_CCxN << TIM_Channel);
2020:./FWLIB/src/stm32f10x_tim.c **** }
2021:./FWLIB/src/stm32f10x_tim.c **** 
2022:./FWLIB/src/stm32f10x_tim.c **** /**
2023:./FWLIB/src/stm32f10x_tim.c ****   * @brief  Selects the TIM Output Compare Mode.
2024:./FWLIB/src/stm32f10x_tim.c ****   * @note   This function disables the selected channel before changing the Output
2025:./FWLIB/src/stm32f10x_tim.c ****   *         Compare Mode.
2026:./FWLIB/src/stm32f10x_tim.c ****   *         User has to enable this channel using TIM_CCxCmd and TIM_CCxNCmd functions.
2027:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 except 6 and 7 to select the TIM peripheral.
ARM GAS  /tmp/ccvVNijM.s 			page 37


2028:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_Channel: specifies the TIM Channel
2029:./FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
2030:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_Channel_1: TIM Channel 1
2031:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_Channel_2: TIM Channel 2
2032:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_Channel_3: TIM Channel 3
2033:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_Channel_4: TIM Channel 4
2034:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_OCMode: specifies the TIM Output Compare Mode.
2035:./FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
2036:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_OCMode_Timing
2037:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_OCMode_Active
2038:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_OCMode_Toggle
2039:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_OCMode_PWM1
2040:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_OCMode_PWM2
2041:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_ForcedAction_Active
2042:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_ForcedAction_InActive
2043:./FWLIB/src/stm32f10x_tim.c ****   * @retval None
2044:./FWLIB/src/stm32f10x_tim.c ****   */
2045:./FWLIB/src/stm32f10x_tim.c **** void TIM_SelectOCxM(TIM_TypeDef* TIMx, uint16_t TIM_Channel, uint16_t TIM_OCMode)
2046:./FWLIB/src/stm32f10x_tim.c **** {
2047:./FWLIB/src/stm32f10x_tim.c ****   uint32_t tmp = 0;
2048:./FWLIB/src/stm32f10x_tim.c ****   uint16_t tmp1 = 0;
2049:./FWLIB/src/stm32f10x_tim.c **** 
2050:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
2051:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST8_PERIPH(TIMx));
2052:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_CHANNEL(TIM_Channel));
2053:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OCM(TIM_OCMode));
2054:./FWLIB/src/stm32f10x_tim.c **** 
2055:./FWLIB/src/stm32f10x_tim.c ****   tmp = (uint32_t) TIMx;
2056:./FWLIB/src/stm32f10x_tim.c ****   tmp += CCMR_Offset;
2057:./FWLIB/src/stm32f10x_tim.c **** 
2058:./FWLIB/src/stm32f10x_tim.c ****   tmp1 = CCER_CCE_Set << (uint16_t)TIM_Channel;
2059:./FWLIB/src/stm32f10x_tim.c **** 
2060:./FWLIB/src/stm32f10x_tim.c ****   /* Disable the Channel: Reset the CCxE Bit */
2061:./FWLIB/src/stm32f10x_tim.c ****   TIMx->CCER &= (uint16_t) ~tmp1;
2062:./FWLIB/src/stm32f10x_tim.c **** 
2063:./FWLIB/src/stm32f10x_tim.c ****   if((TIM_Channel == TIM_Channel_1) ||(TIM_Channel == TIM_Channel_3))
2064:./FWLIB/src/stm32f10x_tim.c ****   {
2065:./FWLIB/src/stm32f10x_tim.c ****     tmp += (TIM_Channel>>1);
2066:./FWLIB/src/stm32f10x_tim.c **** 
2067:./FWLIB/src/stm32f10x_tim.c ****     /* Reset the OCxM bits in the CCMRx register */
2068:./FWLIB/src/stm32f10x_tim.c ****     *(__IO uint32_t *) tmp &= (uint32_t)~((uint32_t)TIM_CCMR1_OC1M);
2069:./FWLIB/src/stm32f10x_tim.c ****    
2070:./FWLIB/src/stm32f10x_tim.c ****     /* Configure the OCxM bits in the CCMRx register */
2071:./FWLIB/src/stm32f10x_tim.c ****     *(__IO uint32_t *) tmp |= TIM_OCMode;
2072:./FWLIB/src/stm32f10x_tim.c ****   }
2073:./FWLIB/src/stm32f10x_tim.c ****   else
2074:./FWLIB/src/stm32f10x_tim.c ****   {
2075:./FWLIB/src/stm32f10x_tim.c ****     tmp += (uint16_t)(TIM_Channel - (uint16_t)4)>> (uint16_t)1;
2076:./FWLIB/src/stm32f10x_tim.c **** 
2077:./FWLIB/src/stm32f10x_tim.c ****     /* Reset the OCxM bits in the CCMRx register */
2078:./FWLIB/src/stm32f10x_tim.c ****     *(__IO uint32_t *) tmp &= (uint32_t)~((uint32_t)TIM_CCMR1_OC2M);
2079:./FWLIB/src/stm32f10x_tim.c ****     
2080:./FWLIB/src/stm32f10x_tim.c ****     /* Configure the OCxM bits in the CCMRx register */
2081:./FWLIB/src/stm32f10x_tim.c ****     *(__IO uint32_t *) tmp |= (uint16_t)(TIM_OCMode << 8);
2082:./FWLIB/src/stm32f10x_tim.c ****   }
2083:./FWLIB/src/stm32f10x_tim.c **** }
2084:./FWLIB/src/stm32f10x_tim.c **** 
ARM GAS  /tmp/ccvVNijM.s 			page 38


2085:./FWLIB/src/stm32f10x_tim.c **** /**
2086:./FWLIB/src/stm32f10x_tim.c ****   * @brief  Enables or Disables the TIMx Update event.
2087:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 to select the TIM peripheral.
2088:./FWLIB/src/stm32f10x_tim.c ****   * @param  NewState: new state of the TIMx UDIS bit
2089:./FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be: ENABLE or DISABLE.
2090:./FWLIB/src/stm32f10x_tim.c ****   * @retval None
2091:./FWLIB/src/stm32f10x_tim.c ****   */
2092:./FWLIB/src/stm32f10x_tim.c **** void TIM_UpdateDisableConfig(TIM_TypeDef* TIMx, FunctionalState NewState)
2093:./FWLIB/src/stm32f10x_tim.c **** {
2094:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
2095:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
2096:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
2097:./FWLIB/src/stm32f10x_tim.c ****   if (NewState != DISABLE)
2098:./FWLIB/src/stm32f10x_tim.c ****   {
2099:./FWLIB/src/stm32f10x_tim.c ****     /* Set the Update Disable Bit */
2100:./FWLIB/src/stm32f10x_tim.c ****     TIMx->CR1 |= TIM_CR1_UDIS;
2101:./FWLIB/src/stm32f10x_tim.c ****   }
2102:./FWLIB/src/stm32f10x_tim.c ****   else
2103:./FWLIB/src/stm32f10x_tim.c ****   {
2104:./FWLIB/src/stm32f10x_tim.c ****     /* Reset the Update Disable Bit */
2105:./FWLIB/src/stm32f10x_tim.c ****     TIMx->CR1 &= (uint16_t)~((uint16_t)TIM_CR1_UDIS);
2106:./FWLIB/src/stm32f10x_tim.c ****   }
2107:./FWLIB/src/stm32f10x_tim.c **** }
2108:./FWLIB/src/stm32f10x_tim.c **** 
2109:./FWLIB/src/stm32f10x_tim.c **** /**
2110:./FWLIB/src/stm32f10x_tim.c ****   * @brief  Configures the TIMx Update Request Interrupt source.
2111:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 to select the TIM peripheral.
2112:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_UpdateSource: specifies the Update source.
2113:./FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
2114:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_UpdateSource_Regular: Source of update is the counter overflow/underflow
2115:./FWLIB/src/stm32f10x_tim.c ****                                        or the setting of UG bit, or an update generation
2116:./FWLIB/src/stm32f10x_tim.c ****                                        through the slave mode controller.
2117:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_UpdateSource_Global: Source of update is counter overflow/underflow.
2118:./FWLIB/src/stm32f10x_tim.c ****   * @retval None
2119:./FWLIB/src/stm32f10x_tim.c ****   */
2120:./FWLIB/src/stm32f10x_tim.c **** void TIM_UpdateRequestConfig(TIM_TypeDef* TIMx, uint16_t TIM_UpdateSource)
2121:./FWLIB/src/stm32f10x_tim.c **** {
2122:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
2123:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
2124:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_UPDATE_SOURCE(TIM_UpdateSource));
2125:./FWLIB/src/stm32f10x_tim.c ****   if (TIM_UpdateSource != TIM_UpdateSource_Global)
2126:./FWLIB/src/stm32f10x_tim.c ****   {
2127:./FWLIB/src/stm32f10x_tim.c ****     /* Set the URS Bit */
2128:./FWLIB/src/stm32f10x_tim.c ****     TIMx->CR1 |= TIM_CR1_URS;
2129:./FWLIB/src/stm32f10x_tim.c ****   }
2130:./FWLIB/src/stm32f10x_tim.c ****   else
2131:./FWLIB/src/stm32f10x_tim.c ****   {
2132:./FWLIB/src/stm32f10x_tim.c ****     /* Reset the URS Bit */
2133:./FWLIB/src/stm32f10x_tim.c ****     TIMx->CR1 &= (uint16_t)~((uint16_t)TIM_CR1_URS);
2134:./FWLIB/src/stm32f10x_tim.c ****   }
2135:./FWLIB/src/stm32f10x_tim.c **** }
2136:./FWLIB/src/stm32f10x_tim.c **** 
2137:./FWLIB/src/stm32f10x_tim.c **** /**
2138:./FWLIB/src/stm32f10x_tim.c ****   * @brief  Enables or disables the TIMx's Hall sensor interface.
2139:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2140:./FWLIB/src/stm32f10x_tim.c ****   * @param  NewState: new state of the TIMx Hall sensor interface.
2141:./FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be: ENABLE or DISABLE.
ARM GAS  /tmp/ccvVNijM.s 			page 39


2142:./FWLIB/src/stm32f10x_tim.c ****   * @retval None
2143:./FWLIB/src/stm32f10x_tim.c ****   */
2144:./FWLIB/src/stm32f10x_tim.c **** void TIM_SelectHallSensor(TIM_TypeDef* TIMx, FunctionalState NewState)
2145:./FWLIB/src/stm32f10x_tim.c **** {
2146:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
2147:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST6_PERIPH(TIMx));
2148:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
2149:./FWLIB/src/stm32f10x_tim.c ****   if (NewState != DISABLE)
2150:./FWLIB/src/stm32f10x_tim.c ****   {
2151:./FWLIB/src/stm32f10x_tim.c ****     /* Set the TI1S Bit */
2152:./FWLIB/src/stm32f10x_tim.c ****     TIMx->CR2 |= TIM_CR2_TI1S;
2153:./FWLIB/src/stm32f10x_tim.c ****   }
2154:./FWLIB/src/stm32f10x_tim.c ****   else
2155:./FWLIB/src/stm32f10x_tim.c ****   {
2156:./FWLIB/src/stm32f10x_tim.c ****     /* Reset the TI1S Bit */
2157:./FWLIB/src/stm32f10x_tim.c ****     TIMx->CR2 &= (uint16_t)~((uint16_t)TIM_CR2_TI1S);
2158:./FWLIB/src/stm32f10x_tim.c ****   }
2159:./FWLIB/src/stm32f10x_tim.c **** }
2160:./FWLIB/src/stm32f10x_tim.c **** 
2161:./FWLIB/src/stm32f10x_tim.c **** /**
2162:./FWLIB/src/stm32f10x_tim.c ****   * @brief  Selects the TIMx's One Pulse Mode.
2163:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 to select the TIM peripheral.
2164:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_OPMode: specifies the OPM Mode to be used.
2165:./FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
2166:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_OPMode_Single
2167:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_OPMode_Repetitive
2168:./FWLIB/src/stm32f10x_tim.c ****   * @retval None
2169:./FWLIB/src/stm32f10x_tim.c ****   */
2170:./FWLIB/src/stm32f10x_tim.c **** void TIM_SelectOnePulseMode(TIM_TypeDef* TIMx, uint16_t TIM_OPMode)
2171:./FWLIB/src/stm32f10x_tim.c **** {
2172:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
2173:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
2174:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OPM_MODE(TIM_OPMode));
2175:./FWLIB/src/stm32f10x_tim.c ****   /* Reset the OPM Bit */
2176:./FWLIB/src/stm32f10x_tim.c ****   TIMx->CR1 &= (uint16_t)~((uint16_t)TIM_CR1_OPM);
2177:./FWLIB/src/stm32f10x_tim.c ****   /* Configure the OPM Mode */
2178:./FWLIB/src/stm32f10x_tim.c ****   TIMx->CR1 |= TIM_OPMode;
2179:./FWLIB/src/stm32f10x_tim.c **** }
2180:./FWLIB/src/stm32f10x_tim.c **** 
2181:./FWLIB/src/stm32f10x_tim.c **** /**
2182:./FWLIB/src/stm32f10x_tim.c ****   * @brief  Selects the TIMx Trigger Output Mode.
2183:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 6, 7, 8, 9, 12 or 15 to select the TIM peripheral.
2184:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_TRGOSource: specifies the Trigger Output source.
2185:./FWLIB/src/stm32f10x_tim.c ****   *   This paramter can be one of the following values:
2186:./FWLIB/src/stm32f10x_tim.c ****   *
2187:./FWLIB/src/stm32f10x_tim.c ****   *  - For all TIMx
2188:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_TRGOSource_Reset:  The UG bit in the TIM_EGR register is used as the trigger outpu
2189:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_TRGOSource_Enable: The Counter Enable CEN is used as the trigger output (TRGO).
2190:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_TRGOSource_Update: The update event is selected as the trigger output (TRGO).
2191:./FWLIB/src/stm32f10x_tim.c ****   *
2192:./FWLIB/src/stm32f10x_tim.c ****   *  - For all TIMx except TIM6 and TIM7
2193:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_TRGOSource_OC1: The trigger output sends a positive pulse when the CC1IF flag
2194:./FWLIB/src/stm32f10x_tim.c ****   *                              is to be set, as soon as a capture or compare match occurs (TRGO).
2195:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_TRGOSource_OC1Ref: OC1REF signal is used as the trigger output (TRGO).
2196:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_TRGOSource_OC2Ref: OC2REF signal is used as the trigger output (TRGO).
2197:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_TRGOSource_OC3Ref: OC3REF signal is used as the trigger output (TRGO).
2198:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_TRGOSource_OC4Ref: OC4REF signal is used as the trigger output (TRGO).
ARM GAS  /tmp/ccvVNijM.s 			page 40


2199:./FWLIB/src/stm32f10x_tim.c ****   *
2200:./FWLIB/src/stm32f10x_tim.c ****   * @retval None
2201:./FWLIB/src/stm32f10x_tim.c ****   */
2202:./FWLIB/src/stm32f10x_tim.c **** void TIM_SelectOutputTrigger(TIM_TypeDef* TIMx, uint16_t TIM_TRGOSource)
2203:./FWLIB/src/stm32f10x_tim.c **** {
2204:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
2205:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST7_PERIPH(TIMx));
2206:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_TRGO_SOURCE(TIM_TRGOSource));
2207:./FWLIB/src/stm32f10x_tim.c ****   /* Reset the MMS Bits */
2208:./FWLIB/src/stm32f10x_tim.c ****   TIMx->CR2 &= (uint16_t)~((uint16_t)TIM_CR2_MMS);
2209:./FWLIB/src/stm32f10x_tim.c ****   /* Select the TRGO source */
2210:./FWLIB/src/stm32f10x_tim.c ****   TIMx->CR2 |=  TIM_TRGOSource;
2211:./FWLIB/src/stm32f10x_tim.c **** }
2212:./FWLIB/src/stm32f10x_tim.c **** 
2213:./FWLIB/src/stm32f10x_tim.c **** /**
2214:./FWLIB/src/stm32f10x_tim.c ****   * @brief  Selects the TIMx Slave Mode.
2215:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9, 12 or 15 to select the TIM peripheral.
2216:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_SlaveMode: specifies the Timer Slave Mode.
2217:./FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
2218:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_SlaveMode_Reset: Rising edge of the selected trigger signal (TRGI) re-initializes
2219:./FWLIB/src/stm32f10x_tim.c ****   *                               the counter and triggers an update of the registers.
2220:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_SlaveMode_Gated:     The counter clock is enabled when the trigger signal (TRGI) i
2221:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_SlaveMode_Trigger:   The counter starts at a rising edge of the trigger TRGI.
2222:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_SlaveMode_External1: Rising edges of the selected trigger (TRGI) clock the counter
2223:./FWLIB/src/stm32f10x_tim.c ****   * @retval None
2224:./FWLIB/src/stm32f10x_tim.c ****   */
2225:./FWLIB/src/stm32f10x_tim.c **** void TIM_SelectSlaveMode(TIM_TypeDef* TIMx, uint16_t TIM_SlaveMode)
2226:./FWLIB/src/stm32f10x_tim.c **** {
2227:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
2228:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST6_PERIPH(TIMx));
2229:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_SLAVE_MODE(TIM_SlaveMode));
2230:./FWLIB/src/stm32f10x_tim.c ****  /* Reset the SMS Bits */
2231:./FWLIB/src/stm32f10x_tim.c ****   TIMx->SMCR &= (uint16_t)~((uint16_t)TIM_SMCR_SMS);
2232:./FWLIB/src/stm32f10x_tim.c ****   /* Select the Slave Mode */
2233:./FWLIB/src/stm32f10x_tim.c ****   TIMx->SMCR |= TIM_SlaveMode;
2234:./FWLIB/src/stm32f10x_tim.c **** }
2235:./FWLIB/src/stm32f10x_tim.c **** 
2236:./FWLIB/src/stm32f10x_tim.c **** /**
2237:./FWLIB/src/stm32f10x_tim.c ****   * @brief  Sets or Resets the TIMx Master/Slave Mode.
2238:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9, 12 or 15 to select the TIM peripheral.
2239:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_MasterSlaveMode: specifies the Timer Master Slave Mode.
2240:./FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
2241:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_MasterSlaveMode_Enable: synchronization between the current timer
2242:./FWLIB/src/stm32f10x_tim.c ****   *                                      and its slaves (through TRGO).
2243:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_MasterSlaveMode_Disable: No action
2244:./FWLIB/src/stm32f10x_tim.c ****   * @retval None
2245:./FWLIB/src/stm32f10x_tim.c ****   */
2246:./FWLIB/src/stm32f10x_tim.c **** void TIM_SelectMasterSlaveMode(TIM_TypeDef* TIMx, uint16_t TIM_MasterSlaveMode)
2247:./FWLIB/src/stm32f10x_tim.c **** {
2248:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
2249:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST6_PERIPH(TIMx));
2250:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_MSM_STATE(TIM_MasterSlaveMode));
2251:./FWLIB/src/stm32f10x_tim.c ****   /* Reset the MSM Bit */
2252:./FWLIB/src/stm32f10x_tim.c ****   TIMx->SMCR &= (uint16_t)~((uint16_t)TIM_SMCR_MSM);
2253:./FWLIB/src/stm32f10x_tim.c ****   
2254:./FWLIB/src/stm32f10x_tim.c ****   /* Set or Reset the MSM Bit */
2255:./FWLIB/src/stm32f10x_tim.c ****   TIMx->SMCR |= TIM_MasterSlaveMode;
ARM GAS  /tmp/ccvVNijM.s 			page 41


2256:./FWLIB/src/stm32f10x_tim.c **** }
2257:./FWLIB/src/stm32f10x_tim.c **** 
2258:./FWLIB/src/stm32f10x_tim.c **** /**
2259:./FWLIB/src/stm32f10x_tim.c ****   * @brief  Sets the TIMx Counter Register value
2260:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 to select the TIM peripheral.
2261:./FWLIB/src/stm32f10x_tim.c ****   * @param  Counter: specifies the Counter register new value.
2262:./FWLIB/src/stm32f10x_tim.c ****   * @retval None
2263:./FWLIB/src/stm32f10x_tim.c ****   */
2264:./FWLIB/src/stm32f10x_tim.c **** void TIM_SetCounter(TIM_TypeDef* TIMx, uint16_t Counter)
2265:./FWLIB/src/stm32f10x_tim.c **** {
2266:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
2267:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
2268:./FWLIB/src/stm32f10x_tim.c ****   /* Set the Counter Register value */
2269:./FWLIB/src/stm32f10x_tim.c ****   TIMx->CNT = Counter;
2270:./FWLIB/src/stm32f10x_tim.c **** }
2271:./FWLIB/src/stm32f10x_tim.c **** 
2272:./FWLIB/src/stm32f10x_tim.c **** /**
2273:./FWLIB/src/stm32f10x_tim.c ****   * @brief  Sets the TIMx Autoreload Register value
2274:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 to select the TIM peripheral.
2275:./FWLIB/src/stm32f10x_tim.c ****   * @param  Autoreload: specifies the Autoreload register new value.
2276:./FWLIB/src/stm32f10x_tim.c ****   * @retval None
2277:./FWLIB/src/stm32f10x_tim.c ****   */
2278:./FWLIB/src/stm32f10x_tim.c **** void TIM_SetAutoreload(TIM_TypeDef* TIMx, uint16_t Autoreload)
2279:./FWLIB/src/stm32f10x_tim.c **** {
2280:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
2281:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
2282:./FWLIB/src/stm32f10x_tim.c ****   /* Set the Autoreload Register value */
2283:./FWLIB/src/stm32f10x_tim.c ****   TIMx->ARR = Autoreload;
2284:./FWLIB/src/stm32f10x_tim.c **** }
2285:./FWLIB/src/stm32f10x_tim.c **** 
2286:./FWLIB/src/stm32f10x_tim.c **** /**
2287:./FWLIB/src/stm32f10x_tim.c ****   * @brief  Sets the TIMx Capture Compare1 Register value
2288:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 except 6 and 7 to select the TIM peripheral.
2289:./FWLIB/src/stm32f10x_tim.c ****   * @param  Compare1: specifies the Capture Compare1 register new value.
2290:./FWLIB/src/stm32f10x_tim.c ****   * @retval None
2291:./FWLIB/src/stm32f10x_tim.c ****   */
2292:./FWLIB/src/stm32f10x_tim.c **** void TIM_SetCompare1(TIM_TypeDef* TIMx, uint16_t Compare1)
2293:./FWLIB/src/stm32f10x_tim.c **** {
2294:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
2295:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST8_PERIPH(TIMx));
2296:./FWLIB/src/stm32f10x_tim.c ****   /* Set the Capture Compare1 Register value */
2297:./FWLIB/src/stm32f10x_tim.c ****   TIMx->CCR1 = Compare1;
2298:./FWLIB/src/stm32f10x_tim.c **** }
2299:./FWLIB/src/stm32f10x_tim.c **** 
2300:./FWLIB/src/stm32f10x_tim.c **** /**
2301:./FWLIB/src/stm32f10x_tim.c ****   * @brief  Sets the TIMx Capture Compare2 Register value
2302:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9, 12 or 15 to select the TIM peripheral.
2303:./FWLIB/src/stm32f10x_tim.c ****   * @param  Compare2: specifies the Capture Compare2 register new value.
2304:./FWLIB/src/stm32f10x_tim.c ****   * @retval None
2305:./FWLIB/src/stm32f10x_tim.c ****   */
2306:./FWLIB/src/stm32f10x_tim.c **** void TIM_SetCompare2(TIM_TypeDef* TIMx, uint16_t Compare2)
2307:./FWLIB/src/stm32f10x_tim.c **** {
2308:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
2309:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST6_PERIPH(TIMx));
2310:./FWLIB/src/stm32f10x_tim.c ****   /* Set the Capture Compare2 Register value */
2311:./FWLIB/src/stm32f10x_tim.c ****   TIMx->CCR2 = Compare2;
2312:./FWLIB/src/stm32f10x_tim.c **** }
ARM GAS  /tmp/ccvVNijM.s 			page 42


2313:./FWLIB/src/stm32f10x_tim.c **** 
2314:./FWLIB/src/stm32f10x_tim.c **** /**
2315:./FWLIB/src/stm32f10x_tim.c ****   * @brief  Sets the TIMx Capture Compare3 Register value
2316:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2317:./FWLIB/src/stm32f10x_tim.c ****   * @param  Compare3: specifies the Capture Compare3 register new value.
2318:./FWLIB/src/stm32f10x_tim.c ****   * @retval None
2319:./FWLIB/src/stm32f10x_tim.c ****   */
2320:./FWLIB/src/stm32f10x_tim.c **** void TIM_SetCompare3(TIM_TypeDef* TIMx, uint16_t Compare3)
2321:./FWLIB/src/stm32f10x_tim.c **** {
2322:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
2323:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
2324:./FWLIB/src/stm32f10x_tim.c ****   /* Set the Capture Compare3 Register value */
2325:./FWLIB/src/stm32f10x_tim.c ****   TIMx->CCR3 = Compare3;
2326:./FWLIB/src/stm32f10x_tim.c **** }
2327:./FWLIB/src/stm32f10x_tim.c **** 
2328:./FWLIB/src/stm32f10x_tim.c **** /**
2329:./FWLIB/src/stm32f10x_tim.c ****   * @brief  Sets the TIMx Capture Compare4 Register value
2330:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2331:./FWLIB/src/stm32f10x_tim.c ****   * @param  Compare4: specifies the Capture Compare4 register new value.
2332:./FWLIB/src/stm32f10x_tim.c ****   * @retval None
2333:./FWLIB/src/stm32f10x_tim.c ****   */
2334:./FWLIB/src/stm32f10x_tim.c **** void TIM_SetCompare4(TIM_TypeDef* TIMx, uint16_t Compare4)
2335:./FWLIB/src/stm32f10x_tim.c **** {
2336:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
2337:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
2338:./FWLIB/src/stm32f10x_tim.c ****   /* Set the Capture Compare4 Register value */
2339:./FWLIB/src/stm32f10x_tim.c ****   TIMx->CCR4 = Compare4;
2340:./FWLIB/src/stm32f10x_tim.c **** }
2341:./FWLIB/src/stm32f10x_tim.c **** 
2342:./FWLIB/src/stm32f10x_tim.c **** /**
2343:./FWLIB/src/stm32f10x_tim.c ****   * @brief  Sets the TIMx Input Capture 1 prescaler.
2344:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 except 6 and 7 to select the TIM peripheral.
2345:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_ICPSC: specifies the Input Capture1 prescaler new value.
2346:./FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
2347:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_ICPSC_DIV1: no prescaler
2348:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_ICPSC_DIV2: capture is done once every 2 events
2349:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_ICPSC_DIV4: capture is done once every 4 events
2350:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_ICPSC_DIV8: capture is done once every 8 events
2351:./FWLIB/src/stm32f10x_tim.c ****   * @retval None
2352:./FWLIB/src/stm32f10x_tim.c ****   */
2353:./FWLIB/src/stm32f10x_tim.c **** void TIM_SetIC1Prescaler(TIM_TypeDef* TIMx, uint16_t TIM_ICPSC)
2354:./FWLIB/src/stm32f10x_tim.c **** {
2355:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
2356:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST8_PERIPH(TIMx));
2357:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_IC_PRESCALER(TIM_ICPSC));
2358:./FWLIB/src/stm32f10x_tim.c ****   /* Reset the IC1PSC Bits */
2359:./FWLIB/src/stm32f10x_tim.c ****   TIMx->CCMR1 &= (uint16_t)~((uint16_t)TIM_CCMR1_IC1PSC);
2360:./FWLIB/src/stm32f10x_tim.c ****   /* Set the IC1PSC value */
2361:./FWLIB/src/stm32f10x_tim.c ****   TIMx->CCMR1 |= TIM_ICPSC;
2362:./FWLIB/src/stm32f10x_tim.c **** }
2363:./FWLIB/src/stm32f10x_tim.c **** 
2364:./FWLIB/src/stm32f10x_tim.c **** /**
2365:./FWLIB/src/stm32f10x_tim.c ****   * @brief  Sets the TIMx Input Capture 2 prescaler.
2366:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9, 12 or 15 to select the TIM peripheral.
2367:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_ICPSC: specifies the Input Capture2 prescaler new value.
2368:./FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
2369:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_ICPSC_DIV1: no prescaler
ARM GAS  /tmp/ccvVNijM.s 			page 43


2370:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_ICPSC_DIV2: capture is done once every 2 events
2371:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_ICPSC_DIV4: capture is done once every 4 events
2372:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_ICPSC_DIV8: capture is done once every 8 events
2373:./FWLIB/src/stm32f10x_tim.c ****   * @retval None
2374:./FWLIB/src/stm32f10x_tim.c ****   */
2375:./FWLIB/src/stm32f10x_tim.c **** void TIM_SetIC2Prescaler(TIM_TypeDef* TIMx, uint16_t TIM_ICPSC)
2376:./FWLIB/src/stm32f10x_tim.c **** {
2377:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
2378:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST6_PERIPH(TIMx));
2379:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_IC_PRESCALER(TIM_ICPSC));
2380:./FWLIB/src/stm32f10x_tim.c ****   /* Reset the IC2PSC Bits */
2381:./FWLIB/src/stm32f10x_tim.c ****   TIMx->CCMR1 &= (uint16_t)~((uint16_t)TIM_CCMR1_IC2PSC);
2382:./FWLIB/src/stm32f10x_tim.c ****   /* Set the IC2PSC value */
2383:./FWLIB/src/stm32f10x_tim.c ****   TIMx->CCMR1 |= (uint16_t)(TIM_ICPSC << 8);
2384:./FWLIB/src/stm32f10x_tim.c **** }
2385:./FWLIB/src/stm32f10x_tim.c **** 
2386:./FWLIB/src/stm32f10x_tim.c **** /**
2387:./FWLIB/src/stm32f10x_tim.c ****   * @brief  Sets the TIMx Input Capture 3 prescaler.
2388:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2389:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_ICPSC: specifies the Input Capture3 prescaler new value.
2390:./FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
2391:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_ICPSC_DIV1: no prescaler
2392:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_ICPSC_DIV2: capture is done once every 2 events
2393:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_ICPSC_DIV4: capture is done once every 4 events
2394:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_ICPSC_DIV8: capture is done once every 8 events
2395:./FWLIB/src/stm32f10x_tim.c ****   * @retval None
2396:./FWLIB/src/stm32f10x_tim.c ****   */
2397:./FWLIB/src/stm32f10x_tim.c **** void TIM_SetIC3Prescaler(TIM_TypeDef* TIMx, uint16_t TIM_ICPSC)
2398:./FWLIB/src/stm32f10x_tim.c **** {
2399:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
2400:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
2401:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_IC_PRESCALER(TIM_ICPSC));
2402:./FWLIB/src/stm32f10x_tim.c ****   /* Reset the IC3PSC Bits */
2403:./FWLIB/src/stm32f10x_tim.c ****   TIMx->CCMR2 &= (uint16_t)~((uint16_t)TIM_CCMR2_IC3PSC);
2404:./FWLIB/src/stm32f10x_tim.c ****   /* Set the IC3PSC value */
2405:./FWLIB/src/stm32f10x_tim.c ****   TIMx->CCMR2 |= TIM_ICPSC;
2406:./FWLIB/src/stm32f10x_tim.c **** }
2407:./FWLIB/src/stm32f10x_tim.c **** 
2408:./FWLIB/src/stm32f10x_tim.c **** /**
2409:./FWLIB/src/stm32f10x_tim.c ****   * @brief  Sets the TIMx Input Capture 4 prescaler.
2410:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2411:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_ICPSC: specifies the Input Capture4 prescaler new value.
2412:./FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
2413:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_ICPSC_DIV1: no prescaler
2414:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_ICPSC_DIV2: capture is done once every 2 events
2415:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_ICPSC_DIV4: capture is done once every 4 events
2416:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_ICPSC_DIV8: capture is done once every 8 events
2417:./FWLIB/src/stm32f10x_tim.c ****   * @retval None
2418:./FWLIB/src/stm32f10x_tim.c ****   */
2419:./FWLIB/src/stm32f10x_tim.c **** void TIM_SetIC4Prescaler(TIM_TypeDef* TIMx, uint16_t TIM_ICPSC)
2420:./FWLIB/src/stm32f10x_tim.c **** {  
2421:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
2422:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
2423:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_IC_PRESCALER(TIM_ICPSC));
2424:./FWLIB/src/stm32f10x_tim.c ****   /* Reset the IC4PSC Bits */
2425:./FWLIB/src/stm32f10x_tim.c ****   TIMx->CCMR2 &= (uint16_t)~((uint16_t)TIM_CCMR2_IC4PSC);
2426:./FWLIB/src/stm32f10x_tim.c ****   /* Set the IC4PSC value */
ARM GAS  /tmp/ccvVNijM.s 			page 44


2427:./FWLIB/src/stm32f10x_tim.c ****   TIMx->CCMR2 |= (uint16_t)(TIM_ICPSC << 8);
2428:./FWLIB/src/stm32f10x_tim.c **** }
2429:./FWLIB/src/stm32f10x_tim.c **** 
2430:./FWLIB/src/stm32f10x_tim.c **** /**
2431:./FWLIB/src/stm32f10x_tim.c ****   * @brief  Sets the TIMx Clock Division value.
2432:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1 to 17 except 6 and 7 to select 
2433:./FWLIB/src/stm32f10x_tim.c ****   *   the TIM peripheral.
2434:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_CKD: specifies the clock division value.
2435:./FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be one of the following value:
2436:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_CKD_DIV1: TDTS = Tck_tim
2437:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_CKD_DIV2: TDTS = 2*Tck_tim
2438:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_CKD_DIV4: TDTS = 4*Tck_tim
2439:./FWLIB/src/stm32f10x_tim.c ****   * @retval None
2440:./FWLIB/src/stm32f10x_tim.c ****   */
2441:./FWLIB/src/stm32f10x_tim.c **** void TIM_SetClockDivision(TIM_TypeDef* TIMx, uint16_t TIM_CKD)
2442:./FWLIB/src/stm32f10x_tim.c **** {
2443:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
2444:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST8_PERIPH(TIMx));
2445:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_CKD_DIV(TIM_CKD));
2446:./FWLIB/src/stm32f10x_tim.c ****   /* Reset the CKD Bits */
2447:./FWLIB/src/stm32f10x_tim.c ****   TIMx->CR1 &= (uint16_t)~((uint16_t)TIM_CR1_CKD);
2448:./FWLIB/src/stm32f10x_tim.c ****   /* Set the CKD value */
2449:./FWLIB/src/stm32f10x_tim.c ****   TIMx->CR1 |= TIM_CKD;
2450:./FWLIB/src/stm32f10x_tim.c **** }
2451:./FWLIB/src/stm32f10x_tim.c **** 
2452:./FWLIB/src/stm32f10x_tim.c **** /**
2453:./FWLIB/src/stm32f10x_tim.c ****   * @brief  Gets the TIMx Input Capture 1 value.
2454:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 except 6 and 7 to select the TIM peripheral.
2455:./FWLIB/src/stm32f10x_tim.c ****   * @retval Capture Compare 1 Register value.
2456:./FWLIB/src/stm32f10x_tim.c ****   */
2457:./FWLIB/src/stm32f10x_tim.c **** uint16_t TIM_GetCapture1(TIM_TypeDef* TIMx)
2458:./FWLIB/src/stm32f10x_tim.c **** {
2459:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
2460:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST8_PERIPH(TIMx));
2461:./FWLIB/src/stm32f10x_tim.c ****   /* Get the Capture 1 Register value */
2462:./FWLIB/src/stm32f10x_tim.c ****   return TIMx->CCR1;
2463:./FWLIB/src/stm32f10x_tim.c **** }
2464:./FWLIB/src/stm32f10x_tim.c **** 
2465:./FWLIB/src/stm32f10x_tim.c **** /**
2466:./FWLIB/src/stm32f10x_tim.c ****   * @brief  Gets the TIMx Input Capture 2 value.
2467:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9, 12 or 15 to select the TIM peripheral.
2468:./FWLIB/src/stm32f10x_tim.c ****   * @retval Capture Compare 2 Register value.
2469:./FWLIB/src/stm32f10x_tim.c ****   */
2470:./FWLIB/src/stm32f10x_tim.c **** uint16_t TIM_GetCapture2(TIM_TypeDef* TIMx)
2471:./FWLIB/src/stm32f10x_tim.c **** {
2472:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
2473:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST6_PERIPH(TIMx));
2474:./FWLIB/src/stm32f10x_tim.c ****   /* Get the Capture 2 Register value */
2475:./FWLIB/src/stm32f10x_tim.c ****   return TIMx->CCR2;
2476:./FWLIB/src/stm32f10x_tim.c **** }
2477:./FWLIB/src/stm32f10x_tim.c **** 
2478:./FWLIB/src/stm32f10x_tim.c **** /**
2479:./FWLIB/src/stm32f10x_tim.c ****   * @brief  Gets the TIMx Input Capture 3 value.
2480:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2481:./FWLIB/src/stm32f10x_tim.c ****   * @retval Capture Compare 3 Register value.
2482:./FWLIB/src/stm32f10x_tim.c ****   */
2483:./FWLIB/src/stm32f10x_tim.c **** uint16_t TIM_GetCapture3(TIM_TypeDef* TIMx)
ARM GAS  /tmp/ccvVNijM.s 			page 45


2484:./FWLIB/src/stm32f10x_tim.c **** {
2485:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
2486:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx)); 
2487:./FWLIB/src/stm32f10x_tim.c ****   /* Get the Capture 3 Register value */
2488:./FWLIB/src/stm32f10x_tim.c ****   return TIMx->CCR3;
2489:./FWLIB/src/stm32f10x_tim.c **** }
2490:./FWLIB/src/stm32f10x_tim.c **** 
2491:./FWLIB/src/stm32f10x_tim.c **** /**
2492:./FWLIB/src/stm32f10x_tim.c ****   * @brief  Gets the TIMx Input Capture 4 value.
2493:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2494:./FWLIB/src/stm32f10x_tim.c ****   * @retval Capture Compare 4 Register value.
2495:./FWLIB/src/stm32f10x_tim.c ****   */
2496:./FWLIB/src/stm32f10x_tim.c **** uint16_t TIM_GetCapture4(TIM_TypeDef* TIMx)
2497:./FWLIB/src/stm32f10x_tim.c **** {
2498:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
2499:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
2500:./FWLIB/src/stm32f10x_tim.c ****   /* Get the Capture 4 Register value */
2501:./FWLIB/src/stm32f10x_tim.c ****   return TIMx->CCR4;
2502:./FWLIB/src/stm32f10x_tim.c **** }
2503:./FWLIB/src/stm32f10x_tim.c **** 
2504:./FWLIB/src/stm32f10x_tim.c **** /**
2505:./FWLIB/src/stm32f10x_tim.c ****   * @brief  Gets the TIMx Counter value.
2506:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 to select the TIM peripheral.
2507:./FWLIB/src/stm32f10x_tim.c ****   * @retval Counter Register value.
2508:./FWLIB/src/stm32f10x_tim.c ****   */
2509:./FWLIB/src/stm32f10x_tim.c **** uint16_t TIM_GetCounter(TIM_TypeDef* TIMx)
2510:./FWLIB/src/stm32f10x_tim.c **** {
2511:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
2512:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
2513:./FWLIB/src/stm32f10x_tim.c ****   /* Get the Counter Register value */
2514:./FWLIB/src/stm32f10x_tim.c ****   return TIMx->CNT;
2515:./FWLIB/src/stm32f10x_tim.c **** }
2516:./FWLIB/src/stm32f10x_tim.c **** 
2517:./FWLIB/src/stm32f10x_tim.c **** /**
2518:./FWLIB/src/stm32f10x_tim.c ****   * @brief  Gets the TIMx Prescaler value.
2519:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 to select the TIM peripheral.
2520:./FWLIB/src/stm32f10x_tim.c ****   * @retval Prescaler Register value.
2521:./FWLIB/src/stm32f10x_tim.c ****   */
2522:./FWLIB/src/stm32f10x_tim.c **** uint16_t TIM_GetPrescaler(TIM_TypeDef* TIMx)
2523:./FWLIB/src/stm32f10x_tim.c **** {
2524:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
2525:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
2526:./FWLIB/src/stm32f10x_tim.c ****   /* Get the Prescaler Register value */
2527:./FWLIB/src/stm32f10x_tim.c ****   return TIMx->PSC;
2528:./FWLIB/src/stm32f10x_tim.c **** }
2529:./FWLIB/src/stm32f10x_tim.c **** 
2530:./FWLIB/src/stm32f10x_tim.c **** /**
2531:./FWLIB/src/stm32f10x_tim.c ****   * @brief  Checks whether the specified TIM flag is set or not.
2532:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 to select the TIM peripheral.
2533:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_FLAG: specifies the flag to check.
2534:./FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
2535:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_Update: TIM update Flag
2536:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_CC1: TIM Capture Compare 1 Flag
2537:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_CC2: TIM Capture Compare 2 Flag
2538:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_CC3: TIM Capture Compare 3 Flag
2539:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_CC4: TIM Capture Compare 4 Flag
2540:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_COM: TIM Commutation Flag
ARM GAS  /tmp/ccvVNijM.s 			page 46


2541:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_Trigger: TIM Trigger Flag
2542:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_Break: TIM Break Flag
2543:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_CC1OF: TIM Capture Compare 1 overcapture Flag
2544:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_CC2OF: TIM Capture Compare 2 overcapture Flag
2545:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_CC3OF: TIM Capture Compare 3 overcapture Flag
2546:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_CC4OF: TIM Capture Compare 4 overcapture Flag
2547:./FWLIB/src/stm32f10x_tim.c ****   * @note
2548:./FWLIB/src/stm32f10x_tim.c ****   *   - TIM6 and TIM7 can have only one update flag. 
2549:./FWLIB/src/stm32f10x_tim.c ****   *   - TIM9, TIM12 and TIM15 can have only TIM_FLAG_Update, TIM_FLAG_CC1,
2550:./FWLIB/src/stm32f10x_tim.c ****   *      TIM_FLAG_CC2 or TIM_FLAG_Trigger. 
2551:./FWLIB/src/stm32f10x_tim.c ****   *   - TIM10, TIM11, TIM13, TIM14, TIM16 and TIM17 can have TIM_FLAG_Update or TIM_FLAG_CC1.   
2552:./FWLIB/src/stm32f10x_tim.c ****   *   - TIM_FLAG_Break is used only with TIM1, TIM8 and TIM15. 
2553:./FWLIB/src/stm32f10x_tim.c ****   *   - TIM_FLAG_COM is used only with TIM1, TIM8, TIM15, TIM16 and TIM17.    
2554:./FWLIB/src/stm32f10x_tim.c ****   * @retval The new state of TIM_FLAG (SET or RESET).
2555:./FWLIB/src/stm32f10x_tim.c ****   */
2556:./FWLIB/src/stm32f10x_tim.c **** FlagStatus TIM_GetFlagStatus(TIM_TypeDef* TIMx, uint16_t TIM_FLAG)
2557:./FWLIB/src/stm32f10x_tim.c **** { 
2558:./FWLIB/src/stm32f10x_tim.c ****   ITStatus bitstatus = RESET;  
2559:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
2560:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
2561:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_GET_FLAG(TIM_FLAG));
2562:./FWLIB/src/stm32f10x_tim.c ****   
2563:./FWLIB/src/stm32f10x_tim.c ****   if ((TIMx->SR & TIM_FLAG) != (uint16_t)RESET)
2564:./FWLIB/src/stm32f10x_tim.c ****   {
2565:./FWLIB/src/stm32f10x_tim.c ****     bitstatus = SET;
2566:./FWLIB/src/stm32f10x_tim.c ****   }
2567:./FWLIB/src/stm32f10x_tim.c ****   else
2568:./FWLIB/src/stm32f10x_tim.c ****   {
2569:./FWLIB/src/stm32f10x_tim.c ****     bitstatus = RESET;
2570:./FWLIB/src/stm32f10x_tim.c ****   }
2571:./FWLIB/src/stm32f10x_tim.c ****   return bitstatus;
2572:./FWLIB/src/stm32f10x_tim.c **** }
2573:./FWLIB/src/stm32f10x_tim.c **** 
2574:./FWLIB/src/stm32f10x_tim.c **** /**
2575:./FWLIB/src/stm32f10x_tim.c ****   * @brief  Clears the TIMx's pending flags.
2576:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 to select the TIM peripheral.
2577:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_FLAG: specifies the flag bit to clear.
2578:./FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be any combination of the following values:
2579:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_Update: TIM update Flag
2580:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_CC1: TIM Capture Compare 1 Flag
2581:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_CC2: TIM Capture Compare 2 Flag
2582:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_CC3: TIM Capture Compare 3 Flag
2583:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_CC4: TIM Capture Compare 4 Flag
2584:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_COM: TIM Commutation Flag
2585:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_Trigger: TIM Trigger Flag
2586:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_Break: TIM Break Flag
2587:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_CC1OF: TIM Capture Compare 1 overcapture Flag
2588:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_CC2OF: TIM Capture Compare 2 overcapture Flag
2589:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_CC3OF: TIM Capture Compare 3 overcapture Flag
2590:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_CC4OF: TIM Capture Compare 4 overcapture Flag
2591:./FWLIB/src/stm32f10x_tim.c ****   * @note
2592:./FWLIB/src/stm32f10x_tim.c ****   *   - TIM6 and TIM7 can have only one update flag. 
2593:./FWLIB/src/stm32f10x_tim.c ****   *   - TIM9, TIM12 and TIM15 can have only TIM_FLAG_Update, TIM_FLAG_CC1,
2594:./FWLIB/src/stm32f10x_tim.c ****   *      TIM_FLAG_CC2 or TIM_FLAG_Trigger. 
2595:./FWLIB/src/stm32f10x_tim.c ****   *   - TIM10, TIM11, TIM13, TIM14, TIM16 and TIM17 can have TIM_FLAG_Update or TIM_FLAG_CC1.   
2596:./FWLIB/src/stm32f10x_tim.c ****   *   - TIM_FLAG_Break is used only with TIM1, TIM8 and TIM15. 
2597:./FWLIB/src/stm32f10x_tim.c ****   *   - TIM_FLAG_COM is used only with TIM1, TIM8, TIM15, TIM16 and TIM17.   
ARM GAS  /tmp/ccvVNijM.s 			page 47


2598:./FWLIB/src/stm32f10x_tim.c ****   * @retval None
2599:./FWLIB/src/stm32f10x_tim.c ****   */
2600:./FWLIB/src/stm32f10x_tim.c **** void TIM_ClearFlag(TIM_TypeDef* TIMx, uint16_t TIM_FLAG)
2601:./FWLIB/src/stm32f10x_tim.c **** {  
2602:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
2603:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
2604:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_CLEAR_FLAG(TIM_FLAG));
2605:./FWLIB/src/stm32f10x_tim.c ****    
2606:./FWLIB/src/stm32f10x_tim.c ****   /* Clear the flags */
2607:./FWLIB/src/stm32f10x_tim.c ****   TIMx->SR = (uint16_t)~TIM_FLAG;
2608:./FWLIB/src/stm32f10x_tim.c **** }
2609:./FWLIB/src/stm32f10x_tim.c **** 
2610:./FWLIB/src/stm32f10x_tim.c **** /**
2611:./FWLIB/src/stm32f10x_tim.c ****   * @brief  Checks whether the TIM interrupt has occurred or not.
2612:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 to select the TIM peripheral.
2613:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_IT: specifies the TIM interrupt source to check.
2614:./FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
2615:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_IT_Update: TIM update Interrupt source
2616:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_IT_CC1: TIM Capture Compare 1 Interrupt source
2617:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_IT_CC2: TIM Capture Compare 2 Interrupt source
2618:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_IT_CC3: TIM Capture Compare 3 Interrupt source
2619:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_IT_CC4: TIM Capture Compare 4 Interrupt source
2620:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_IT_COM: TIM Commutation Interrupt source
2621:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_IT_Trigger: TIM Trigger Interrupt source
2622:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_IT_Break: TIM Break Interrupt source
2623:./FWLIB/src/stm32f10x_tim.c ****   * @note
2624:./FWLIB/src/stm32f10x_tim.c ****   *   - TIM6 and TIM7 can generate only an update interrupt.
2625:./FWLIB/src/stm32f10x_tim.c ****   *   - TIM9, TIM12 and TIM15 can have only TIM_IT_Update, TIM_IT_CC1,
2626:./FWLIB/src/stm32f10x_tim.c ****   *      TIM_IT_CC2 or TIM_IT_Trigger. 
2627:./FWLIB/src/stm32f10x_tim.c ****   *   - TIM10, TIM11, TIM13, TIM14, TIM16 and TIM17 can have TIM_IT_Update or TIM_IT_CC1.   
2628:./FWLIB/src/stm32f10x_tim.c ****   *   - TIM_IT_Break is used only with TIM1, TIM8 and TIM15. 
2629:./FWLIB/src/stm32f10x_tim.c ****   *   - TIM_IT_COM is used only with TIM1, TIM8, TIM15, TIM16 and TIM17.  
2630:./FWLIB/src/stm32f10x_tim.c ****   * @retval The new state of the TIM_IT(SET or RESET).
2631:./FWLIB/src/stm32f10x_tim.c ****   */
2632:./FWLIB/src/stm32f10x_tim.c **** ITStatus TIM_GetITStatus(TIM_TypeDef* TIMx, uint16_t TIM_IT)
2633:./FWLIB/src/stm32f10x_tim.c **** {
2634:./FWLIB/src/stm32f10x_tim.c ****   ITStatus bitstatus = RESET;  
2635:./FWLIB/src/stm32f10x_tim.c ****   uint16_t itstatus = 0x0, itenable = 0x0;
2636:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
2637:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
2638:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_GET_IT(TIM_IT));
2639:./FWLIB/src/stm32f10x_tim.c ****    
2640:./FWLIB/src/stm32f10x_tim.c ****   itstatus = TIMx->SR & TIM_IT;
2641:./FWLIB/src/stm32f10x_tim.c ****   
2642:./FWLIB/src/stm32f10x_tim.c ****   itenable = TIMx->DIER & TIM_IT;
2643:./FWLIB/src/stm32f10x_tim.c ****   if ((itstatus != (uint16_t)RESET) && (itenable != (uint16_t)RESET))
2644:./FWLIB/src/stm32f10x_tim.c ****   {
2645:./FWLIB/src/stm32f10x_tim.c ****     bitstatus = SET;
2646:./FWLIB/src/stm32f10x_tim.c ****   }
2647:./FWLIB/src/stm32f10x_tim.c ****   else
2648:./FWLIB/src/stm32f10x_tim.c ****   {
2649:./FWLIB/src/stm32f10x_tim.c ****     bitstatus = RESET;
2650:./FWLIB/src/stm32f10x_tim.c ****   }
2651:./FWLIB/src/stm32f10x_tim.c ****   return bitstatus;
2652:./FWLIB/src/stm32f10x_tim.c **** }
2653:./FWLIB/src/stm32f10x_tim.c **** 
2654:./FWLIB/src/stm32f10x_tim.c **** /**
ARM GAS  /tmp/ccvVNijM.s 			page 48


2655:./FWLIB/src/stm32f10x_tim.c ****   * @brief  Clears the TIMx's interrupt pending bits.
2656:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 to select the TIM peripheral.
2657:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_IT: specifies the pending bit to clear.
2658:./FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be any combination of the following values:
2659:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_IT_Update: TIM1 update Interrupt source
2660:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_IT_CC1: TIM Capture Compare 1 Interrupt source
2661:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_IT_CC2: TIM Capture Compare 2 Interrupt source
2662:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_IT_CC3: TIM Capture Compare 3 Interrupt source
2663:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_IT_CC4: TIM Capture Compare 4 Interrupt source
2664:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_IT_COM: TIM Commutation Interrupt source
2665:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_IT_Trigger: TIM Trigger Interrupt source
2666:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_IT_Break: TIM Break Interrupt source
2667:./FWLIB/src/stm32f10x_tim.c ****   * @note
2668:./FWLIB/src/stm32f10x_tim.c ****   *   - TIM6 and TIM7 can generate only an update interrupt.
2669:./FWLIB/src/stm32f10x_tim.c ****   *   - TIM9, TIM12 and TIM15 can have only TIM_IT_Update, TIM_IT_CC1,
2670:./FWLIB/src/stm32f10x_tim.c ****   *      TIM_IT_CC2 or TIM_IT_Trigger. 
2671:./FWLIB/src/stm32f10x_tim.c ****   *   - TIM10, TIM11, TIM13, TIM14, TIM16 and TIM17 can have TIM_IT_Update or TIM_IT_CC1.   
2672:./FWLIB/src/stm32f10x_tim.c ****   *   - TIM_IT_Break is used only with TIM1, TIM8 and TIM15. 
2673:./FWLIB/src/stm32f10x_tim.c ****   *   - TIM_IT_COM is used only with TIM1, TIM8, TIM15, TIM16 and TIM17.    
2674:./FWLIB/src/stm32f10x_tim.c ****   * @retval None
2675:./FWLIB/src/stm32f10x_tim.c ****   */
2676:./FWLIB/src/stm32f10x_tim.c **** void TIM_ClearITPendingBit(TIM_TypeDef* TIMx, uint16_t TIM_IT)
2677:./FWLIB/src/stm32f10x_tim.c **** {
2678:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
2679:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
2680:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_IT(TIM_IT));
2681:./FWLIB/src/stm32f10x_tim.c ****   /* Clear the IT pending Bit */
2682:./FWLIB/src/stm32f10x_tim.c ****   TIMx->SR = (uint16_t)~TIM_IT;
2683:./FWLIB/src/stm32f10x_tim.c **** }
2684:./FWLIB/src/stm32f10x_tim.c **** 
2685:./FWLIB/src/stm32f10x_tim.c **** /**
2686:./FWLIB/src/stm32f10x_tim.c ****   * @brief  Configure the TI1 as Input.
2687:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 except 6 and 7 to select the TIM peripheral.
2688:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_ICPolarity : The Input Polarity.
2689:./FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
2690:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_ICPolarity_Rising
2691:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_ICPolarity_Falling
2692:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_ICSelection: specifies the input to be used.
2693:./FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
2694:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_ICSelection_DirectTI: TIM Input 1 is selected to be connected to IC1.
2695:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_ICSelection_IndirectTI: TIM Input 1 is selected to be connected to IC2.
2696:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_ICSelection_TRC: TIM Input 1 is selected to be connected to TRC.
2697:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_ICFilter: Specifies the Input Capture Filter.
2698:./FWLIB/src/stm32f10x_tim.c ****   *   This parameter must be a value between 0x00 and 0x0F.
2699:./FWLIB/src/stm32f10x_tim.c ****   * @retval None
2700:./FWLIB/src/stm32f10x_tim.c ****   */
2701:./FWLIB/src/stm32f10x_tim.c **** static void TI1_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
2702:./FWLIB/src/stm32f10x_tim.c ****                        uint16_t TIM_ICFilter)
2703:./FWLIB/src/stm32f10x_tim.c **** {
  27              		.loc 1 2703 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		.loc 1 2703 1 is_stmt 0 view .LVU1
  32 0000 00B5     		push	{lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 4
ARM GAS  /tmp/ccvVNijM.s 			page 49


  35              		.cfi_offset 14, -4
2704:./FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpccmr1 = 0, tmpccer = 0;
  36              		.loc 1 2704 3 is_stmt 1 view .LVU2
  37              	.LVL1:
2705:./FWLIB/src/stm32f10x_tim.c ****   /* Disable the Channel 1: Reset the CC1E Bit */
2706:./FWLIB/src/stm32f10x_tim.c ****   TIMx->CCER &= (uint16_t)~((uint16_t)TIM_CCER_CC1E);
  38              		.loc 1 2706 3 view .LVU3
  39              		.loc 1 2706 7 is_stmt 0 view .LVU4
  40 0002 B0F820C0 		ldrh	ip, [r0, #32]
  41 0006 1FFA8CFC 		uxth	ip, ip
  42              		.loc 1 2706 14 view .LVU5
  43 000a 2CF0010C 		bic	ip, ip, #1
  44 000e 1FFA8CFC 		uxth	ip, ip
  45 0012 A0F820C0 		strh	ip, [r0, #32]	@ movhi
2707:./FWLIB/src/stm32f10x_tim.c ****   tmpccmr1 = TIMx->CCMR1;
  46              		.loc 1 2707 3 is_stmt 1 view .LVU6
  47              		.loc 1 2707 12 is_stmt 0 view .LVU7
  48 0016 B0F818C0 		ldrh	ip, [r0, #24]
  49 001a 1FFA8CFC 		uxth	ip, ip
  50              	.LVL2:
2708:./FWLIB/src/stm32f10x_tim.c ****   tmpccer = TIMx->CCER;
  51              		.loc 1 2708 3 is_stmt 1 view .LVU8
  52              		.loc 1 2708 11 is_stmt 0 view .LVU9
  53 001e B0F820E0 		ldrh	lr, [r0, #32]
  54 0022 1FFA8EFE 		uxth	lr, lr
  55              	.LVL3:
2709:./FWLIB/src/stm32f10x_tim.c ****   /* Select the Input and set the filter */
2710:./FWLIB/src/stm32f10x_tim.c ****   tmpccmr1 &= (uint16_t)(((uint16_t)~((uint16_t)TIM_CCMR1_CC1S)) & ((uint16_t)~((uint16_t)TIM_CCMR1
  56              		.loc 1 2710 3 is_stmt 1 view .LVU10
  57              		.loc 1 2710 12 is_stmt 0 view .LVU11
  58 0026 2CF0F30C 		bic	ip, ip, #243
  59              	.LVL4:
2711:./FWLIB/src/stm32f10x_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_ICSelection | (uint16_t)(TIM_ICFilter << (uint16_t)4));
  60              		.loc 1 2711 3 is_stmt 1 view .LVU12
  61              		.loc 1 2711 44 is_stmt 0 view .LVU13
  62 002a 1B01     		lsls	r3, r3, #4
  63              	.LVL5:
  64              		.loc 1 2711 44 view .LVU14
  65 002c 9BB2     		uxth	r3, r3
  66              		.loc 1 2711 15 view .LVU15
  67 002e 1343     		orrs	r3, r3, r2
  68              		.loc 1 2711 12 view .LVU16
  69 0030 4CEA030C 		orr	ip, ip, r3
  70              	.LVL6:
2712:./FWLIB/src/stm32f10x_tim.c ****   
2713:./FWLIB/src/stm32f10x_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8) || (TIMx == TIM2) || (TIMx == TIM3) ||
  71              		.loc 1 2713 3 is_stmt 1 view .LVU17
  72              		.loc 1 2713 5 is_stmt 0 view .LVU18
  73 0034 124A     		ldr	r2, .L6
  74              	.LVL7:
  75              		.loc 1 2713 5 view .LVU19
  76 0036 9042     		cmp	r0, r2
  77 0038 17D0     		beq	.L2
  78              		.loc 1 2713 21 discriminator 1 view .LVU20
  79 003a 124B     		ldr	r3, .L6+4
  80 003c 9842     		cmp	r0, r3
  81 003e 14D0     		beq	.L2
ARM GAS  /tmp/ccvVNijM.s 			page 50


  82              		.loc 1 2713 39 discriminator 2 view .LVU21
  83 0040 B0F1804F 		cmp	r0, #1073741824
  84 0044 11D0     		beq	.L2
  85              		.loc 1 2713 57 discriminator 3 view .LVU22
  86 0046 A3F59833 		sub	r3, r3, #77824
  87 004a 9842     		cmp	r0, r3
  88 004c 0DD0     		beq	.L2
  89              		.loc 1 2713 75 discriminator 4 view .LVU23
  90 004e 03F58063 		add	r3, r3, #1024
  91 0052 9842     		cmp	r0, r3
  92 0054 09D0     		beq	.L2
2714:./FWLIB/src/stm32f10x_tim.c ****      (TIMx == TIM4) ||(TIMx == TIM5))
  93              		.loc 1 2714 21 view .LVU24
  94 0056 03F58063 		add	r3, r3, #1024
  95 005a 9842     		cmp	r0, r3
  96 005c 05D0     		beq	.L2
2715:./FWLIB/src/stm32f10x_tim.c ****   {
2716:./FWLIB/src/stm32f10x_tim.c ****     /* Select the Polarity and set the CC1E Bit */
2717:./FWLIB/src/stm32f10x_tim.c ****     tmpccer &= (uint16_t)~((uint16_t)(TIM_CCER_CC1P));
2718:./FWLIB/src/stm32f10x_tim.c ****     tmpccer |= (uint16_t)(TIM_ICPolarity | (uint16_t)TIM_CCER_CC1E);
2719:./FWLIB/src/stm32f10x_tim.c ****   }
2720:./FWLIB/src/stm32f10x_tim.c ****   else
2721:./FWLIB/src/stm32f10x_tim.c ****   {
2722:./FWLIB/src/stm32f10x_tim.c ****     /* Select the Polarity and set the CC1E Bit */
2723:./FWLIB/src/stm32f10x_tim.c ****     tmpccer &= (uint16_t)~((uint16_t)(TIM_CCER_CC1P | TIM_CCER_CC1NP));
  97              		.loc 1 2723 5 is_stmt 1 view .LVU25
  98              		.loc 1 2723 13 is_stmt 0 view .LVU26
  99 005e 2EF00A03 		bic	r3, lr, #10
 100              	.LVL8:
2724:./FWLIB/src/stm32f10x_tim.c ****     tmpccer |= (uint16_t)(TIM_ICPolarity | (uint16_t)TIM_CCER_CC1E);
 101              		.loc 1 2724 5 is_stmt 1 view .LVU27
 102              		.loc 1 2724 13 is_stmt 0 view .LVU28
 103 0062 0B43     		orrs	r3, r3, r1
 104              	.LVL9:
 105              		.loc 1 2724 13 view .LVU29
 106 0064 43F00103 		orr	r3, r3, #1
 107 0068 04E0     		b	.L4
 108              	.LVL10:
 109              	.L2:
2717:./FWLIB/src/stm32f10x_tim.c ****     tmpccer |= (uint16_t)(TIM_ICPolarity | (uint16_t)TIM_CCER_CC1E);
 110              		.loc 1 2717 5 is_stmt 1 view .LVU30
2717:./FWLIB/src/stm32f10x_tim.c ****     tmpccer |= (uint16_t)(TIM_ICPolarity | (uint16_t)TIM_CCER_CC1E);
 111              		.loc 1 2717 13 is_stmt 0 view .LVU31
 112 006a 2EF00203 		bic	r3, lr, #2
 113              	.LVL11:
2718:./FWLIB/src/stm32f10x_tim.c ****   }
 114              		.loc 1 2718 5 is_stmt 1 view .LVU32
2718:./FWLIB/src/stm32f10x_tim.c ****   }
 115              		.loc 1 2718 13 is_stmt 0 view .LVU33
 116 006e 0B43     		orrs	r3, r3, r1
 117              	.LVL12:
2718:./FWLIB/src/stm32f10x_tim.c ****   }
 118              		.loc 1 2718 13 view .LVU34
 119 0070 43F00103 		orr	r3, r3, #1
 120              	.LVL13:
 121              	.L4:
2725:./FWLIB/src/stm32f10x_tim.c ****   }
ARM GAS  /tmp/ccvVNijM.s 			page 51


2726:./FWLIB/src/stm32f10x_tim.c **** 
2727:./FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR1 and CCER registers */
2728:./FWLIB/src/stm32f10x_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 122              		.loc 1 2728 3 is_stmt 1 view .LVU35
 123              		.loc 1 2728 15 is_stmt 0 view .LVU36
 124 0074 A0F818C0 		strh	ip, [r0, #24]	@ movhi
2729:./FWLIB/src/stm32f10x_tim.c ****   TIMx->CCER = tmpccer;
 125              		.loc 1 2729 3 is_stmt 1 view .LVU37
 126              		.loc 1 2729 14 is_stmt 0 view .LVU38
 127 0078 0384     		strh	r3, [r0, #32]	@ movhi
2730:./FWLIB/src/stm32f10x_tim.c **** }
 128              		.loc 1 2730 1 view .LVU39
 129 007a 5DF804FB 		ldr	pc, [sp], #4
 130              	.L7:
 131 007e 00BF     		.align	2
 132              	.L6:
 133 0080 002C0140 		.word	1073818624
 134 0084 00340140 		.word	1073820672
 135              		.cfi_endproc
 136              	.LFE116:
 138              		.section	.text.TI2_Config,"ax",%progbits
 139              		.align	1
 140              		.syntax unified
 141              		.thumb
 142              		.thumb_func
 144              	TI2_Config:
 145              	.LVL14:
 146              	.LFB117:
2731:./FWLIB/src/stm32f10x_tim.c **** 
2732:./FWLIB/src/stm32f10x_tim.c **** /**
2733:./FWLIB/src/stm32f10x_tim.c ****   * @brief  Configure the TI2 as Input.
2734:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9, 12 or 15 to select the TIM peripheral.
2735:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_ICPolarity : The Input Polarity.
2736:./FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
2737:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_ICPolarity_Rising
2738:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_ICPolarity_Falling
2739:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_ICSelection: specifies the input to be used.
2740:./FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
2741:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_ICSelection_DirectTI: TIM Input 2 is selected to be connected to IC2.
2742:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_ICSelection_IndirectTI: TIM Input 2 is selected to be connected to IC1.
2743:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_ICSelection_TRC: TIM Input 2 is selected to be connected to TRC.
2744:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_ICFilter: Specifies the Input Capture Filter.
2745:./FWLIB/src/stm32f10x_tim.c ****   *   This parameter must be a value between 0x00 and 0x0F.
2746:./FWLIB/src/stm32f10x_tim.c ****   * @retval None
2747:./FWLIB/src/stm32f10x_tim.c ****   */
2748:./FWLIB/src/stm32f10x_tim.c **** static void TI2_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
2749:./FWLIB/src/stm32f10x_tim.c ****                        uint16_t TIM_ICFilter)
2750:./FWLIB/src/stm32f10x_tim.c **** {
 147              		.loc 1 2750 1 is_stmt 1 view -0
 148              		.cfi_startproc
 149              		@ args = 0, pretend = 0, frame = 0
 150              		@ frame_needed = 0, uses_anonymous_args = 0
 151              		.loc 1 2750 1 is_stmt 0 view .LVU41
 152 0000 10B5     		push	{r4, lr}
 153              	.LCFI1:
 154              		.cfi_def_cfa_offset 8
 155              		.cfi_offset 4, -8
ARM GAS  /tmp/ccvVNijM.s 			page 52


 156              		.cfi_offset 14, -4
2751:./FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpccmr1 = 0, tmpccer = 0, tmp = 0;
 157              		.loc 1 2751 3 is_stmt 1 view .LVU42
 158              	.LVL15:
2752:./FWLIB/src/stm32f10x_tim.c ****   /* Disable the Channel 2: Reset the CC2E Bit */
2753:./FWLIB/src/stm32f10x_tim.c ****   TIMx->CCER &= (uint16_t)~((uint16_t)TIM_CCER_CC2E);
 159              		.loc 1 2753 3 view .LVU43
 160              		.loc 1 2753 7 is_stmt 0 view .LVU44
 161 0002 B0F820C0 		ldrh	ip, [r0, #32]
 162 0006 1FFA8CFC 		uxth	ip, ip
 163              		.loc 1 2753 14 view .LVU45
 164 000a 2CF0100C 		bic	ip, ip, #16
 165 000e 1FFA8CFC 		uxth	ip, ip
 166 0012 A0F820C0 		strh	ip, [r0, #32]	@ movhi
2754:./FWLIB/src/stm32f10x_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 167              		.loc 1 2754 3 is_stmt 1 view .LVU46
 168              		.loc 1 2754 12 is_stmt 0 view .LVU47
 169 0016 B0F818E0 		ldrh	lr, [r0, #24]
 170              	.LVL16:
2755:./FWLIB/src/stm32f10x_tim.c ****   tmpccer = TIMx->CCER;
 171              		.loc 1 2755 3 is_stmt 1 view .LVU48
 172              		.loc 1 2755 11 is_stmt 0 view .LVU49
 173 001a B0F820C0 		ldrh	ip, [r0, #32]
 174 001e 1FFA8CFC 		uxth	ip, ip
 175              	.LVL17:
2756:./FWLIB/src/stm32f10x_tim.c ****   tmp = (uint16_t)(TIM_ICPolarity << 4);
 176              		.loc 1 2756 3 is_stmt 1 view .LVU50
 177              		.loc 1 2756 7 is_stmt 0 view .LVU51
 178 0022 0C01     		lsls	r4, r1, #4
 179 0024 A4B2     		uxth	r4, r4
 180              	.LVL18:
2757:./FWLIB/src/stm32f10x_tim.c ****   /* Select the Input and set the filter */
2758:./FWLIB/src/stm32f10x_tim.c ****   tmpccmr1 &= (uint16_t)(((uint16_t)~((uint16_t)TIM_CCMR1_CC2S)) & ((uint16_t)~((uint16_t)TIM_CCMR1
 181              		.loc 1 2758 3 is_stmt 1 view .LVU52
 182              		.loc 1 2758 12 is_stmt 0 view .LVU53
 183 0026 2EF4407E 		bic	lr, lr, #768
 184              	.LVL19:
 185              		.loc 1 2758 12 view .LVU54
 186 002a 4FEA0E5E 		lsl	lr, lr, #20
 187 002e 4FEA1E5E 		lsr	lr, lr, #20
 188              	.LVL20:
2759:./FWLIB/src/stm32f10x_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_ICFilter << 12);
 189              		.loc 1 2759 3 is_stmt 1 view .LVU55
 190              		.loc 1 2759 15 is_stmt 0 view .LVU56
 191 0032 1B03     		lsls	r3, r3, #12
 192              	.LVL21:
 193              		.loc 1 2759 15 view .LVU57
 194 0034 9BB2     		uxth	r3, r3
 195              		.loc 1 2759 12 view .LVU58
 196 0036 43EA0E03 		orr	r3, r3, lr
 197              	.LVL22:
2760:./FWLIB/src/stm32f10x_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_ICSelection << 8);
 198              		.loc 1 2760 3 is_stmt 1 view .LVU59
 199              		.loc 1 2760 15 is_stmt 0 view .LVU60
 200 003a 1202     		lsls	r2, r2, #8
 201              	.LVL23:
 202              		.loc 1 2760 15 view .LVU61
ARM GAS  /tmp/ccvVNijM.s 			page 53


 203 003c 92B2     		uxth	r2, r2
 204              		.loc 1 2760 12 view .LVU62
 205 003e 1A43     		orrs	r2, r2, r3
 206              	.LVL24:
2761:./FWLIB/src/stm32f10x_tim.c ****   
2762:./FWLIB/src/stm32f10x_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8) || (TIMx == TIM2) || (TIMx == TIM3) ||
 207              		.loc 1 2762 3 is_stmt 1 view .LVU63
 208              		.loc 1 2762 5 is_stmt 0 view .LVU64
 209 0040 134B     		ldr	r3, .L13
 210 0042 9842     		cmp	r0, r3
 211 0044 19D0     		beq	.L9
 212              		.loc 1 2762 21 discriminator 1 view .LVU65
 213 0046 03F50063 		add	r3, r3, #2048
 214 004a 9842     		cmp	r0, r3
 215 004c 15D0     		beq	.L9
 216              		.loc 1 2762 39 discriminator 2 view .LVU66
 217 004e B0F1804F 		cmp	r0, #1073741824
 218 0052 12D0     		beq	.L9
 219              		.loc 1 2762 57 discriminator 3 view .LVU67
 220 0054 A3F59833 		sub	r3, r3, #77824
 221 0058 9842     		cmp	r0, r3
 222 005a 0ED0     		beq	.L9
 223              		.loc 1 2762 75 discriminator 4 view .LVU68
 224 005c 03F58063 		add	r3, r3, #1024
 225 0060 9842     		cmp	r0, r3
 226 0062 0AD0     		beq	.L9
2763:./FWLIB/src/stm32f10x_tim.c ****      (TIMx == TIM4) ||(TIMx == TIM5))
 227              		.loc 1 2763 21 view .LVU69
 228 0064 03F58063 		add	r3, r3, #1024
 229 0068 9842     		cmp	r0, r3
 230 006a 06D0     		beq	.L9
2764:./FWLIB/src/stm32f10x_tim.c ****   {
2765:./FWLIB/src/stm32f10x_tim.c ****     /* Select the Polarity and set the CC2E Bit */
2766:./FWLIB/src/stm32f10x_tim.c ****     tmpccer &= (uint16_t)~((uint16_t)(TIM_CCER_CC2P));
2767:./FWLIB/src/stm32f10x_tim.c ****     tmpccer |=  (uint16_t)(tmp | (uint16_t)TIM_CCER_CC2E);
2768:./FWLIB/src/stm32f10x_tim.c ****   }
2769:./FWLIB/src/stm32f10x_tim.c ****   else
2770:./FWLIB/src/stm32f10x_tim.c ****   {
2771:./FWLIB/src/stm32f10x_tim.c ****     /* Select the Polarity and set the CC2E Bit */
2772:./FWLIB/src/stm32f10x_tim.c ****     tmpccer &= (uint16_t)~((uint16_t)(TIM_CCER_CC2P | TIM_CCER_CC2NP));
 231              		.loc 1 2772 5 is_stmt 1 view .LVU70
 232              		.loc 1 2772 13 is_stmt 0 view .LVU71
 233 006c 2CF0A00C 		bic	ip, ip, #160
 234              	.LVL25:
2773:./FWLIB/src/stm32f10x_tim.c ****     tmpccer |= (uint16_t)(TIM_ICPolarity | (uint16_t)TIM_CCER_CC2E);
 235              		.loc 1 2773 5 is_stmt 1 view .LVU72
 236              		.loc 1 2773 13 is_stmt 0 view .LVU73
 237 0070 4CEA0101 		orr	r1, ip, r1
 238              	.LVL26:
 239              		.loc 1 2773 13 view .LVU74
 240 0074 41F0100C 		orr	ip, r1, #16
 241              	.LVL27:
 242              		.loc 1 2773 13 view .LVU75
 243 0078 05E0     		b	.L11
 244              	.LVL28:
 245              	.L9:
2766:./FWLIB/src/stm32f10x_tim.c ****     tmpccer |=  (uint16_t)(tmp | (uint16_t)TIM_CCER_CC2E);
ARM GAS  /tmp/ccvVNijM.s 			page 54


 246              		.loc 1 2766 5 is_stmt 1 view .LVU76
2766:./FWLIB/src/stm32f10x_tim.c ****     tmpccer |=  (uint16_t)(tmp | (uint16_t)TIM_CCER_CC2E);
 247              		.loc 1 2766 13 is_stmt 0 view .LVU77
 248 007a 2CF0200C 		bic	ip, ip, #32
 249              	.LVL29:
2767:./FWLIB/src/stm32f10x_tim.c ****   }
 250              		.loc 1 2767 5 is_stmt 1 view .LVU78
2767:./FWLIB/src/stm32f10x_tim.c ****   }
 251              		.loc 1 2767 13 is_stmt 0 view .LVU79
 252 007e 4CEA040C 		orr	ip, ip, r4
 253              	.LVL30:
2767:./FWLIB/src/stm32f10x_tim.c ****   }
 254              		.loc 1 2767 13 view .LVU80
 255 0082 4CF0100C 		orr	ip, ip, #16
 256              	.LVL31:
 257              	.L11:
2774:./FWLIB/src/stm32f10x_tim.c ****   }
2775:./FWLIB/src/stm32f10x_tim.c ****   
2776:./FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR1 and CCER registers */
2777:./FWLIB/src/stm32f10x_tim.c ****   TIMx->CCMR1 = tmpccmr1 ;
 258              		.loc 1 2777 3 is_stmt 1 view .LVU81
 259              		.loc 1 2777 15 is_stmt 0 view .LVU82
 260 0086 0283     		strh	r2, [r0, #24]	@ movhi
2778:./FWLIB/src/stm32f10x_tim.c ****   TIMx->CCER = tmpccer;
 261              		.loc 1 2778 3 is_stmt 1 view .LVU83
 262              		.loc 1 2778 14 is_stmt 0 view .LVU84
 263 0088 A0F820C0 		strh	ip, [r0, #32]	@ movhi
2779:./FWLIB/src/stm32f10x_tim.c **** }
 264              		.loc 1 2779 1 view .LVU85
 265 008c 10BD     		pop	{r4, pc}
 266              	.LVL32:
 267              	.L14:
 268              		.loc 1 2779 1 view .LVU86
 269 008e 00BF     		.align	2
 270              	.L13:
 271 0090 002C0140 		.word	1073818624
 272              		.cfi_endproc
 273              	.LFE117:
 275              		.section	.text.TI3_Config,"ax",%progbits
 276              		.align	1
 277              		.syntax unified
 278              		.thumb
 279              		.thumb_func
 281              	TI3_Config:
 282              	.LVL33:
 283              	.LFB118:
2780:./FWLIB/src/stm32f10x_tim.c **** 
2781:./FWLIB/src/stm32f10x_tim.c **** /**
2782:./FWLIB/src/stm32f10x_tim.c ****   * @brief  Configure the TI3 as Input.
2783:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2784:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_ICPolarity : The Input Polarity.
2785:./FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
2786:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_ICPolarity_Rising
2787:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_ICPolarity_Falling
2788:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_ICSelection: specifies the input to be used.
2789:./FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
2790:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_ICSelection_DirectTI: TIM Input 3 is selected to be connected to IC3.
ARM GAS  /tmp/ccvVNijM.s 			page 55


2791:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_ICSelection_IndirectTI: TIM Input 3 is selected to be connected to IC4.
2792:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_ICSelection_TRC: TIM Input 3 is selected to be connected to TRC.
2793:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_ICFilter: Specifies the Input Capture Filter.
2794:./FWLIB/src/stm32f10x_tim.c ****   *   This parameter must be a value between 0x00 and 0x0F.
2795:./FWLIB/src/stm32f10x_tim.c ****   * @retval None
2796:./FWLIB/src/stm32f10x_tim.c ****   */
2797:./FWLIB/src/stm32f10x_tim.c **** static void TI3_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
2798:./FWLIB/src/stm32f10x_tim.c ****                        uint16_t TIM_ICFilter)
2799:./FWLIB/src/stm32f10x_tim.c **** {
 284              		.loc 1 2799 1 is_stmt 1 view -0
 285              		.cfi_startproc
 286              		@ args = 0, pretend = 0, frame = 0
 287              		@ frame_needed = 0, uses_anonymous_args = 0
 288              		.loc 1 2799 1 is_stmt 0 view .LVU88
 289 0000 10B5     		push	{r4, lr}
 290              	.LCFI2:
 291              		.cfi_def_cfa_offset 8
 292              		.cfi_offset 4, -8
 293              		.cfi_offset 14, -4
 294 0002 8E46     		mov	lr, r1
2800:./FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpccmr2 = 0, tmpccer = 0, tmp = 0;
 295              		.loc 1 2800 3 is_stmt 1 view .LVU89
 296              	.LVL34:
2801:./FWLIB/src/stm32f10x_tim.c ****   /* Disable the Channel 3: Reset the CC3E Bit */
2802:./FWLIB/src/stm32f10x_tim.c ****   TIMx->CCER &= (uint16_t)~((uint16_t)TIM_CCER_CC3E);
 297              		.loc 1 2802 3 view .LVU90
 298              		.loc 1 2802 7 is_stmt 0 view .LVU91
 299 0004 B0F820C0 		ldrh	ip, [r0, #32]
 300 0008 1FFA8CFC 		uxth	ip, ip
 301              		.loc 1 2802 14 view .LVU92
 302 000c 2CF4807C 		bic	ip, ip, #256
 303 0010 1FFA8CFC 		uxth	ip, ip
 304 0014 A0F820C0 		strh	ip, [r0, #32]	@ movhi
2803:./FWLIB/src/stm32f10x_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 305              		.loc 1 2803 3 is_stmt 1 view .LVU93
 306              		.loc 1 2803 12 is_stmt 0 view .LVU94
 307 0018 B0F81CC0 		ldrh	ip, [r0, #28]
 308 001c 1FFA8CFC 		uxth	ip, ip
 309              	.LVL35:
2804:./FWLIB/src/stm32f10x_tim.c ****   tmpccer = TIMx->CCER;
 310              		.loc 1 2804 3 is_stmt 1 view .LVU95
 311              		.loc 1 2804 11 is_stmt 0 view .LVU96
 312 0020 018C     		ldrh	r1, [r0, #32]
 313              	.LVL36:
 314              		.loc 1 2804 11 view .LVU97
 315 0022 89B2     		uxth	r1, r1
 316              	.LVL37:
2805:./FWLIB/src/stm32f10x_tim.c ****   tmp = (uint16_t)(TIM_ICPolarity << 8);
 317              		.loc 1 2805 3 is_stmt 1 view .LVU98
 318              		.loc 1 2805 7 is_stmt 0 view .LVU99
 319 0024 4FEA0E24 		lsl	r4, lr, #8
 320 0028 A4B2     		uxth	r4, r4
 321              	.LVL38:
2806:./FWLIB/src/stm32f10x_tim.c ****   /* Select the Input and set the filter */
2807:./FWLIB/src/stm32f10x_tim.c ****   tmpccmr2 &= (uint16_t)(((uint16_t)~((uint16_t)TIM_CCMR2_CC3S)) & ((uint16_t)~((uint16_t)TIM_CCMR2
 322              		.loc 1 2807 3 is_stmt 1 view .LVU100
 323              		.loc 1 2807 12 is_stmt 0 view .LVU101
ARM GAS  /tmp/ccvVNijM.s 			page 56


 324 002a 2CF0F30C 		bic	ip, ip, #243
 325              	.LVL39:
2808:./FWLIB/src/stm32f10x_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_ICSelection | (uint16_t)(TIM_ICFilter << (uint16_t)4));
 326              		.loc 1 2808 3 is_stmt 1 view .LVU102
 327              		.loc 1 2808 44 is_stmt 0 view .LVU103
 328 002e 1B01     		lsls	r3, r3, #4
 329              	.LVL40:
 330              		.loc 1 2808 44 view .LVU104
 331 0030 9BB2     		uxth	r3, r3
 332              		.loc 1 2808 15 view .LVU105
 333 0032 1343     		orrs	r3, r3, r2
 334              		.loc 1 2808 12 view .LVU106
 335 0034 4CEA030C 		orr	ip, ip, r3
 336              	.LVL41:
2809:./FWLIB/src/stm32f10x_tim.c ****     
2810:./FWLIB/src/stm32f10x_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8) || (TIMx == TIM2) || (TIMx == TIM3) ||
 337              		.loc 1 2810 3 is_stmt 1 view .LVU107
 338              		.loc 1 2810 5 is_stmt 0 view .LVU108
 339 0038 124A     		ldr	r2, .L20
 340              	.LVL42:
 341              		.loc 1 2810 5 view .LVU109
 342 003a 9042     		cmp	r0, r2
 343 003c 18D0     		beq	.L16
 344              		.loc 1 2810 21 discriminator 1 view .LVU110
 345 003e 124B     		ldr	r3, .L20+4
 346 0040 9842     		cmp	r0, r3
 347 0042 15D0     		beq	.L16
 348              		.loc 1 2810 39 discriminator 2 view .LVU111
 349 0044 B0F1804F 		cmp	r0, #1073741824
 350 0048 12D0     		beq	.L16
 351              		.loc 1 2810 57 discriminator 3 view .LVU112
 352 004a A3F59833 		sub	r3, r3, #77824
 353 004e 9842     		cmp	r0, r3
 354 0050 0ED0     		beq	.L16
 355              		.loc 1 2810 75 discriminator 4 view .LVU113
 356 0052 03F58063 		add	r3, r3, #1024
 357 0056 9842     		cmp	r0, r3
 358 0058 0AD0     		beq	.L16
2811:./FWLIB/src/stm32f10x_tim.c ****      (TIMx == TIM4) ||(TIMx == TIM5))
 359              		.loc 1 2811 21 view .LVU114
 360 005a 03F58063 		add	r3, r3, #1024
 361 005e 9842     		cmp	r0, r3
 362 0060 06D0     		beq	.L16
2812:./FWLIB/src/stm32f10x_tim.c ****   {
2813:./FWLIB/src/stm32f10x_tim.c ****     /* Select the Polarity and set the CC3E Bit */
2814:./FWLIB/src/stm32f10x_tim.c ****     tmpccer &= (uint16_t)~((uint16_t)(TIM_CCER_CC3P));
2815:./FWLIB/src/stm32f10x_tim.c ****     tmpccer |= (uint16_t)(tmp | (uint16_t)TIM_CCER_CC3E);
2816:./FWLIB/src/stm32f10x_tim.c ****   }
2817:./FWLIB/src/stm32f10x_tim.c ****   else
2818:./FWLIB/src/stm32f10x_tim.c ****   {
2819:./FWLIB/src/stm32f10x_tim.c ****     /* Select the Polarity and set the CC3E Bit */
2820:./FWLIB/src/stm32f10x_tim.c ****     tmpccer &= (uint16_t)~((uint16_t)(TIM_CCER_CC3P | TIM_CCER_CC3NP));
 363              		.loc 1 2820 5 is_stmt 1 view .LVU115
 364              		.loc 1 2820 13 is_stmt 0 view .LVU116
 365 0062 21F42063 		bic	r3, r1, #2560
 366              	.LVL43:
2821:./FWLIB/src/stm32f10x_tim.c ****     tmpccer |= (uint16_t)(TIM_ICPolarity | (uint16_t)TIM_CCER_CC3E);
ARM GAS  /tmp/ccvVNijM.s 			page 57


 367              		.loc 1 2821 5 is_stmt 1 view .LVU117
 368              		.loc 1 2821 13 is_stmt 0 view .LVU118
 369 0066 43EA0E01 		orr	r1, r3, lr
 370 006a 41F48071 		orr	r1, r1, #256
 371 006e 04E0     		b	.L18
 372              	.LVL44:
 373              	.L16:
2814:./FWLIB/src/stm32f10x_tim.c ****     tmpccer |= (uint16_t)(tmp | (uint16_t)TIM_CCER_CC3E);
 374              		.loc 1 2814 5 is_stmt 1 view .LVU119
2814:./FWLIB/src/stm32f10x_tim.c ****     tmpccer |= (uint16_t)(tmp | (uint16_t)TIM_CCER_CC3E);
 375              		.loc 1 2814 13 is_stmt 0 view .LVU120
 376 0070 21F40071 		bic	r1, r1, #512
 377              	.LVL45:
2815:./FWLIB/src/stm32f10x_tim.c ****   }
 378              		.loc 1 2815 5 is_stmt 1 view .LVU121
2815:./FWLIB/src/stm32f10x_tim.c ****   }
 379              		.loc 1 2815 13 is_stmt 0 view .LVU122
 380 0074 2143     		orrs	r1, r1, r4
 381              	.LVL46:
2815:./FWLIB/src/stm32f10x_tim.c ****   }
 382              		.loc 1 2815 13 view .LVU123
 383 0076 41F48071 		orr	r1, r1, #256
 384              	.LVL47:
 385              	.L18:
2822:./FWLIB/src/stm32f10x_tim.c ****   }
2823:./FWLIB/src/stm32f10x_tim.c ****   
2824:./FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR2 and CCER registers */
2825:./FWLIB/src/stm32f10x_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 386              		.loc 1 2825 3 is_stmt 1 view .LVU124
 387              		.loc 1 2825 15 is_stmt 0 view .LVU125
 388 007a A0F81CC0 		strh	ip, [r0, #28]	@ movhi
2826:./FWLIB/src/stm32f10x_tim.c ****   TIMx->CCER = tmpccer;
 389              		.loc 1 2826 3 is_stmt 1 view .LVU126
 390              		.loc 1 2826 14 is_stmt 0 view .LVU127
 391 007e 0184     		strh	r1, [r0, #32]	@ movhi
2827:./FWLIB/src/stm32f10x_tim.c **** }
 392              		.loc 1 2827 1 view .LVU128
 393 0080 10BD     		pop	{r4, pc}
 394              	.LVL48:
 395              	.L21:
 396              		.loc 1 2827 1 view .LVU129
 397 0082 00BF     		.align	2
 398              	.L20:
 399 0084 002C0140 		.word	1073818624
 400 0088 00340140 		.word	1073820672
 401              		.cfi_endproc
 402              	.LFE118:
 404              		.section	.text.TI4_Config,"ax",%progbits
 405              		.align	1
 406              		.syntax unified
 407              		.thumb
 408              		.thumb_func
 410              	TI4_Config:
 411              	.LVL49:
 412              	.LFB119:
2828:./FWLIB/src/stm32f10x_tim.c **** 
2829:./FWLIB/src/stm32f10x_tim.c **** /**
ARM GAS  /tmp/ccvVNijM.s 			page 58


2830:./FWLIB/src/stm32f10x_tim.c ****   * @brief  Configure the TI4 as Input.
2831:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2832:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_ICPolarity : The Input Polarity.
2833:./FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
2834:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_ICPolarity_Rising
2835:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_ICPolarity_Falling
2836:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_ICSelection: specifies the input to be used.
2837:./FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
2838:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_ICSelection_DirectTI: TIM Input 4 is selected to be connected to IC4.
2839:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_ICSelection_IndirectTI: TIM Input 4 is selected to be connected to IC3.
2840:./FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_ICSelection_TRC: TIM Input 4 is selected to be connected to TRC.
2841:./FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_ICFilter: Specifies the Input Capture Filter.
2842:./FWLIB/src/stm32f10x_tim.c ****   *   This parameter must be a value between 0x00 and 0x0F.
2843:./FWLIB/src/stm32f10x_tim.c ****   * @retval None
2844:./FWLIB/src/stm32f10x_tim.c ****   */
2845:./FWLIB/src/stm32f10x_tim.c **** static void TI4_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
2846:./FWLIB/src/stm32f10x_tim.c ****                        uint16_t TIM_ICFilter)
2847:./FWLIB/src/stm32f10x_tim.c **** {
 413              		.loc 1 2847 1 is_stmt 1 view -0
 414              		.cfi_startproc
 415              		@ args = 0, pretend = 0, frame = 0
 416              		@ frame_needed = 0, uses_anonymous_args = 0
 417              		.loc 1 2847 1 is_stmt 0 view .LVU131
 418 0000 10B5     		push	{r4, lr}
 419              	.LCFI3:
 420              		.cfi_def_cfa_offset 8
 421              		.cfi_offset 4, -8
 422              		.cfi_offset 14, -4
2848:./FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpccmr2 = 0, tmpccer = 0, tmp = 0;
 423              		.loc 1 2848 3 is_stmt 1 view .LVU132
 424              	.LVL50:
2849:./FWLIB/src/stm32f10x_tim.c **** 
2850:./FWLIB/src/stm32f10x_tim.c ****    /* Disable the Channel 4: Reset the CC4E Bit */
2851:./FWLIB/src/stm32f10x_tim.c ****   TIMx->CCER &= (uint16_t)~((uint16_t)TIM_CCER_CC4E);
 425              		.loc 1 2851 3 view .LVU133
 426              		.loc 1 2851 7 is_stmt 0 view .LVU134
 427 0002 B0F820C0 		ldrh	ip, [r0, #32]
 428 0006 1FFA8CFC 		uxth	ip, ip
 429              		.loc 1 2851 14 view .LVU135
 430 000a 2CF4805C 		bic	ip, ip, #4096
 431 000e 1FFA8CFC 		uxth	ip, ip
 432 0012 A0F820C0 		strh	ip, [r0, #32]	@ movhi
2852:./FWLIB/src/stm32f10x_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 433              		.loc 1 2852 3 is_stmt 1 view .LVU136
 434              		.loc 1 2852 12 is_stmt 0 view .LVU137
 435 0016 B0F81CE0 		ldrh	lr, [r0, #28]
 436              	.LVL51:
2853:./FWLIB/src/stm32f10x_tim.c ****   tmpccer = TIMx->CCER;
 437              		.loc 1 2853 3 is_stmt 1 view .LVU138
 438              		.loc 1 2853 11 is_stmt 0 view .LVU139
 439 001a B0F820C0 		ldrh	ip, [r0, #32]
 440 001e 1FFA8CFC 		uxth	ip, ip
 441              	.LVL52:
2854:./FWLIB/src/stm32f10x_tim.c ****   tmp = (uint16_t)(TIM_ICPolarity << 12);
 442              		.loc 1 2854 3 is_stmt 1 view .LVU140
 443              		.loc 1 2854 7 is_stmt 0 view .LVU141
 444 0022 0C03     		lsls	r4, r1, #12
ARM GAS  /tmp/ccvVNijM.s 			page 59


 445 0024 A4B2     		uxth	r4, r4
 446              	.LVL53:
2855:./FWLIB/src/stm32f10x_tim.c ****   /* Select the Input and set the filter */
2856:./FWLIB/src/stm32f10x_tim.c ****   tmpccmr2 &= (uint16_t)((uint16_t)(~(uint16_t)TIM_CCMR2_CC4S) & ((uint16_t)~((uint16_t)TIM_CCMR2_I
 447              		.loc 1 2856 3 is_stmt 1 view .LVU142
 448              		.loc 1 2856 12 is_stmt 0 view .LVU143
 449 0026 2EF4407E 		bic	lr, lr, #768
 450              	.LVL54:
 451              		.loc 1 2856 12 view .LVU144
 452 002a 4FEA0E5E 		lsl	lr, lr, #20
 453 002e 4FEA1E5E 		lsr	lr, lr, #20
 454              	.LVL55:
2857:./FWLIB/src/stm32f10x_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_ICSelection << 8);
 455              		.loc 1 2857 3 is_stmt 1 view .LVU145
 456              		.loc 1 2857 15 is_stmt 0 view .LVU146
 457 0032 1202     		lsls	r2, r2, #8
 458              	.LVL56:
 459              		.loc 1 2857 15 view .LVU147
 460 0034 92B2     		uxth	r2, r2
 461              		.loc 1 2857 12 view .LVU148
 462 0036 42EA0E02 		orr	r2, r2, lr
 463              	.LVL57:
2858:./FWLIB/src/stm32f10x_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_ICFilter << 12);
 464              		.loc 1 2858 3 is_stmt 1 view .LVU149
 465              		.loc 1 2858 15 is_stmt 0 view .LVU150
 466 003a 1B03     		lsls	r3, r3, #12
 467              	.LVL58:
 468              		.loc 1 2858 15 view .LVU151
 469 003c 9BB2     		uxth	r3, r3
 470              		.loc 1 2858 12 view .LVU152
 471 003e 1343     		orrs	r3, r3, r2
 472              	.LVL59:
2859:./FWLIB/src/stm32f10x_tim.c ****   
2860:./FWLIB/src/stm32f10x_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8) || (TIMx == TIM2) || (TIMx == TIM3) ||
 473              		.loc 1 2860 3 is_stmt 1 view .LVU153
 474              		.loc 1 2860 5 is_stmt 0 view .LVU154
 475 0040 144A     		ldr	r2, .L27
 476 0042 9042     		cmp	r0, r2
 477 0044 1DD0     		beq	.L23
 478              		.loc 1 2860 21 discriminator 1 view .LVU155
 479 0046 02F50062 		add	r2, r2, #2048
 480 004a 9042     		cmp	r0, r2
 481 004c 19D0     		beq	.L23
 482              		.loc 1 2860 39 discriminator 2 view .LVU156
 483 004e B0F1804F 		cmp	r0, #1073741824
 484 0052 16D0     		beq	.L23
 485              		.loc 1 2860 57 discriminator 3 view .LVU157
 486 0054 A2F59832 		sub	r2, r2, #77824
 487 0058 9042     		cmp	r0, r2
 488 005a 12D0     		beq	.L23
 489              		.loc 1 2860 75 discriminator 4 view .LVU158
 490 005c 02F58062 		add	r2, r2, #1024
 491 0060 9042     		cmp	r0, r2
 492 0062 0ED0     		beq	.L23
2861:./FWLIB/src/stm32f10x_tim.c ****      (TIMx == TIM4) ||(TIMx == TIM5))
 493              		.loc 1 2861 21 view .LVU159
 494 0064 02F58062 		add	r2, r2, #1024
ARM GAS  /tmp/ccvVNijM.s 			page 60


 495 0068 9042     		cmp	r0, r2
 496 006a 0AD0     		beq	.L23
2862:./FWLIB/src/stm32f10x_tim.c ****   {
2863:./FWLIB/src/stm32f10x_tim.c ****     /* Select the Polarity and set the CC4E Bit */
2864:./FWLIB/src/stm32f10x_tim.c ****     tmpccer &= (uint16_t)~((uint16_t)(TIM_CCER_CC4P));
2865:./FWLIB/src/stm32f10x_tim.c ****     tmpccer |= (uint16_t)(tmp | (uint16_t)TIM_CCER_CC4E);
2866:./FWLIB/src/stm32f10x_tim.c ****   }
2867:./FWLIB/src/stm32f10x_tim.c ****   else
2868:./FWLIB/src/stm32f10x_tim.c ****   {
2869:./FWLIB/src/stm32f10x_tim.c ****     /* Select the Polarity and set the CC4E Bit */
2870:./FWLIB/src/stm32f10x_tim.c ****     tmpccer &= (uint16_t)~((uint16_t)(TIM_CCER_CC3P | TIM_CCER_CC4NP));
 497              		.loc 1 2870 5 is_stmt 1 view .LVU160
 498              		.loc 1 2870 13 is_stmt 0 view .LVU161
 499 006c 2CF4007C 		bic	ip, ip, #512
 500              	.LVL60:
 501              		.loc 1 2870 13 view .LVU162
 502 0070 4FEA4C4C 		lsl	ip, ip, #17
 503 0074 4FEA5C4C 		lsr	ip, ip, #17
 504              	.LVL61:
2871:./FWLIB/src/stm32f10x_tim.c ****     tmpccer |= (uint16_t)(TIM_ICPolarity | (uint16_t)TIM_CCER_CC4E);
 505              		.loc 1 2871 5 is_stmt 1 view .LVU163
 506              		.loc 1 2871 13 is_stmt 0 view .LVU164
 507 0078 41EA0C01 		orr	r1, r1, ip
 508              	.LVL62:
 509              		.loc 1 2871 13 view .LVU165
 510 007c 41F48051 		orr	r1, r1, #4096
 511 0080 04E0     		b	.L25
 512              	.LVL63:
 513              	.L23:
2864:./FWLIB/src/stm32f10x_tim.c ****     tmpccer |= (uint16_t)(tmp | (uint16_t)TIM_CCER_CC4E);
 514              		.loc 1 2864 5 is_stmt 1 view .LVU166
2864:./FWLIB/src/stm32f10x_tim.c ****     tmpccer |= (uint16_t)(tmp | (uint16_t)TIM_CCER_CC4E);
 515              		.loc 1 2864 13 is_stmt 0 view .LVU167
 516 0082 2CF40051 		bic	r1, ip, #8192
 517              	.LVL64:
2865:./FWLIB/src/stm32f10x_tim.c ****   }
 518              		.loc 1 2865 5 is_stmt 1 view .LVU168
2865:./FWLIB/src/stm32f10x_tim.c ****   }
 519              		.loc 1 2865 13 is_stmt 0 view .LVU169
 520 0086 2143     		orrs	r1, r1, r4
 521              	.LVL65:
2865:./FWLIB/src/stm32f10x_tim.c ****   }
 522              		.loc 1 2865 13 view .LVU170
 523 0088 41F48051 		orr	r1, r1, #4096
 524              	.LVL66:
 525              	.L25:
2872:./FWLIB/src/stm32f10x_tim.c ****   }
2873:./FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR2 and CCER registers */
2874:./FWLIB/src/stm32f10x_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 526              		.loc 1 2874 3 is_stmt 1 view .LVU171
 527              		.loc 1 2874 15 is_stmt 0 view .LVU172
 528 008c 8383     		strh	r3, [r0, #28]	@ movhi
2875:./FWLIB/src/stm32f10x_tim.c ****   TIMx->CCER = tmpccer;
 529              		.loc 1 2875 3 is_stmt 1 view .LVU173
 530              		.loc 1 2875 14 is_stmt 0 view .LVU174
 531 008e 0184     		strh	r1, [r0, #32]	@ movhi
2876:./FWLIB/src/stm32f10x_tim.c **** }
ARM GAS  /tmp/ccvVNijM.s 			page 61


 532              		.loc 1 2876 1 view .LVU175
 533 0090 10BD     		pop	{r4, pc}
 534              	.LVL67:
 535              	.L28:
 536              		.loc 1 2876 1 view .LVU176
 537 0092 00BF     		.align	2
 538              	.L27:
 539 0094 002C0140 		.word	1073818624
 540              		.cfi_endproc
 541              	.LFE119:
 543              		.section	.text.TIM_DeInit,"ax",%progbits
 544              		.align	1
 545              		.global	TIM_DeInit
 546              		.syntax unified
 547              		.thumb
 548              		.thumb_func
 550              	TIM_DeInit:
 551              	.LVL68:
 552              	.LFB29:
 123:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 553              		.loc 1 123 1 is_stmt 1 view -0
 554              		.cfi_startproc
 555              		@ args = 0, pretend = 0, frame = 0
 556              		@ frame_needed = 0, uses_anonymous_args = 0
 123:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 557              		.loc 1 123 1 is_stmt 0 view .LVU178
 558 0000 08B5     		push	{r3, lr}
 559              	.LCFI4:
 560              		.cfi_def_cfa_offset 8
 561              		.cfi_offset 3, -8
 562              		.cfi_offset 14, -4
 125:./FWLIB/src/stm32f10x_tim.c ****  
 563              		.loc 1 125 3 is_stmt 1 view .LVU179
 127:./FWLIB/src/stm32f10x_tim.c ****   {
 564              		.loc 1 127 3 view .LVU180
 127:./FWLIB/src/stm32f10x_tim.c ****   {
 565              		.loc 1 127 6 is_stmt 0 view .LVU181
 566 0002 724B     		ldr	r3, .L64
 567 0004 9842     		cmp	r0, r3
 568 0006 40D0     		beq	.L48
 132:./FWLIB/src/stm32f10x_tim.c ****   {
 569              		.loc 1 132 8 is_stmt 1 view .LVU182
 132:./FWLIB/src/stm32f10x_tim.c ****   {
 570              		.loc 1 132 11 is_stmt 0 view .LVU183
 571 0008 B0F1804F 		cmp	r0, #1073741824
 572 000c 48D0     		beq	.L49
 137:./FWLIB/src/stm32f10x_tim.c ****   {
 573              		.loc 1 137 8 is_stmt 1 view .LVU184
 137:./FWLIB/src/stm32f10x_tim.c ****   {
 574              		.loc 1 137 11 is_stmt 0 view .LVU185
 575 000e 704B     		ldr	r3, .L64+4
 576 0010 9842     		cmp	r0, r3
 577 0012 4ED0     		beq	.L50
 142:./FWLIB/src/stm32f10x_tim.c ****   {
 578              		.loc 1 142 8 is_stmt 1 view .LVU186
 142:./FWLIB/src/stm32f10x_tim.c ****   {
 579              		.loc 1 142 11 is_stmt 0 view .LVU187
ARM GAS  /tmp/ccvVNijM.s 			page 62


 580 0014 6F4B     		ldr	r3, .L64+8
 581 0016 9842     		cmp	r0, r3
 582 0018 54D0     		beq	.L51
 147:./FWLIB/src/stm32f10x_tim.c ****   {
 583              		.loc 1 147 8 is_stmt 1 view .LVU188
 147:./FWLIB/src/stm32f10x_tim.c ****   {
 584              		.loc 1 147 11 is_stmt 0 view .LVU189
 585 001a 6F4B     		ldr	r3, .L64+12
 586 001c 9842     		cmp	r0, r3
 587 001e 5AD0     		beq	.L52
 152:./FWLIB/src/stm32f10x_tim.c ****   {
 588              		.loc 1 152 8 is_stmt 1 view .LVU190
 152:./FWLIB/src/stm32f10x_tim.c ****   {
 589              		.loc 1 152 11 is_stmt 0 view .LVU191
 590 0020 6E4B     		ldr	r3, .L64+16
 591 0022 9842     		cmp	r0, r3
 592 0024 60D0     		beq	.L53
 157:./FWLIB/src/stm32f10x_tim.c ****   {
 593              		.loc 1 157 8 is_stmt 1 view .LVU192
 157:./FWLIB/src/stm32f10x_tim.c ****   {
 594              		.loc 1 157 11 is_stmt 0 view .LVU193
 595 0026 6E4B     		ldr	r3, .L64+20
 596 0028 9842     		cmp	r0, r3
 597 002a 66D0     		beq	.L54
 162:./FWLIB/src/stm32f10x_tim.c ****   {
 598              		.loc 1 162 8 is_stmt 1 view .LVU194
 162:./FWLIB/src/stm32f10x_tim.c ****   {
 599              		.loc 1 162 11 is_stmt 0 view .LVU195
 600 002c 6D4B     		ldr	r3, .L64+24
 601 002e 9842     		cmp	r0, r3
 602 0030 6CD0     		beq	.L55
 167:./FWLIB/src/stm32f10x_tim.c ****   {      
 603              		.loc 1 167 8 is_stmt 1 view .LVU196
 167:./FWLIB/src/stm32f10x_tim.c ****   {      
 604              		.loc 1 167 11 is_stmt 0 view .LVU197
 605 0032 6D4B     		ldr	r3, .L64+28
 606 0034 9842     		cmp	r0, r3
 607 0036 74D0     		beq	.L56
 172:./FWLIB/src/stm32f10x_tim.c ****   {      
 608              		.loc 1 172 8 is_stmt 1 view .LVU198
 172:./FWLIB/src/stm32f10x_tim.c ****   {      
 609              		.loc 1 172 11 is_stmt 0 view .LVU199
 610 0038 6C4B     		ldr	r3, .L64+32
 611 003a 9842     		cmp	r0, r3
 612 003c 7CD0     		beq	.L57
 177:./FWLIB/src/stm32f10x_tim.c ****   {     
 613              		.loc 1 177 8 is_stmt 1 view .LVU200
 177:./FWLIB/src/stm32f10x_tim.c ****   {     
 614              		.loc 1 177 11 is_stmt 0 view .LVU201
 615 003e 6C4B     		ldr	r3, .L64+36
 616 0040 9842     		cmp	r0, r3
 617 0042 00F08480 		beq	.L58
 182:./FWLIB/src/stm32f10x_tim.c ****   {      
 618              		.loc 1 182 8 is_stmt 1 view .LVU202
 182:./FWLIB/src/stm32f10x_tim.c ****   {      
 619              		.loc 1 182 11 is_stmt 0 view .LVU203
 620 0046 6B4B     		ldr	r3, .L64+40
ARM GAS  /tmp/ccvVNijM.s 			page 63


 621 0048 9842     		cmp	r0, r3
 622 004a 00F08B80 		beq	.L59
 187:./FWLIB/src/stm32f10x_tim.c ****   {       
 623              		.loc 1 187 8 is_stmt 1 view .LVU204
 187:./FWLIB/src/stm32f10x_tim.c ****   {       
 624              		.loc 1 187 11 is_stmt 0 view .LVU205
 625 004e 6A4B     		ldr	r3, .L64+44
 626 0050 9842     		cmp	r0, r3
 627 0052 00F09080 		beq	.L60
 192:./FWLIB/src/stm32f10x_tim.c ****   {       
 628              		.loc 1 192 8 is_stmt 1 view .LVU206
 192:./FWLIB/src/stm32f10x_tim.c ****   {       
 629              		.loc 1 192 11 is_stmt 0 view .LVU207
 630 0056 694B     		ldr	r3, .L64+48
 631 0058 9842     		cmp	r0, r3
 632 005a 00F09580 		beq	.L61
 197:./FWLIB/src/stm32f10x_tim.c ****   {
 633              		.loc 1 197 8 is_stmt 1 view .LVU208
 197:./FWLIB/src/stm32f10x_tim.c ****   {
 634              		.loc 1 197 11 is_stmt 0 view .LVU209
 635 005e 684B     		ldr	r3, .L64+52
 636 0060 9842     		cmp	r0, r3
 637 0062 00F09C80 		beq	.L62
 202:./FWLIB/src/stm32f10x_tim.c ****   {
 638              		.loc 1 202 8 is_stmt 1 view .LVU210
 202:./FWLIB/src/stm32f10x_tim.c ****   {
 639              		.loc 1 202 11 is_stmt 0 view .LVU211
 640 0066 674B     		ldr	r3, .L64+56
 641 0068 9842     		cmp	r0, r3
 642 006a 00F0A380 		beq	.L63
 209:./FWLIB/src/stm32f10x_tim.c ****     {
 643              		.loc 1 209 5 is_stmt 1 view .LVU212
 209:./FWLIB/src/stm32f10x_tim.c ****     {
 644              		.loc 1 209 8 is_stmt 0 view .LVU213
 645 006e 664B     		ldr	r3, .L64+60
 646 0070 9842     		cmp	r0, r3
 647 0072 14D1     		bne	.L29
 211:./FWLIB/src/stm32f10x_tim.c ****       RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM17, DISABLE);
 648              		.loc 1 211 7 is_stmt 1 view .LVU214
 649 0074 0121     		movs	r1, #1
 650 0076 4FF48020 		mov	r0, #262144
 651              	.LVL69:
 211:./FWLIB/src/stm32f10x_tim.c ****       RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM17, DISABLE);
 652              		.loc 1 211 7 is_stmt 0 view .LVU215
 653 007a FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 654              	.LVL70:
 212:./FWLIB/src/stm32f10x_tim.c ****     }  
 655              		.loc 1 212 7 is_stmt 1 view .LVU216
 656 007e 0021     		movs	r1, #0
 657 0080 4FF48020 		mov	r0, #262144
 658 0084 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 659              	.LVL71:
 215:./FWLIB/src/stm32f10x_tim.c **** 
 660              		.loc 1 215 1 is_stmt 0 view .LVU217
 661 0088 09E0     		b	.L29
 662              	.LVL72:
 663              	.L48:
ARM GAS  /tmp/ccvVNijM.s 			page 64


 129:./FWLIB/src/stm32f10x_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM1, DISABLE);  
 664              		.loc 1 129 5 is_stmt 1 view .LVU218
 665 008a 0121     		movs	r1, #1
 666 008c 4FF40060 		mov	r0, #2048
 667              	.LVL73:
 129:./FWLIB/src/stm32f10x_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM1, DISABLE);  
 668              		.loc 1 129 5 is_stmt 0 view .LVU219
 669 0090 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 670              	.LVL74:
 130:./FWLIB/src/stm32f10x_tim.c ****   }     
 671              		.loc 1 130 5 is_stmt 1 view .LVU220
 672 0094 0021     		movs	r1, #0
 673 0096 4FF40060 		mov	r0, #2048
 674 009a FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 675              	.LVL75:
 676              	.L29:
 215:./FWLIB/src/stm32f10x_tim.c **** 
 677              		.loc 1 215 1 is_stmt 0 view .LVU221
 678 009e 08BD     		pop	{r3, pc}
 679              	.LVL76:
 680              	.L49:
 134:./FWLIB/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM2, DISABLE);
 681              		.loc 1 134 5 is_stmt 1 view .LVU222
 682 00a0 0121     		movs	r1, #1
 683 00a2 0846     		mov	r0, r1
 684              	.LVL77:
 134:./FWLIB/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM2, DISABLE);
 685              		.loc 1 134 5 is_stmt 0 view .LVU223
 686 00a4 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 687              	.LVL78:
 135:./FWLIB/src/stm32f10x_tim.c ****   }
 688              		.loc 1 135 5 is_stmt 1 view .LVU224
 689 00a8 0021     		movs	r1, #0
 690 00aa 0120     		movs	r0, #1
 691 00ac FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 692              	.LVL79:
 693 00b0 F5E7     		b	.L29
 694              	.LVL80:
 695              	.L50:
 139:./FWLIB/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM3, DISABLE);
 696              		.loc 1 139 5 view .LVU225
 697 00b2 0121     		movs	r1, #1
 698 00b4 0220     		movs	r0, #2
 699              	.LVL81:
 139:./FWLIB/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM3, DISABLE);
 700              		.loc 1 139 5 is_stmt 0 view .LVU226
 701 00b6 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 702              	.LVL82:
 140:./FWLIB/src/stm32f10x_tim.c ****   }
 703              		.loc 1 140 5 is_stmt 1 view .LVU227
 704 00ba 0021     		movs	r1, #0
 705 00bc 0220     		movs	r0, #2
 706 00be FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 707              	.LVL83:
 708 00c2 ECE7     		b	.L29
 709              	.LVL84:
 710              	.L51:
ARM GAS  /tmp/ccvVNijM.s 			page 65


 144:./FWLIB/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM4, DISABLE);
 711              		.loc 1 144 5 view .LVU228
 712 00c4 0121     		movs	r1, #1
 713 00c6 0420     		movs	r0, #4
 714              	.LVL85:
 144:./FWLIB/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM4, DISABLE);
 715              		.loc 1 144 5 is_stmt 0 view .LVU229
 716 00c8 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 717              	.LVL86:
 145:./FWLIB/src/stm32f10x_tim.c ****   } 
 718              		.loc 1 145 5 is_stmt 1 view .LVU230
 719 00cc 0021     		movs	r1, #0
 720 00ce 0420     		movs	r0, #4
 721 00d0 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 722              	.LVL87:
 723 00d4 E3E7     		b	.L29
 724              	.LVL88:
 725              	.L52:
 149:./FWLIB/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM5, DISABLE);
 726              		.loc 1 149 5 view .LVU231
 727 00d6 0121     		movs	r1, #1
 728 00d8 0820     		movs	r0, #8
 729              	.LVL89:
 149:./FWLIB/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM5, DISABLE);
 730              		.loc 1 149 5 is_stmt 0 view .LVU232
 731 00da FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 732              	.LVL90:
 150:./FWLIB/src/stm32f10x_tim.c ****   } 
 733              		.loc 1 150 5 is_stmt 1 view .LVU233
 734 00de 0021     		movs	r1, #0
 735 00e0 0820     		movs	r0, #8
 736 00e2 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 737              	.LVL91:
 738 00e6 DAE7     		b	.L29
 739              	.LVL92:
 740              	.L53:
 154:./FWLIB/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM6, DISABLE);
 741              		.loc 1 154 5 view .LVU234
 742 00e8 0121     		movs	r1, #1
 743 00ea 1020     		movs	r0, #16
 744              	.LVL93:
 154:./FWLIB/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM6, DISABLE);
 745              		.loc 1 154 5 is_stmt 0 view .LVU235
 746 00ec FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 747              	.LVL94:
 155:./FWLIB/src/stm32f10x_tim.c ****   } 
 748              		.loc 1 155 5 is_stmt 1 view .LVU236
 749 00f0 0021     		movs	r1, #0
 750 00f2 1020     		movs	r0, #16
 751 00f4 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 752              	.LVL95:
 753 00f8 D1E7     		b	.L29
 754              	.LVL96:
 755              	.L54:
 159:./FWLIB/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM7, DISABLE);
 756              		.loc 1 159 5 view .LVU237
 757 00fa 0121     		movs	r1, #1
ARM GAS  /tmp/ccvVNijM.s 			page 66


 758 00fc 2020     		movs	r0, #32
 759              	.LVL97:
 159:./FWLIB/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM7, DISABLE);
 760              		.loc 1 159 5 is_stmt 0 view .LVU238
 761 00fe FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 762              	.LVL98:
 160:./FWLIB/src/stm32f10x_tim.c ****   } 
 763              		.loc 1 160 5 is_stmt 1 view .LVU239
 764 0102 0021     		movs	r1, #0
 765 0104 2020     		movs	r0, #32
 766 0106 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 767              	.LVL99:
 768 010a C8E7     		b	.L29
 769              	.LVL100:
 770              	.L55:
 164:./FWLIB/src/stm32f10x_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM8, DISABLE);
 771              		.loc 1 164 5 view .LVU240
 772 010c 0121     		movs	r1, #1
 773 010e 4FF40050 		mov	r0, #8192
 774              	.LVL101:
 164:./FWLIB/src/stm32f10x_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM8, DISABLE);
 775              		.loc 1 164 5 is_stmt 0 view .LVU241
 776 0112 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 777              	.LVL102:
 165:./FWLIB/src/stm32f10x_tim.c ****   }
 778              		.loc 1 165 5 is_stmt 1 view .LVU242
 779 0116 0021     		movs	r1, #0
 780 0118 4FF40050 		mov	r0, #8192
 781 011c FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 782              	.LVL103:
 783 0120 BDE7     		b	.L29
 784              	.LVL104:
 785              	.L56:
 169:./FWLIB/src/stm32f10x_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM9, DISABLE);  
 786              		.loc 1 169 5 view .LVU243
 787 0122 0121     		movs	r1, #1
 788 0124 4FF40020 		mov	r0, #524288
 789              	.LVL105:
 169:./FWLIB/src/stm32f10x_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM9, DISABLE);  
 790              		.loc 1 169 5 is_stmt 0 view .LVU244
 791 0128 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 792              	.LVL106:
 170:./FWLIB/src/stm32f10x_tim.c ****    }  
 793              		.loc 1 170 5 is_stmt 1 view .LVU245
 794 012c 0021     		movs	r1, #0
 795 012e 4FF40020 		mov	r0, #524288
 796 0132 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 797              	.LVL107:
 798 0136 B2E7     		b	.L29
 799              	.LVL108:
 800              	.L57:
 174:./FWLIB/src/stm32f10x_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM10, DISABLE);  
 801              		.loc 1 174 5 view .LVU246
 802 0138 0121     		movs	r1, #1
 803 013a 4FF48010 		mov	r0, #1048576
 804              	.LVL109:
 174:./FWLIB/src/stm32f10x_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM10, DISABLE);  
ARM GAS  /tmp/ccvVNijM.s 			page 67


 805              		.loc 1 174 5 is_stmt 0 view .LVU247
 806 013e FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 807              	.LVL110:
 175:./FWLIB/src/stm32f10x_tim.c ****   }  
 808              		.loc 1 175 5 is_stmt 1 view .LVU248
 809 0142 0021     		movs	r1, #0
 810 0144 4FF48010 		mov	r0, #1048576
 811 0148 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 812              	.LVL111:
 813 014c A7E7     		b	.L29
 814              	.LVL112:
 815              	.L58:
 179:./FWLIB/src/stm32f10x_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM11, DISABLE);  
 816              		.loc 1 179 5 view .LVU249
 817 014e 0121     		movs	r1, #1
 818 0150 4FF40010 		mov	r0, #2097152
 819              	.LVL113:
 179:./FWLIB/src/stm32f10x_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM11, DISABLE);  
 820              		.loc 1 179 5 is_stmt 0 view .LVU250
 821 0154 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 822              	.LVL114:
 180:./FWLIB/src/stm32f10x_tim.c ****   }  
 823              		.loc 1 180 5 is_stmt 1 view .LVU251
 824 0158 0021     		movs	r1, #0
 825 015a 4FF40010 		mov	r0, #2097152
 826 015e FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 827              	.LVL115:
 828 0162 9CE7     		b	.L29
 829              	.LVL116:
 830              	.L59:
 184:./FWLIB/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM12, DISABLE);  
 831              		.loc 1 184 5 view .LVU252
 832 0164 0121     		movs	r1, #1
 833 0166 4020     		movs	r0, #64
 834              	.LVL117:
 184:./FWLIB/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM12, DISABLE);  
 835              		.loc 1 184 5 is_stmt 0 view .LVU253
 836 0168 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 837              	.LVL118:
 185:./FWLIB/src/stm32f10x_tim.c ****   }  
 838              		.loc 1 185 5 is_stmt 1 view .LVU254
 839 016c 0021     		movs	r1, #0
 840 016e 4020     		movs	r0, #64
 841 0170 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 842              	.LVL119:
 843 0174 93E7     		b	.L29
 844              	.LVL120:
 845              	.L60:
 189:./FWLIB/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM13, DISABLE);  
 846              		.loc 1 189 5 view .LVU255
 847 0176 0121     		movs	r1, #1
 848 0178 8020     		movs	r0, #128
 849              	.LVL121:
 189:./FWLIB/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM13, DISABLE);  
 850              		.loc 1 189 5 is_stmt 0 view .LVU256
 851 017a FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 852              	.LVL122:
ARM GAS  /tmp/ccvVNijM.s 			page 68


 190:./FWLIB/src/stm32f10x_tim.c ****   }
 853              		.loc 1 190 5 is_stmt 1 view .LVU257
 854 017e 0021     		movs	r1, #0
 855 0180 8020     		movs	r0, #128
 856 0182 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 857              	.LVL123:
 858 0186 8AE7     		b	.L29
 859              	.LVL124:
 860              	.L61:
 194:./FWLIB/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM14, DISABLE);  
 861              		.loc 1 194 5 view .LVU258
 862 0188 0121     		movs	r1, #1
 863 018a 4FF48070 		mov	r0, #256
 864              	.LVL125:
 194:./FWLIB/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM14, DISABLE);  
 865              		.loc 1 194 5 is_stmt 0 view .LVU259
 866 018e FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 867              	.LVL126:
 195:./FWLIB/src/stm32f10x_tim.c ****   }        
 868              		.loc 1 195 5 is_stmt 1 view .LVU260
 869 0192 0021     		movs	r1, #0
 870 0194 4FF48070 		mov	r0, #256
 871 0198 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 872              	.LVL127:
 873 019c 7FE7     		b	.L29
 874              	.LVL128:
 875              	.L62:
 199:./FWLIB/src/stm32f10x_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM15, DISABLE);
 876              		.loc 1 199 5 view .LVU261
 877 019e 0121     		movs	r1, #1
 878 01a0 4FF48030 		mov	r0, #65536
 879              	.LVL129:
 199:./FWLIB/src/stm32f10x_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM15, DISABLE);
 880              		.loc 1 199 5 is_stmt 0 view .LVU262
 881 01a4 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 882              	.LVL130:
 200:./FWLIB/src/stm32f10x_tim.c ****   } 
 883              		.loc 1 200 5 is_stmt 1 view .LVU263
 884 01a8 0021     		movs	r1, #0
 885 01aa 4FF48030 		mov	r0, #65536
 886 01ae FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 887              	.LVL131:
 888 01b2 74E7     		b	.L29
 889              	.LVL132:
 890              	.L63:
 204:./FWLIB/src/stm32f10x_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM16, DISABLE);
 891              		.loc 1 204 5 view .LVU264
 892 01b4 0121     		movs	r1, #1
 893 01b6 4FF40030 		mov	r0, #131072
 894              	.LVL133:
 204:./FWLIB/src/stm32f10x_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM16, DISABLE);
 895              		.loc 1 204 5 is_stmt 0 view .LVU265
 896 01ba FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 897              	.LVL134:
 205:./FWLIB/src/stm32f10x_tim.c ****   } 
 898              		.loc 1 205 5 is_stmt 1 view .LVU266
 899 01be 0021     		movs	r1, #0
ARM GAS  /tmp/ccvVNijM.s 			page 69


 900 01c0 4FF40030 		mov	r0, #131072
 901 01c4 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 902              	.LVL135:
 903 01c8 69E7     		b	.L29
 904              	.L65:
 905 01ca 00BF     		.align	2
 906              	.L64:
 907 01cc 002C0140 		.word	1073818624
 908 01d0 00040040 		.word	1073742848
 909 01d4 00080040 		.word	1073743872
 910 01d8 000C0040 		.word	1073744896
 911 01dc 00100040 		.word	1073745920
 912 01e0 00140040 		.word	1073746944
 913 01e4 00340140 		.word	1073820672
 914 01e8 004C0140 		.word	1073826816
 915 01ec 00500140 		.word	1073827840
 916 01f0 00540140 		.word	1073828864
 917 01f4 00180040 		.word	1073747968
 918 01f8 001C0040 		.word	1073748992
 919 01fc 00200040 		.word	1073750016
 920 0200 00400140 		.word	1073823744
 921 0204 00440140 		.word	1073824768
 922 0208 00480140 		.word	1073825792
 923              		.cfi_endproc
 924              	.LFE29:
 926              		.section	.text.TIM_TimeBaseInit,"ax",%progbits
 927              		.align	1
 928              		.global	TIM_TimeBaseInit
 929              		.syntax unified
 930              		.thumb
 931              		.thumb_func
 933              	TIM_TimeBaseInit:
 934              	.LVL136:
 935              	.LFB30:
 227:./FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpcr1 = 0;
 936              		.loc 1 227 1 view -0
 937              		.cfi_startproc
 938              		@ args = 0, pretend = 0, frame = 0
 939              		@ frame_needed = 0, uses_anonymous_args = 0
 940              		@ link register save eliminated.
 228:./FWLIB/src/stm32f10x_tim.c **** 
 941              		.loc 1 228 3 view .LVU268
 231:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_COUNTER_MODE(TIM_TimeBaseInitStruct->TIM_CounterMode));
 942              		.loc 1 231 3 view .LVU269
 232:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_CKD_DIV(TIM_TimeBaseInitStruct->TIM_ClockDivision));
 943              		.loc 1 232 3 view .LVU270
 233:./FWLIB/src/stm32f10x_tim.c **** 
 944              		.loc 1 233 3 view .LVU271
 235:./FWLIB/src/stm32f10x_tim.c **** 
 945              		.loc 1 235 3 view .LVU272
 235:./FWLIB/src/stm32f10x_tim.c **** 
 946              		.loc 1 235 10 is_stmt 0 view .LVU273
 947 0000 0388     		ldrh	r3, [r0]
 948 0002 9BB2     		uxth	r3, r3
 949              	.LVL137:
 237:./FWLIB/src/stm32f10x_tim.c ****      (TIMx == TIM4) || (TIMx == TIM5)) 
 950              		.loc 1 237 3 is_stmt 1 view .LVU274
ARM GAS  /tmp/ccvVNijM.s 			page 70


 237:./FWLIB/src/stm32f10x_tim.c ****      (TIMx == TIM4) || (TIMx == TIM5)) 
 951              		.loc 1 237 5 is_stmt 0 view .LVU275
 952 0004 214A     		ldr	r2, .L72
 953 0006 9042     		cmp	r0, r2
 954 0008 12D0     		beq	.L67
 237:./FWLIB/src/stm32f10x_tim.c ****      (TIMx == TIM4) || (TIMx == TIM5)) 
 955              		.loc 1 237 21 discriminator 1 view .LVU276
 956 000a 02F50062 		add	r2, r2, #2048
 957 000e 9042     		cmp	r0, r2
 958 0010 0ED0     		beq	.L67
 237:./FWLIB/src/stm32f10x_tim.c ****      (TIMx == TIM4) || (TIMx == TIM5)) 
 959              		.loc 1 237 38 discriminator 2 view .LVU277
 960 0012 B0F1804F 		cmp	r0, #1073741824
 961 0016 0BD0     		beq	.L67
 237:./FWLIB/src/stm32f10x_tim.c ****      (TIMx == TIM4) || (TIMx == TIM5)) 
 962              		.loc 1 237 56 discriminator 3 view .LVU278
 963 0018 A2F59832 		sub	r2, r2, #77824
 964 001c 9042     		cmp	r0, r2
 965 001e 07D0     		beq	.L67
 237:./FWLIB/src/stm32f10x_tim.c ****      (TIMx == TIM4) || (TIMx == TIM5)) 
 966              		.loc 1 237 73 discriminator 4 view .LVU279
 967 0020 02F58062 		add	r2, r2, #1024
 968 0024 9042     		cmp	r0, r2
 969 0026 03D0     		beq	.L67
 238:./FWLIB/src/stm32f10x_tim.c ****   {
 970              		.loc 1 238 21 view .LVU280
 971 0028 02F58062 		add	r2, r2, #1024
 972 002c 9042     		cmp	r0, r2
 973 002e 03D1     		bne	.L68
 974              	.L67:
 241:./FWLIB/src/stm32f10x_tim.c ****     tmpcr1 |= (uint32_t)TIM_TimeBaseInitStruct->TIM_CounterMode;
 975              		.loc 1 241 5 is_stmt 1 view .LVU281
 241:./FWLIB/src/stm32f10x_tim.c ****     tmpcr1 |= (uint32_t)TIM_TimeBaseInitStruct->TIM_CounterMode;
 976              		.loc 1 241 12 is_stmt 0 view .LVU282
 977 0030 23F07003 		bic	r3, r3, #112
 978              	.LVL138:
 242:./FWLIB/src/stm32f10x_tim.c ****   }
 979              		.loc 1 242 5 is_stmt 1 view .LVU283
 242:./FWLIB/src/stm32f10x_tim.c ****   }
 980              		.loc 1 242 47 is_stmt 0 view .LVU284
 981 0034 4A88     		ldrh	r2, [r1, #2]
 242:./FWLIB/src/stm32f10x_tim.c ****   }
 982              		.loc 1 242 12 view .LVU285
 983 0036 1343     		orrs	r3, r3, r2
 984              	.LVL139:
 985              	.L68:
 245:./FWLIB/src/stm32f10x_tim.c ****   {
 986              		.loc 1 245 3 is_stmt 1 view .LVU286
 245:./FWLIB/src/stm32f10x_tim.c ****   {
 987              		.loc 1 245 5 is_stmt 0 view .LVU287
 988 0038 154A     		ldr	r2, .L72+4
 989 003a 9042     		cmp	r0, r2
 990 003c 08D0     		beq	.L69
 245:./FWLIB/src/stm32f10x_tim.c ****   {
 991              		.loc 1 245 21 discriminator 1 view .LVU288
 992 003e 02F58062 		add	r2, r2, #1024
 993 0042 9042     		cmp	r0, r2
ARM GAS  /tmp/ccvVNijM.s 			page 71


 994 0044 04D0     		beq	.L69
 248:./FWLIB/src/stm32f10x_tim.c ****     tmpcr1 |= (uint32_t)TIM_TimeBaseInitStruct->TIM_ClockDivision;
 995              		.loc 1 248 5 is_stmt 1 view .LVU289
 248:./FWLIB/src/stm32f10x_tim.c ****     tmpcr1 |= (uint32_t)TIM_TimeBaseInitStruct->TIM_ClockDivision;
 996              		.loc 1 248 12 is_stmt 0 view .LVU290
 997 0046 23F44073 		bic	r3, r3, #768
 998              	.LVL140:
 248:./FWLIB/src/stm32f10x_tim.c ****     tmpcr1 |= (uint32_t)TIM_TimeBaseInitStruct->TIM_ClockDivision;
 999              		.loc 1 248 12 view .LVU291
 1000 004a 9BB2     		uxth	r3, r3
 1001              	.LVL141:
 249:./FWLIB/src/stm32f10x_tim.c ****   }
 1002              		.loc 1 249 5 is_stmt 1 view .LVU292
 249:./FWLIB/src/stm32f10x_tim.c ****   }
 1003              		.loc 1 249 47 is_stmt 0 view .LVU293
 1004 004c CA88     		ldrh	r2, [r1, #6]
 249:./FWLIB/src/stm32f10x_tim.c ****   }
 1005              		.loc 1 249 12 view .LVU294
 1006 004e 1343     		orrs	r3, r3, r2
 1007              	.LVL142:
 1008              	.L69:
 252:./FWLIB/src/stm32f10x_tim.c **** 
 1009              		.loc 1 252 3 is_stmt 1 view .LVU295
 252:./FWLIB/src/stm32f10x_tim.c **** 
 1010              		.loc 1 252 13 is_stmt 0 view .LVU296
 1011 0050 0380     		strh	r3, [r0]	@ movhi
 255:./FWLIB/src/stm32f10x_tim.c ****  
 1012              		.loc 1 255 3 is_stmt 1 view .LVU297
 255:./FWLIB/src/stm32f10x_tim.c ****  
 1013              		.loc 1 255 37 is_stmt 0 view .LVU298
 1014 0052 8B88     		ldrh	r3, [r1, #4]
 1015              	.LVL143:
 255:./FWLIB/src/stm32f10x_tim.c ****  
 1016              		.loc 1 255 13 view .LVU299
 1017 0054 8385     		strh	r3, [r0, #44]	@ movhi
 1018              	.LVL144:
 258:./FWLIB/src/stm32f10x_tim.c ****     
 1019              		.loc 1 258 3 is_stmt 1 view .LVU300
 258:./FWLIB/src/stm32f10x_tim.c ****     
 1020              		.loc 1 258 37 is_stmt 0 view .LVU301
 1021 0056 0B88     		ldrh	r3, [r1]
 258:./FWLIB/src/stm32f10x_tim.c ****     
 1022              		.loc 1 258 13 view .LVU302
 1023 0058 0385     		strh	r3, [r0, #40]	@ movhi
 260:./FWLIB/src/stm32f10x_tim.c ****   {
 1024              		.loc 1 260 3 is_stmt 1 view .LVU303
 260:./FWLIB/src/stm32f10x_tim.c ****   {
 1025              		.loc 1 260 6 is_stmt 0 view .LVU304
 1026 005a 0C4B     		ldr	r3, .L72
 1027 005c 9842     		cmp	r0, r3
 1028 005e 0FD0     		beq	.L70
 260:./FWLIB/src/stm32f10x_tim.c ****   {
 1029              		.loc 1 260 22 discriminator 1 view .LVU305
 1030 0060 03F50063 		add	r3, r3, #2048
 1031 0064 9842     		cmp	r0, r3
 1032 0066 0BD0     		beq	.L70
 260:./FWLIB/src/stm32f10x_tim.c ****   {
ARM GAS  /tmp/ccvVNijM.s 			page 72


 1033              		.loc 1 260 39 discriminator 2 view .LVU306
 1034 0068 03F54063 		add	r3, r3, #3072
 1035 006c 9842     		cmp	r0, r3
 1036 006e 07D0     		beq	.L70
 260:./FWLIB/src/stm32f10x_tim.c ****   {
 1037              		.loc 1 260 57 discriminator 3 view .LVU307
 1038 0070 03F58063 		add	r3, r3, #1024
 1039 0074 9842     		cmp	r0, r3
 1040 0076 03D0     		beq	.L70
 260:./FWLIB/src/stm32f10x_tim.c ****   {
 1041              		.loc 1 260 76 discriminator 4 view .LVU308
 1042 0078 03F58063 		add	r3, r3, #1024
 1043 007c 9842     		cmp	r0, r3
 1044 007e 01D1     		bne	.L71
 1045              	.L70:
 263:./FWLIB/src/stm32f10x_tim.c ****   }
 1046              		.loc 1 263 5 is_stmt 1 view .LVU309
 263:./FWLIB/src/stm32f10x_tim.c ****   }
 1047              		.loc 1 263 39 is_stmt 0 view .LVU310
 1048 0080 0B7A     		ldrb	r3, [r1, #8]	@ zero_extendqisi2
 263:./FWLIB/src/stm32f10x_tim.c ****   }
 1049              		.loc 1 263 15 view .LVU311
 1050 0082 0386     		strh	r3, [r0, #48]	@ movhi
 1051              	.L71:
 268:./FWLIB/src/stm32f10x_tim.c **** }
 1052              		.loc 1 268 3 is_stmt 1 view .LVU312
 268:./FWLIB/src/stm32f10x_tim.c **** }
 1053              		.loc 1 268 13 is_stmt 0 view .LVU313
 1054 0084 0123     		movs	r3, #1
 1055 0086 8382     		strh	r3, [r0, #20]	@ movhi
 269:./FWLIB/src/stm32f10x_tim.c **** 
 1056              		.loc 1 269 1 view .LVU314
 1057 0088 7047     		bx	lr
 1058              	.L73:
 1059 008a 00BF     		.align	2
 1060              	.L72:
 1061 008c 002C0140 		.word	1073818624
 1062 0090 00100040 		.word	1073745920
 1063              		.cfi_endproc
 1064              	.LFE30:
 1066              		.section	.text.TIM_OC1Init,"ax",%progbits
 1067              		.align	1
 1068              		.global	TIM_OC1Init
 1069              		.syntax unified
 1070              		.thumb
 1071              		.thumb_func
 1073              	TIM_OC1Init:
 1074              	.LVL145:
 1075              	.LFB31:
 280:./FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpccmrx = 0, tmpccer = 0, tmpcr2 = 0;
 1076              		.loc 1 280 1 is_stmt 1 view -0
 1077              		.cfi_startproc
 1078              		@ args = 0, pretend = 0, frame = 0
 1079              		@ frame_needed = 0, uses_anonymous_args = 0
 280:./FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpccmrx = 0, tmpccer = 0, tmpcr2 = 0;
 1080              		.loc 1 280 1 is_stmt 0 view .LVU316
 1081 0000 00B5     		push	{lr}
ARM GAS  /tmp/ccvVNijM.s 			page 73


 1082              	.LCFI5:
 1083              		.cfi_def_cfa_offset 4
 1084              		.cfi_offset 14, -4
 281:./FWLIB/src/stm32f10x_tim.c ****    
 1085              		.loc 1 281 3 is_stmt 1 view .LVU317
 1086              	.LVL146:
 284:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OC_MODE(TIM_OCInitStruct->TIM_OCMode));
 1087              		.loc 1 284 3 view .LVU318
 285:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OUTPUT_STATE(TIM_OCInitStruct->TIM_OutputState));
 1088              		.loc 1 285 3 view .LVU319
 286:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCInitStruct->TIM_OCPolarity));   
 1089              		.loc 1 286 3 view .LVU320
 287:./FWLIB/src/stm32f10x_tim.c ****  /* Disable the Channel 1: Reset the CC1E Bit */
 1090              		.loc 1 287 3 view .LVU321
 289:./FWLIB/src/stm32f10x_tim.c ****   /* Get the TIMx CCER register value */
 1091              		.loc 1 289 3 view .LVU322
 289:./FWLIB/src/stm32f10x_tim.c ****   /* Get the TIMx CCER register value */
 1092              		.loc 1 289 7 is_stmt 0 view .LVU323
 1093 0002 038C     		ldrh	r3, [r0, #32]
 1094 0004 9BB2     		uxth	r3, r3
 289:./FWLIB/src/stm32f10x_tim.c ****   /* Get the TIMx CCER register value */
 1095              		.loc 1 289 14 view .LVU324
 1096 0006 23F00103 		bic	r3, r3, #1
 1097 000a 9BB2     		uxth	r3, r3
 1098 000c 0384     		strh	r3, [r0, #32]	@ movhi
 291:./FWLIB/src/stm32f10x_tim.c ****   /* Get the TIMx CR2 register value */
 1099              		.loc 1 291 3 is_stmt 1 view .LVU325
 291:./FWLIB/src/stm32f10x_tim.c ****   /* Get the TIMx CR2 register value */
 1100              		.loc 1 291 11 is_stmt 0 view .LVU326
 1101 000e 028C     		ldrh	r2, [r0, #32]
 1102 0010 92B2     		uxth	r2, r2
 1103              	.LVL147:
 293:./FWLIB/src/stm32f10x_tim.c ****   
 1104              		.loc 1 293 3 is_stmt 1 view .LVU327
 293:./FWLIB/src/stm32f10x_tim.c ****   
 1105              		.loc 1 293 10 is_stmt 0 view .LVU328
 1106 0012 B0F804C0 		ldrh	ip, [r0, #4]
 1107 0016 1FFA8CFC 		uxth	ip, ip
 1108              	.LVL148:
 296:./FWLIB/src/stm32f10x_tim.c ****     
 1109              		.loc 1 296 3 is_stmt 1 view .LVU329
 296:./FWLIB/src/stm32f10x_tim.c ****     
 1110              		.loc 1 296 12 is_stmt 0 view .LVU330
 1111 001a 038B     		ldrh	r3, [r0, #24]
 1112 001c 9BB2     		uxth	r3, r3
 1113              	.LVL149:
 299:./FWLIB/src/stm32f10x_tim.c ****   tmpccmrx &= (uint16_t)(~((uint16_t)TIM_CCMR1_CC1S));
 1114              		.loc 1 299 3 is_stmt 1 view .LVU331
 300:./FWLIB/src/stm32f10x_tim.c **** 
 1115              		.loc 1 300 3 view .LVU332
 300:./FWLIB/src/stm32f10x_tim.c **** 
 1116              		.loc 1 300 12 is_stmt 0 view .LVU333
 1117 001e 23F07303 		bic	r3, r3, #115
 1118              	.LVL150:
 303:./FWLIB/src/stm32f10x_tim.c ****   
 1119              		.loc 1 303 3 is_stmt 1 view .LVU334
 303:./FWLIB/src/stm32f10x_tim.c ****   
ARM GAS  /tmp/ccvVNijM.s 			page 74


 1120              		.loc 1 303 31 is_stmt 0 view .LVU335
 1121 0022 B1F800E0 		ldrh	lr, [r1]
 303:./FWLIB/src/stm32f10x_tim.c ****   
 1122              		.loc 1 303 12 view .LVU336
 1123 0026 43EA0E0E 		orr	lr, r3, lr
 1124              	.LVL151:
 306:./FWLIB/src/stm32f10x_tim.c ****   /* Set the Output Compare Polarity */
 1125              		.loc 1 306 3 is_stmt 1 view .LVU337
 306:./FWLIB/src/stm32f10x_tim.c ****   /* Set the Output Compare Polarity */
 1126              		.loc 1 306 11 is_stmt 0 view .LVU338
 1127 002a 22F00202 		bic	r2, r2, #2
 1128              	.LVL152:
 308:./FWLIB/src/stm32f10x_tim.c ****   
 1129              		.loc 1 308 3 is_stmt 1 view .LVU339
 308:./FWLIB/src/stm32f10x_tim.c ****   
 1130              		.loc 1 308 30 is_stmt 0 view .LVU340
 1131 002e 0B89     		ldrh	r3, [r1, #8]
 308:./FWLIB/src/stm32f10x_tim.c ****   
 1132              		.loc 1 308 11 view .LVU341
 1133 0030 1A43     		orrs	r2, r2, r3
 1134              	.LVL153:
 311:./FWLIB/src/stm32f10x_tim.c ****     
 1135              		.loc 1 311 3 is_stmt 1 view .LVU342
 311:./FWLIB/src/stm32f10x_tim.c ****     
 1136              		.loc 1 311 30 is_stmt 0 view .LVU343
 1137 0032 4B88     		ldrh	r3, [r1, #2]
 311:./FWLIB/src/stm32f10x_tim.c ****     
 1138              		.loc 1 311 11 view .LVU344
 1139 0034 1343     		orrs	r3, r3, r2
 1140              	.LVL154:
 313:./FWLIB/src/stm32f10x_tim.c ****      (TIMx == TIM16)|| (TIMx == TIM17))
 1141              		.loc 1 313 3 is_stmt 1 view .LVU345
 313:./FWLIB/src/stm32f10x_tim.c ****      (TIMx == TIM16)|| (TIMx == TIM17))
 1142              		.loc 1 313 5 is_stmt 0 view .LVU346
 1143 0036 164A     		ldr	r2, .L78
 1144 0038 9042     		cmp	r0, r2
 1145 003a 0FD0     		beq	.L75
 313:./FWLIB/src/stm32f10x_tim.c ****      (TIMx == TIM16)|| (TIMx == TIM17))
 1146              		.loc 1 313 21 discriminator 1 view .LVU347
 1147 003c 02F50062 		add	r2, r2, #2048
 1148 0040 9042     		cmp	r0, r2
 1149 0042 0BD0     		beq	.L75
 313:./FWLIB/src/stm32f10x_tim.c ****      (TIMx == TIM16)|| (TIMx == TIM17))
 1150              		.loc 1 313 38 discriminator 2 view .LVU348
 1151 0044 02F54062 		add	r2, r2, #3072
 1152 0048 9042     		cmp	r0, r2
 1153 004a 07D0     		beq	.L75
 313:./FWLIB/src/stm32f10x_tim.c ****      (TIMx == TIM16)|| (TIMx == TIM17))
 1154              		.loc 1 313 56 discriminator 3 view .LVU349
 1155 004c 02F58062 		add	r2, r2, #1024
 1156 0050 9042     		cmp	r0, r2
 1157 0052 03D0     		beq	.L75
 314:./FWLIB/src/stm32f10x_tim.c ****   {
 1158              		.loc 1 314 21 view .LVU350
 1159 0054 02F58062 		add	r2, r2, #1024
 1160 0058 9042     		cmp	r0, r2
 1161 005a 0FD1     		bne	.L76
ARM GAS  /tmp/ccvVNijM.s 			page 75


 1162              	.L75:
 316:./FWLIB/src/stm32f10x_tim.c ****     assert_param(IS_TIM_OCN_POLARITY(TIM_OCInitStruct->TIM_OCNPolarity));
 1163              		.loc 1 316 5 is_stmt 1 view .LVU351
 317:./FWLIB/src/stm32f10x_tim.c ****     assert_param(IS_TIM_OCNIDLE_STATE(TIM_OCInitStruct->TIM_OCNIdleState));
 1164              		.loc 1 317 5 view .LVU352
 318:./FWLIB/src/stm32f10x_tim.c ****     assert_param(IS_TIM_OCIDLE_STATE(TIM_OCInitStruct->TIM_OCIdleState));
 1165              		.loc 1 318 5 view .LVU353
 319:./FWLIB/src/stm32f10x_tim.c ****     
 1166              		.loc 1 319 5 view .LVU354
 322:./FWLIB/src/stm32f10x_tim.c ****     /* Set the Output N Polarity */
 1167              		.loc 1 322 5 view .LVU355
 322:./FWLIB/src/stm32f10x_tim.c ****     /* Set the Output N Polarity */
 1168              		.loc 1 322 13 is_stmt 0 view .LVU356
 1169 005c 23F00802 		bic	r2, r3, #8
 1170              	.LVL155:
 324:./FWLIB/src/stm32f10x_tim.c ****     
 1171              		.loc 1 324 5 is_stmt 1 view .LVU357
 324:./FWLIB/src/stm32f10x_tim.c ****     
 1172              		.loc 1 324 32 is_stmt 0 view .LVU358
 1173 0060 4B89     		ldrh	r3, [r1, #10]
 324:./FWLIB/src/stm32f10x_tim.c ****     
 1174              		.loc 1 324 13 view .LVU359
 1175 0062 1A43     		orrs	r2, r2, r3
 1176              	.LVL156:
 327:./FWLIB/src/stm32f10x_tim.c ****     /* Set the Output N State */
 1177              		.loc 1 327 5 is_stmt 1 view .LVU360
 327:./FWLIB/src/stm32f10x_tim.c ****     /* Set the Output N State */
 1178              		.loc 1 327 13 is_stmt 0 view .LVU361
 1179 0064 22F00402 		bic	r2, r2, #4
 1180              	.LVL157:
 329:./FWLIB/src/stm32f10x_tim.c ****     
 1181              		.loc 1 329 5 is_stmt 1 view .LVU362
 329:./FWLIB/src/stm32f10x_tim.c ****     
 1182              		.loc 1 329 32 is_stmt 0 view .LVU363
 1183 0068 8B88     		ldrh	r3, [r1, #4]
 329:./FWLIB/src/stm32f10x_tim.c ****     
 1184              		.loc 1 329 13 view .LVU364
 1185 006a 1343     		orrs	r3, r3, r2
 1186              	.LVL158:
 332:./FWLIB/src/stm32f10x_tim.c ****     tmpcr2 &= (uint16_t)(~((uint16_t)TIM_CR2_OIS1N));
 1187              		.loc 1 332 5 is_stmt 1 view .LVU365
 333:./FWLIB/src/stm32f10x_tim.c ****     
 1188              		.loc 1 333 5 view .LVU366
 333:./FWLIB/src/stm32f10x_tim.c ****     
 1189              		.loc 1 333 12 is_stmt 0 view .LVU367
 1190 006c 2CF4407C 		bic	ip, ip, #768
 1191              	.LVL159:
 336:./FWLIB/src/stm32f10x_tim.c ****     /* Set the Output N Idle state */
 1192              		.loc 1 336 5 is_stmt 1 view .LVU368
 336:./FWLIB/src/stm32f10x_tim.c ****     /* Set the Output N Idle state */
 1193              		.loc 1 336 31 is_stmt 0 view .LVU369
 1194 0070 8A89     		ldrh	r2, [r1, #12]
 336:./FWLIB/src/stm32f10x_tim.c ****     /* Set the Output N Idle state */
 1195              		.loc 1 336 12 view .LVU370
 1196 0072 4CEA020C 		orr	ip, ip, r2
 1197              	.LVL160:
 338:./FWLIB/src/stm32f10x_tim.c ****   }
ARM GAS  /tmp/ccvVNijM.s 			page 76


 1198              		.loc 1 338 5 is_stmt 1 view .LVU371
 338:./FWLIB/src/stm32f10x_tim.c ****   }
 1199              		.loc 1 338 31 is_stmt 0 view .LVU372
 1200 0076 CA89     		ldrh	r2, [r1, #14]
 338:./FWLIB/src/stm32f10x_tim.c ****   }
 1201              		.loc 1 338 12 view .LVU373
 1202 0078 42EA0C0C 		orr	ip, r2, ip
 1203              	.LVL161:
 1204              	.L76:
 341:./FWLIB/src/stm32f10x_tim.c ****   
 1205              		.loc 1 341 3 is_stmt 1 view .LVU374
 341:./FWLIB/src/stm32f10x_tim.c ****   
 1206              		.loc 1 341 13 is_stmt 0 view .LVU375
 1207 007c A0F804C0 		strh	ip, [r0, #4]	@ movhi
 344:./FWLIB/src/stm32f10x_tim.c **** 
 1208              		.loc 1 344 3 is_stmt 1 view .LVU376
 344:./FWLIB/src/stm32f10x_tim.c **** 
 1209              		.loc 1 344 15 is_stmt 0 view .LVU377
 1210 0080 A0F818E0 		strh	lr, [r0, #24]	@ movhi
 347:./FWLIB/src/stm32f10x_tim.c ****  
 1211              		.loc 1 347 3 is_stmt 1 view .LVU378
 347:./FWLIB/src/stm32f10x_tim.c ****  
 1212              		.loc 1 347 32 is_stmt 0 view .LVU379
 1213 0084 CA88     		ldrh	r2, [r1, #6]
 347:./FWLIB/src/stm32f10x_tim.c ****  
 1214              		.loc 1 347 14 view .LVU380
 1215 0086 8286     		strh	r2, [r0, #52]	@ movhi
 350:./FWLIB/src/stm32f10x_tim.c **** }
 1216              		.loc 1 350 3 is_stmt 1 view .LVU381
 350:./FWLIB/src/stm32f10x_tim.c **** }
 1217              		.loc 1 350 14 is_stmt 0 view .LVU382
 1218 0088 0384     		strh	r3, [r0, #32]	@ movhi
 351:./FWLIB/src/stm32f10x_tim.c **** 
 1219              		.loc 1 351 1 view .LVU383
 1220 008a 5DF804FB 		ldr	pc, [sp], #4
 1221              	.L79:
 1222 008e 00BF     		.align	2
 1223              	.L78:
 1224 0090 002C0140 		.word	1073818624
 1225              		.cfi_endproc
 1226              	.LFE31:
 1228              		.section	.text.TIM_OC2Init,"ax",%progbits
 1229              		.align	1
 1230              		.global	TIM_OC2Init
 1231              		.syntax unified
 1232              		.thumb
 1233              		.thumb_func
 1235              	TIM_OC2Init:
 1236              	.LVL162:
 1237              	.LFB32:
 363:./FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpccmrx = 0, tmpccer = 0, tmpcr2 = 0;
 1238              		.loc 1 363 1 is_stmt 1 view -0
 1239              		.cfi_startproc
 1240              		@ args = 0, pretend = 0, frame = 0
 1241              		@ frame_needed = 0, uses_anonymous_args = 0
 363:./FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpccmrx = 0, tmpccer = 0, tmpcr2 = 0;
 1242              		.loc 1 363 1 is_stmt 0 view .LVU385
ARM GAS  /tmp/ccvVNijM.s 			page 77


 1243 0000 00B5     		push	{lr}
 1244              	.LCFI6:
 1245              		.cfi_def_cfa_offset 4
 1246              		.cfi_offset 14, -4
 364:./FWLIB/src/stm32f10x_tim.c ****    
 1247              		.loc 1 364 3 is_stmt 1 view .LVU386
 1248              	.LVL163:
 367:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OC_MODE(TIM_OCInitStruct->TIM_OCMode));
 1249              		.loc 1 367 3 view .LVU387
 368:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OUTPUT_STATE(TIM_OCInitStruct->TIM_OutputState));
 1250              		.loc 1 368 3 view .LVU388
 369:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCInitStruct->TIM_OCPolarity));   
 1251              		.loc 1 369 3 view .LVU389
 370:./FWLIB/src/stm32f10x_tim.c ****    /* Disable the Channel 2: Reset the CC2E Bit */
 1252              		.loc 1 370 3 view .LVU390
 372:./FWLIB/src/stm32f10x_tim.c ****   
 1253              		.loc 1 372 3 view .LVU391
 372:./FWLIB/src/stm32f10x_tim.c ****   
 1254              		.loc 1 372 7 is_stmt 0 view .LVU392
 1255 0002 038C     		ldrh	r3, [r0, #32]
 1256 0004 9BB2     		uxth	r3, r3
 372:./FWLIB/src/stm32f10x_tim.c ****   
 1257              		.loc 1 372 14 view .LVU393
 1258 0006 23F01003 		bic	r3, r3, #16
 1259 000a 9BB2     		uxth	r3, r3
 1260 000c 0384     		strh	r3, [r0, #32]	@ movhi
 375:./FWLIB/src/stm32f10x_tim.c ****   /* Get the TIMx CR2 register value */
 1261              		.loc 1 375 3 is_stmt 1 view .LVU394
 375:./FWLIB/src/stm32f10x_tim.c ****   /* Get the TIMx CR2 register value */
 1262              		.loc 1 375 11 is_stmt 0 view .LVU395
 1263 000e 028C     		ldrh	r2, [r0, #32]
 1264 0010 92B2     		uxth	r2, r2
 1265              	.LVL164:
 377:./FWLIB/src/stm32f10x_tim.c ****   
 1266              		.loc 1 377 3 is_stmt 1 view .LVU396
 377:./FWLIB/src/stm32f10x_tim.c ****   
 1267              		.loc 1 377 10 is_stmt 0 view .LVU397
 1268 0012 B0F804E0 		ldrh	lr, [r0, #4]
 1269 0016 1FFA8EFE 		uxth	lr, lr
 1270              	.LVL165:
 380:./FWLIB/src/stm32f10x_tim.c ****     
 1271              		.loc 1 380 3 is_stmt 1 view .LVU398
 380:./FWLIB/src/stm32f10x_tim.c ****     
 1272              		.loc 1 380 12 is_stmt 0 view .LVU399
 1273 001a B0F818C0 		ldrh	ip, [r0, #24]
 1274 001e 1FFA8CFC 		uxth	ip, ip
 1275              	.LVL166:
 383:./FWLIB/src/stm32f10x_tim.c ****   tmpccmrx &= (uint16_t)(~((uint16_t)TIM_CCMR1_CC2S));
 1276              		.loc 1 383 3 is_stmt 1 view .LVU400
 384:./FWLIB/src/stm32f10x_tim.c ****   
 1277              		.loc 1 384 3 view .LVU401
 384:./FWLIB/src/stm32f10x_tim.c ****   
 1278              		.loc 1 384 12 is_stmt 0 view .LVU402
 1279 0022 2CF4E64C 		bic	ip, ip, #29440
 1280              	.LVL167:
 387:./FWLIB/src/stm32f10x_tim.c ****   
 1281              		.loc 1 387 3 is_stmt 1 view .LVU403
ARM GAS  /tmp/ccvVNijM.s 			page 78


 387:./FWLIB/src/stm32f10x_tim.c ****   
 1282              		.loc 1 387 42 is_stmt 0 view .LVU404
 1283 0026 0B88     		ldrh	r3, [r1]
 387:./FWLIB/src/stm32f10x_tim.c ****   
 1284              		.loc 1 387 15 view .LVU405
 1285 0028 1B02     		lsls	r3, r3, #8
 1286 002a 9BB2     		uxth	r3, r3
 387:./FWLIB/src/stm32f10x_tim.c ****   
 1287              		.loc 1 387 12 view .LVU406
 1288 002c 4CEA030C 		orr	ip, ip, r3
 1289              	.LVL168:
 390:./FWLIB/src/stm32f10x_tim.c ****   /* Set the Output Compare Polarity */
 1290              		.loc 1 390 3 is_stmt 1 view .LVU407
 390:./FWLIB/src/stm32f10x_tim.c ****   /* Set the Output Compare Polarity */
 1291              		.loc 1 390 11 is_stmt 0 view .LVU408
 1292 0030 22F02002 		bic	r2, r2, #32
 1293              	.LVL169:
 392:./FWLIB/src/stm32f10x_tim.c ****   
 1294              		.loc 1 392 3 is_stmt 1 view .LVU409
 392:./FWLIB/src/stm32f10x_tim.c ****   
 1295              		.loc 1 392 41 is_stmt 0 view .LVU410
 1296 0034 0B89     		ldrh	r3, [r1, #8]
 392:./FWLIB/src/stm32f10x_tim.c ****   
 1297              		.loc 1 392 14 view .LVU411
 1298 0036 1B01     		lsls	r3, r3, #4
 1299 0038 9BB2     		uxth	r3, r3
 392:./FWLIB/src/stm32f10x_tim.c ****   
 1300              		.loc 1 392 11 view .LVU412
 1301 003a 1A43     		orrs	r2, r2, r3
 1302              	.LVL170:
 395:./FWLIB/src/stm32f10x_tim.c ****     
 1303              		.loc 1 395 3 is_stmt 1 view .LVU413
 395:./FWLIB/src/stm32f10x_tim.c ****     
 1304              		.loc 1 395 41 is_stmt 0 view .LVU414
 1305 003c 4B88     		ldrh	r3, [r1, #2]
 395:./FWLIB/src/stm32f10x_tim.c ****     
 1306              		.loc 1 395 14 view .LVU415
 1307 003e 1B01     		lsls	r3, r3, #4
 1308 0040 9BB2     		uxth	r3, r3
 395:./FWLIB/src/stm32f10x_tim.c ****     
 1309              		.loc 1 395 11 view .LVU416
 1310 0042 1343     		orrs	r3, r3, r2
 1311              	.LVL171:
 397:./FWLIB/src/stm32f10x_tim.c ****   {
 1312              		.loc 1 397 3 is_stmt 1 view .LVU417
 397:./FWLIB/src/stm32f10x_tim.c ****   {
 1313              		.loc 1 397 5 is_stmt 0 view .LVU418
 1314 0044 134A     		ldr	r2, .L84
 1315 0046 9042     		cmp	r0, r2
 1316 0048 03D0     		beq	.L81
 397:./FWLIB/src/stm32f10x_tim.c ****   {
 1317              		.loc 1 397 21 discriminator 1 view .LVU419
 1318 004a 02F50062 		add	r2, r2, #2048
 1319 004e 9042     		cmp	r0, r2
 1320 0050 17D1     		bne	.L82
 1321              	.L81:
 399:./FWLIB/src/stm32f10x_tim.c ****     assert_param(IS_TIM_OCN_POLARITY(TIM_OCInitStruct->TIM_OCNPolarity));
ARM GAS  /tmp/ccvVNijM.s 			page 79


 1322              		.loc 1 399 5 is_stmt 1 view .LVU420
 400:./FWLIB/src/stm32f10x_tim.c ****     assert_param(IS_TIM_OCNIDLE_STATE(TIM_OCInitStruct->TIM_OCNIdleState));
 1323              		.loc 1 400 5 view .LVU421
 401:./FWLIB/src/stm32f10x_tim.c ****     assert_param(IS_TIM_OCIDLE_STATE(TIM_OCInitStruct->TIM_OCIdleState));
 1324              		.loc 1 401 5 view .LVU422
 402:./FWLIB/src/stm32f10x_tim.c ****     
 1325              		.loc 1 402 5 view .LVU423
 405:./FWLIB/src/stm32f10x_tim.c ****     /* Set the Output N Polarity */
 1326              		.loc 1 405 5 view .LVU424
 405:./FWLIB/src/stm32f10x_tim.c ****     /* Set the Output N Polarity */
 1327              		.loc 1 405 13 is_stmt 0 view .LVU425
 1328 0052 23F08003 		bic	r3, r3, #128
 1329              	.LVL172:
 407:./FWLIB/src/stm32f10x_tim.c ****     
 1330              		.loc 1 407 5 is_stmt 1 view .LVU426
 407:./FWLIB/src/stm32f10x_tim.c ****     
 1331              		.loc 1 407 43 is_stmt 0 view .LVU427
 1332 0056 4A89     		ldrh	r2, [r1, #10]
 407:./FWLIB/src/stm32f10x_tim.c ****     
 1333              		.loc 1 407 16 view .LVU428
 1334 0058 1201     		lsls	r2, r2, #4
 1335 005a 92B2     		uxth	r2, r2
 407:./FWLIB/src/stm32f10x_tim.c ****     
 1336              		.loc 1 407 13 view .LVU429
 1337 005c 1343     		orrs	r3, r3, r2
 1338              	.LVL173:
 410:./FWLIB/src/stm32f10x_tim.c ****     /* Set the Output N State */
 1339              		.loc 1 410 5 is_stmt 1 view .LVU430
 410:./FWLIB/src/stm32f10x_tim.c ****     /* Set the Output N State */
 1340              		.loc 1 410 13 is_stmt 0 view .LVU431
 1341 005e 23F04003 		bic	r3, r3, #64
 1342              	.LVL174:
 412:./FWLIB/src/stm32f10x_tim.c ****     
 1343              		.loc 1 412 5 is_stmt 1 view .LVU432
 412:./FWLIB/src/stm32f10x_tim.c ****     
 1344              		.loc 1 412 43 is_stmt 0 view .LVU433
 1345 0062 8A88     		ldrh	r2, [r1, #4]
 412:./FWLIB/src/stm32f10x_tim.c ****     
 1346              		.loc 1 412 16 view .LVU434
 1347 0064 1201     		lsls	r2, r2, #4
 1348 0066 92B2     		uxth	r2, r2
 412:./FWLIB/src/stm32f10x_tim.c ****     
 1349              		.loc 1 412 13 view .LVU435
 1350 0068 1343     		orrs	r3, r3, r2
 1351              	.LVL175:
 415:./FWLIB/src/stm32f10x_tim.c ****     tmpcr2 &= (uint16_t)(~((uint16_t)TIM_CR2_OIS2N));
 1352              		.loc 1 415 5 is_stmt 1 view .LVU436
 416:./FWLIB/src/stm32f10x_tim.c ****     
 1353              		.loc 1 416 5 view .LVU437
 416:./FWLIB/src/stm32f10x_tim.c ****     
 1354              		.loc 1 416 12 is_stmt 0 view .LVU438
 1355 006a 2EF4406E 		bic	lr, lr, #3072
 1356              	.LVL176:
 419:./FWLIB/src/stm32f10x_tim.c ****     /* Set the Output N Idle state */
 1357              		.loc 1 419 5 is_stmt 1 view .LVU439
 419:./FWLIB/src/stm32f10x_tim.c ****     /* Set the Output N Idle state */
 1358              		.loc 1 419 42 is_stmt 0 view .LVU440
ARM GAS  /tmp/ccvVNijM.s 			page 80


 1359 006e 8A89     		ldrh	r2, [r1, #12]
 419:./FWLIB/src/stm32f10x_tim.c ****     /* Set the Output N Idle state */
 1360              		.loc 1 419 15 view .LVU441
 1361 0070 9200     		lsls	r2, r2, #2
 1362 0072 92B2     		uxth	r2, r2
 419:./FWLIB/src/stm32f10x_tim.c ****     /* Set the Output N Idle state */
 1363              		.loc 1 419 12 view .LVU442
 1364 0074 4EEA020E 		orr	lr, lr, r2
 1365              	.LVL177:
 421:./FWLIB/src/stm32f10x_tim.c ****   }
 1366              		.loc 1 421 5 is_stmt 1 view .LVU443
 421:./FWLIB/src/stm32f10x_tim.c ****   }
 1367              		.loc 1 421 42 is_stmt 0 view .LVU444
 1368 0078 CA89     		ldrh	r2, [r1, #14]
 421:./FWLIB/src/stm32f10x_tim.c ****   }
 1369              		.loc 1 421 15 view .LVU445
 1370 007a 9200     		lsls	r2, r2, #2
 1371 007c 92B2     		uxth	r2, r2
 421:./FWLIB/src/stm32f10x_tim.c ****   }
 1372              		.loc 1 421 12 view .LVU446
 1373 007e 42EA0E0E 		orr	lr, r2, lr
 1374              	.LVL178:
 1375              	.L82:
 424:./FWLIB/src/stm32f10x_tim.c ****   
 1376              		.loc 1 424 3 is_stmt 1 view .LVU447
 424:./FWLIB/src/stm32f10x_tim.c ****   
 1377              		.loc 1 424 13 is_stmt 0 view .LVU448
 1378 0082 A0F804E0 		strh	lr, [r0, #4]	@ movhi
 427:./FWLIB/src/stm32f10x_tim.c **** 
 1379              		.loc 1 427 3 is_stmt 1 view .LVU449
 427:./FWLIB/src/stm32f10x_tim.c **** 
 1380              		.loc 1 427 15 is_stmt 0 view .LVU450
 1381 0086 A0F818C0 		strh	ip, [r0, #24]	@ movhi
 430:./FWLIB/src/stm32f10x_tim.c ****   
 1382              		.loc 1 430 3 is_stmt 1 view .LVU451
 430:./FWLIB/src/stm32f10x_tim.c ****   
 1383              		.loc 1 430 32 is_stmt 0 view .LVU452
 1384 008a CA88     		ldrh	r2, [r1, #6]
 430:./FWLIB/src/stm32f10x_tim.c ****   
 1385              		.loc 1 430 14 view .LVU453
 1386 008c 0287     		strh	r2, [r0, #56]	@ movhi
 433:./FWLIB/src/stm32f10x_tim.c **** }
 1387              		.loc 1 433 3 is_stmt 1 view .LVU454
 433:./FWLIB/src/stm32f10x_tim.c **** }
 1388              		.loc 1 433 14 is_stmt 0 view .LVU455
 1389 008e 0384     		strh	r3, [r0, #32]	@ movhi
 434:./FWLIB/src/stm32f10x_tim.c **** 
 1390              		.loc 1 434 1 view .LVU456
 1391 0090 5DF804FB 		ldr	pc, [sp], #4
 1392              	.L85:
 1393              		.align	2
 1394              	.L84:
 1395 0094 002C0140 		.word	1073818624
 1396              		.cfi_endproc
 1397              	.LFE32:
 1399              		.section	.text.TIM_OC3Init,"ax",%progbits
 1400              		.align	1
ARM GAS  /tmp/ccvVNijM.s 			page 81


 1401              		.global	TIM_OC3Init
 1402              		.syntax unified
 1403              		.thumb
 1404              		.thumb_func
 1406              	TIM_OC3Init:
 1407              	.LVL179:
 1408              	.LFB33:
 445:./FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpccmrx = 0, tmpccer = 0, tmpcr2 = 0;
 1409              		.loc 1 445 1 is_stmt 1 view -0
 1410              		.cfi_startproc
 1411              		@ args = 0, pretend = 0, frame = 0
 1412              		@ frame_needed = 0, uses_anonymous_args = 0
 445:./FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpccmrx = 0, tmpccer = 0, tmpcr2 = 0;
 1413              		.loc 1 445 1 is_stmt 0 view .LVU458
 1414 0000 00B5     		push	{lr}
 1415              	.LCFI7:
 1416              		.cfi_def_cfa_offset 4
 1417              		.cfi_offset 14, -4
 446:./FWLIB/src/stm32f10x_tim.c ****    
 1418              		.loc 1 446 3 is_stmt 1 view .LVU459
 1419              	.LVL180:
 449:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OC_MODE(TIM_OCInitStruct->TIM_OCMode));
 1420              		.loc 1 449 3 view .LVU460
 450:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OUTPUT_STATE(TIM_OCInitStruct->TIM_OutputState));
 1421              		.loc 1 450 3 view .LVU461
 451:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCInitStruct->TIM_OCPolarity));   
 1422              		.loc 1 451 3 view .LVU462
 452:./FWLIB/src/stm32f10x_tim.c ****   /* Disable the Channel 2: Reset the CC2E Bit */
 1423              		.loc 1 452 3 view .LVU463
 454:./FWLIB/src/stm32f10x_tim.c ****   
 1424              		.loc 1 454 3 view .LVU464
 454:./FWLIB/src/stm32f10x_tim.c ****   
 1425              		.loc 1 454 7 is_stmt 0 view .LVU465
 1426 0002 038C     		ldrh	r3, [r0, #32]
 1427 0004 9BB2     		uxth	r3, r3
 454:./FWLIB/src/stm32f10x_tim.c ****   
 1428              		.loc 1 454 14 view .LVU466
 1429 0006 23F48073 		bic	r3, r3, #256
 1430 000a 9BB2     		uxth	r3, r3
 1431 000c 0384     		strh	r3, [r0, #32]	@ movhi
 457:./FWLIB/src/stm32f10x_tim.c ****   /* Get the TIMx CR2 register value */
 1432              		.loc 1 457 3 is_stmt 1 view .LVU467
 457:./FWLIB/src/stm32f10x_tim.c ****   /* Get the TIMx CR2 register value */
 1433              		.loc 1 457 11 is_stmt 0 view .LVU468
 1434 000e 028C     		ldrh	r2, [r0, #32]
 1435 0010 92B2     		uxth	r2, r2
 1436              	.LVL181:
 459:./FWLIB/src/stm32f10x_tim.c ****   
 1437              		.loc 1 459 3 is_stmt 1 view .LVU469
 459:./FWLIB/src/stm32f10x_tim.c ****   
 1438              		.loc 1 459 10 is_stmt 0 view .LVU470
 1439 0012 B0F804E0 		ldrh	lr, [r0, #4]
 1440 0016 1FFA8EFE 		uxth	lr, lr
 1441              	.LVL182:
 462:./FWLIB/src/stm32f10x_tim.c ****     
 1442              		.loc 1 462 3 is_stmt 1 view .LVU471
 462:./FWLIB/src/stm32f10x_tim.c ****     
ARM GAS  /tmp/ccvVNijM.s 			page 82


 1443              		.loc 1 462 12 is_stmt 0 view .LVU472
 1444 001a B0F81CC0 		ldrh	ip, [r0, #28]
 1445 001e 1FFA8CFC 		uxth	ip, ip
 1446              	.LVL183:
 465:./FWLIB/src/stm32f10x_tim.c ****   tmpccmrx &= (uint16_t)(~((uint16_t)TIM_CCMR2_CC3S));  
 1447              		.loc 1 465 3 is_stmt 1 view .LVU473
 466:./FWLIB/src/stm32f10x_tim.c ****   /* Select the Output Compare Mode */
 1448              		.loc 1 466 3 view .LVU474
 466:./FWLIB/src/stm32f10x_tim.c ****   /* Select the Output Compare Mode */
 1449              		.loc 1 466 12 is_stmt 0 view .LVU475
 1450 0022 2CF0730C 		bic	ip, ip, #115
 1451              	.LVL184:
 468:./FWLIB/src/stm32f10x_tim.c ****   
 1452              		.loc 1 468 3 is_stmt 1 view .LVU476
 468:./FWLIB/src/stm32f10x_tim.c ****   
 1453              		.loc 1 468 31 is_stmt 0 view .LVU477
 1454 0026 0B88     		ldrh	r3, [r1]
 468:./FWLIB/src/stm32f10x_tim.c ****   
 1455              		.loc 1 468 12 view .LVU478
 1456 0028 4CEA030C 		orr	ip, ip, r3
 1457              	.LVL185:
 471:./FWLIB/src/stm32f10x_tim.c ****   /* Set the Output Compare Polarity */
 1458              		.loc 1 471 3 is_stmt 1 view .LVU479
 471:./FWLIB/src/stm32f10x_tim.c ****   /* Set the Output Compare Polarity */
 1459              		.loc 1 471 11 is_stmt 0 view .LVU480
 1460 002c 22F40072 		bic	r2, r2, #512
 1461              	.LVL186:
 473:./FWLIB/src/stm32f10x_tim.c ****   
 1462              		.loc 1 473 3 is_stmt 1 view .LVU481
 473:./FWLIB/src/stm32f10x_tim.c ****   
 1463              		.loc 1 473 41 is_stmt 0 view .LVU482
 1464 0030 0B89     		ldrh	r3, [r1, #8]
 473:./FWLIB/src/stm32f10x_tim.c ****   
 1465              		.loc 1 473 14 view .LVU483
 1466 0032 1B02     		lsls	r3, r3, #8
 1467 0034 9BB2     		uxth	r3, r3
 473:./FWLIB/src/stm32f10x_tim.c ****   
 1468              		.loc 1 473 11 view .LVU484
 1469 0036 1A43     		orrs	r2, r2, r3
 1470              	.LVL187:
 476:./FWLIB/src/stm32f10x_tim.c ****     
 1471              		.loc 1 476 3 is_stmt 1 view .LVU485
 476:./FWLIB/src/stm32f10x_tim.c ****     
 1472              		.loc 1 476 41 is_stmt 0 view .LVU486
 1473 0038 4B88     		ldrh	r3, [r1, #2]
 476:./FWLIB/src/stm32f10x_tim.c ****     
 1474              		.loc 1 476 14 view .LVU487
 1475 003a 1B02     		lsls	r3, r3, #8
 1476 003c 9BB2     		uxth	r3, r3
 476:./FWLIB/src/stm32f10x_tim.c ****     
 1477              		.loc 1 476 11 view .LVU488
 1478 003e 1343     		orrs	r3, r3, r2
 1479              	.LVL188:
 478:./FWLIB/src/stm32f10x_tim.c ****   {
 1480              		.loc 1 478 3 is_stmt 1 view .LVU489
 478:./FWLIB/src/stm32f10x_tim.c ****   {
 1481              		.loc 1 478 5 is_stmt 0 view .LVU490
ARM GAS  /tmp/ccvVNijM.s 			page 83


 1482 0040 134A     		ldr	r2, .L90
 1483 0042 9042     		cmp	r0, r2
 1484 0044 03D0     		beq	.L87
 478:./FWLIB/src/stm32f10x_tim.c ****   {
 1485              		.loc 1 478 21 discriminator 1 view .LVU491
 1486 0046 02F50062 		add	r2, r2, #2048
 1487 004a 9042     		cmp	r0, r2
 1488 004c 17D1     		bne	.L88
 1489              	.L87:
 480:./FWLIB/src/stm32f10x_tim.c ****     assert_param(IS_TIM_OCN_POLARITY(TIM_OCInitStruct->TIM_OCNPolarity));
 1490              		.loc 1 480 5 is_stmt 1 view .LVU492
 481:./FWLIB/src/stm32f10x_tim.c ****     assert_param(IS_TIM_OCNIDLE_STATE(TIM_OCInitStruct->TIM_OCNIdleState));
 1491              		.loc 1 481 5 view .LVU493
 482:./FWLIB/src/stm32f10x_tim.c ****     assert_param(IS_TIM_OCIDLE_STATE(TIM_OCInitStruct->TIM_OCIdleState));
 1492              		.loc 1 482 5 view .LVU494
 483:./FWLIB/src/stm32f10x_tim.c ****     
 1493              		.loc 1 483 5 view .LVU495
 486:./FWLIB/src/stm32f10x_tim.c ****     /* Set the Output N Polarity */
 1494              		.loc 1 486 5 view .LVU496
 486:./FWLIB/src/stm32f10x_tim.c ****     /* Set the Output N Polarity */
 1495              		.loc 1 486 13 is_stmt 0 view .LVU497
 1496 004e 23F40063 		bic	r3, r3, #2048
 1497              	.LVL189:
 488:./FWLIB/src/stm32f10x_tim.c ****     /* Reset the Output N State */
 1498              		.loc 1 488 5 is_stmt 1 view .LVU498
 488:./FWLIB/src/stm32f10x_tim.c ****     /* Reset the Output N State */
 1499              		.loc 1 488 43 is_stmt 0 view .LVU499
 1500 0052 4A89     		ldrh	r2, [r1, #10]
 488:./FWLIB/src/stm32f10x_tim.c ****     /* Reset the Output N State */
 1501              		.loc 1 488 16 view .LVU500
 1502 0054 1202     		lsls	r2, r2, #8
 1503 0056 92B2     		uxth	r2, r2
 488:./FWLIB/src/stm32f10x_tim.c ****     /* Reset the Output N State */
 1504              		.loc 1 488 13 view .LVU501
 1505 0058 1343     		orrs	r3, r3, r2
 1506              	.LVL190:
 490:./FWLIB/src/stm32f10x_tim.c ****     
 1507              		.loc 1 490 5 is_stmt 1 view .LVU502
 490:./FWLIB/src/stm32f10x_tim.c ****     
 1508              		.loc 1 490 13 is_stmt 0 view .LVU503
 1509 005a 23F48063 		bic	r3, r3, #1024
 1510              	.LVL191:
 493:./FWLIB/src/stm32f10x_tim.c ****     /* Reset the Output Compare and Output Compare N IDLE State */
 1511              		.loc 1 493 5 is_stmt 1 view .LVU504
 493:./FWLIB/src/stm32f10x_tim.c ****     /* Reset the Output Compare and Output Compare N IDLE State */
 1512              		.loc 1 493 43 is_stmt 0 view .LVU505
 1513 005e 8A88     		ldrh	r2, [r1, #4]
 493:./FWLIB/src/stm32f10x_tim.c ****     /* Reset the Output Compare and Output Compare N IDLE State */
 1514              		.loc 1 493 16 view .LVU506
 1515 0060 1202     		lsls	r2, r2, #8
 1516 0062 92B2     		uxth	r2, r2
 493:./FWLIB/src/stm32f10x_tim.c ****     /* Reset the Output Compare and Output Compare N IDLE State */
 1517              		.loc 1 493 13 view .LVU507
 1518 0064 1343     		orrs	r3, r3, r2
 1519              	.LVL192:
 495:./FWLIB/src/stm32f10x_tim.c ****     tmpcr2 &= (uint16_t)(~((uint16_t)TIM_CR2_OIS3N));
 1520              		.loc 1 495 5 is_stmt 1 view .LVU508
ARM GAS  /tmp/ccvVNijM.s 			page 84


 496:./FWLIB/src/stm32f10x_tim.c ****     /* Set the Output Idle state */
 1521              		.loc 1 496 5 view .LVU509
 496:./FWLIB/src/stm32f10x_tim.c ****     /* Set the Output Idle state */
 1522              		.loc 1 496 12 is_stmt 0 view .LVU510
 1523 0066 2EF4405E 		bic	lr, lr, #12288
 1524              	.LVL193:
 498:./FWLIB/src/stm32f10x_tim.c ****     /* Set the Output N Idle state */
 1525              		.loc 1 498 5 is_stmt 1 view .LVU511
 498:./FWLIB/src/stm32f10x_tim.c ****     /* Set the Output N Idle state */
 1526              		.loc 1 498 42 is_stmt 0 view .LVU512
 1527 006a 8A89     		ldrh	r2, [r1, #12]
 498:./FWLIB/src/stm32f10x_tim.c ****     /* Set the Output N Idle state */
 1528              		.loc 1 498 15 view .LVU513
 1529 006c 1201     		lsls	r2, r2, #4
 1530 006e 92B2     		uxth	r2, r2
 498:./FWLIB/src/stm32f10x_tim.c ****     /* Set the Output N Idle state */
 1531              		.loc 1 498 12 view .LVU514
 1532 0070 4EEA020E 		orr	lr, lr, r2
 1533              	.LVL194:
 500:./FWLIB/src/stm32f10x_tim.c ****   }
 1534              		.loc 1 500 5 is_stmt 1 view .LVU515
 500:./FWLIB/src/stm32f10x_tim.c ****   }
 1535              		.loc 1 500 42 is_stmt 0 view .LVU516
 1536 0074 CA89     		ldrh	r2, [r1, #14]
 500:./FWLIB/src/stm32f10x_tim.c ****   }
 1537              		.loc 1 500 15 view .LVU517
 1538 0076 1201     		lsls	r2, r2, #4
 1539 0078 92B2     		uxth	r2, r2
 500:./FWLIB/src/stm32f10x_tim.c ****   }
 1540              		.loc 1 500 12 view .LVU518
 1541 007a 42EA0E0E 		orr	lr, r2, lr
 1542              	.LVL195:
 1543              	.L88:
 503:./FWLIB/src/stm32f10x_tim.c ****   
 1544              		.loc 1 503 3 is_stmt 1 view .LVU519
 503:./FWLIB/src/stm32f10x_tim.c ****   
 1545              		.loc 1 503 13 is_stmt 0 view .LVU520
 1546 007e A0F804E0 		strh	lr, [r0, #4]	@ movhi
 506:./FWLIB/src/stm32f10x_tim.c **** 
 1547              		.loc 1 506 3 is_stmt 1 view .LVU521
 506:./FWLIB/src/stm32f10x_tim.c **** 
 1548              		.loc 1 506 15 is_stmt 0 view .LVU522
 1549 0082 A0F81CC0 		strh	ip, [r0, #28]	@ movhi
 509:./FWLIB/src/stm32f10x_tim.c ****   
 1550              		.loc 1 509 3 is_stmt 1 view .LVU523
 509:./FWLIB/src/stm32f10x_tim.c ****   
 1551              		.loc 1 509 32 is_stmt 0 view .LVU524
 1552 0086 CA88     		ldrh	r2, [r1, #6]
 509:./FWLIB/src/stm32f10x_tim.c ****   
 1553              		.loc 1 509 14 view .LVU525
 1554 0088 8287     		strh	r2, [r0, #60]	@ movhi
 512:./FWLIB/src/stm32f10x_tim.c **** }
 1555              		.loc 1 512 3 is_stmt 1 view .LVU526
 512:./FWLIB/src/stm32f10x_tim.c **** }
 1556              		.loc 1 512 14 is_stmt 0 view .LVU527
 1557 008a 0384     		strh	r3, [r0, #32]	@ movhi
 513:./FWLIB/src/stm32f10x_tim.c **** 
ARM GAS  /tmp/ccvVNijM.s 			page 85


 1558              		.loc 1 513 1 view .LVU528
 1559 008c 5DF804FB 		ldr	pc, [sp], #4
 1560              	.L91:
 1561              		.align	2
 1562              	.L90:
 1563 0090 002C0140 		.word	1073818624
 1564              		.cfi_endproc
 1565              	.LFE33:
 1567              		.section	.text.TIM_OC4Init,"ax",%progbits
 1568              		.align	1
 1569              		.global	TIM_OC4Init
 1570              		.syntax unified
 1571              		.thumb
 1572              		.thumb_func
 1574              	TIM_OC4Init:
 1575              	.LVL196:
 1576              	.LFB34:
 524:./FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpccmrx = 0, tmpccer = 0, tmpcr2 = 0;
 1577              		.loc 1 524 1 is_stmt 1 view -0
 1578              		.cfi_startproc
 1579              		@ args = 0, pretend = 0, frame = 0
 1580              		@ frame_needed = 0, uses_anonymous_args = 0
 524:./FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpccmrx = 0, tmpccer = 0, tmpcr2 = 0;
 1581              		.loc 1 524 1 is_stmt 0 view .LVU530
 1582 0000 10B5     		push	{r4, lr}
 1583              	.LCFI8:
 1584              		.cfi_def_cfa_offset 8
 1585              		.cfi_offset 4, -8
 1586              		.cfi_offset 14, -4
 525:./FWLIB/src/stm32f10x_tim.c ****    
 1587              		.loc 1 525 3 is_stmt 1 view .LVU531
 1588              	.LVL197:
 528:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OC_MODE(TIM_OCInitStruct->TIM_OCMode));
 1589              		.loc 1 528 3 view .LVU532
 529:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OUTPUT_STATE(TIM_OCInitStruct->TIM_OutputState));
 1590              		.loc 1 529 3 view .LVU533
 530:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCInitStruct->TIM_OCPolarity));   
 1591              		.loc 1 530 3 view .LVU534
 531:./FWLIB/src/stm32f10x_tim.c ****   /* Disable the Channel 2: Reset the CC4E Bit */
 1592              		.loc 1 531 3 view .LVU535
 533:./FWLIB/src/stm32f10x_tim.c ****   
 1593              		.loc 1 533 3 view .LVU536
 533:./FWLIB/src/stm32f10x_tim.c ****   
 1594              		.loc 1 533 7 is_stmt 0 view .LVU537
 1595 0002 038C     		ldrh	r3, [r0, #32]
 1596 0004 9BB2     		uxth	r3, r3
 533:./FWLIB/src/stm32f10x_tim.c ****   
 1597              		.loc 1 533 14 view .LVU538
 1598 0006 23F48053 		bic	r3, r3, #4096
 1599 000a 9BB2     		uxth	r3, r3
 1600 000c 0384     		strh	r3, [r0, #32]	@ movhi
 536:./FWLIB/src/stm32f10x_tim.c ****   /* Get the TIMx CR2 register value */
 1601              		.loc 1 536 3 is_stmt 1 view .LVU539
 536:./FWLIB/src/stm32f10x_tim.c ****   /* Get the TIMx CR2 register value */
 1602              		.loc 1 536 11 is_stmt 0 view .LVU540
 1603 000e B0F820C0 		ldrh	ip, [r0, #32]
 1604 0012 1FFA8CFC 		uxth	ip, ip
ARM GAS  /tmp/ccvVNijM.s 			page 86


 1605              	.LVL198:
 538:./FWLIB/src/stm32f10x_tim.c ****   
 1606              		.loc 1 538 3 is_stmt 1 view .LVU541
 538:./FWLIB/src/stm32f10x_tim.c ****   
 1607              		.loc 1 538 10 is_stmt 0 view .LVU542
 1608 0016 B0F804E0 		ldrh	lr, [r0, #4]
 1609 001a 1FFA8EFE 		uxth	lr, lr
 1610              	.LVL199:
 541:./FWLIB/src/stm32f10x_tim.c ****     
 1611              		.loc 1 541 3 is_stmt 1 view .LVU543
 541:./FWLIB/src/stm32f10x_tim.c ****     
 1612              		.loc 1 541 12 is_stmt 0 view .LVU544
 1613 001e 828B     		ldrh	r2, [r0, #28]
 1614 0020 92B2     		uxth	r2, r2
 1615              	.LVL200:
 544:./FWLIB/src/stm32f10x_tim.c ****   tmpccmrx &= (uint16_t)(~((uint16_t)TIM_CCMR2_CC4S));
 1616              		.loc 1 544 3 is_stmt 1 view .LVU545
 545:./FWLIB/src/stm32f10x_tim.c ****   
 1617              		.loc 1 545 3 view .LVU546
 545:./FWLIB/src/stm32f10x_tim.c ****   
 1618              		.loc 1 545 12 is_stmt 0 view .LVU547
 1619 0022 22F4E642 		bic	r2, r2, #29440
 1620              	.LVL201:
 548:./FWLIB/src/stm32f10x_tim.c ****   
 1621              		.loc 1 548 3 is_stmt 1 view .LVU548
 548:./FWLIB/src/stm32f10x_tim.c ****   
 1622              		.loc 1 548 42 is_stmt 0 view .LVU549
 1623 0026 0B88     		ldrh	r3, [r1]
 548:./FWLIB/src/stm32f10x_tim.c ****   
 1624              		.loc 1 548 15 view .LVU550
 1625 0028 1B02     		lsls	r3, r3, #8
 1626 002a 9BB2     		uxth	r3, r3
 548:./FWLIB/src/stm32f10x_tim.c ****   
 1627              		.loc 1 548 12 view .LVU551
 1628 002c 1A43     		orrs	r2, r2, r3
 1629              	.LVL202:
 551:./FWLIB/src/stm32f10x_tim.c ****   /* Set the Output Compare Polarity */
 1630              		.loc 1 551 3 is_stmt 1 view .LVU552
 551:./FWLIB/src/stm32f10x_tim.c ****   /* Set the Output Compare Polarity */
 1631              		.loc 1 551 11 is_stmt 0 view .LVU553
 1632 002e 2CF4005C 		bic	ip, ip, #8192
 1633              	.LVL203:
 553:./FWLIB/src/stm32f10x_tim.c ****   
 1634              		.loc 1 553 3 is_stmt 1 view .LVU554
 553:./FWLIB/src/stm32f10x_tim.c ****   
 1635              		.loc 1 553 41 is_stmt 0 view .LVU555
 1636 0032 0B89     		ldrh	r3, [r1, #8]
 553:./FWLIB/src/stm32f10x_tim.c ****   
 1637              		.loc 1 553 14 view .LVU556
 1638 0034 1B03     		lsls	r3, r3, #12
 1639 0036 9BB2     		uxth	r3, r3
 553:./FWLIB/src/stm32f10x_tim.c ****   
 1640              		.loc 1 553 11 view .LVU557
 1641 0038 4CEA030C 		orr	ip, ip, r3
 1642              	.LVL204:
 556:./FWLIB/src/stm32f10x_tim.c ****     
 1643              		.loc 1 556 3 is_stmt 1 view .LVU558
ARM GAS  /tmp/ccvVNijM.s 			page 87


 556:./FWLIB/src/stm32f10x_tim.c ****     
 1644              		.loc 1 556 41 is_stmt 0 view .LVU559
 1645 003c 4B88     		ldrh	r3, [r1, #2]
 556:./FWLIB/src/stm32f10x_tim.c ****     
 1646              		.loc 1 556 14 view .LVU560
 1647 003e 1B03     		lsls	r3, r3, #12
 1648 0040 9BB2     		uxth	r3, r3
 556:./FWLIB/src/stm32f10x_tim.c ****     
 1649              		.loc 1 556 11 view .LVU561
 1650 0042 43EA0C03 		orr	r3, r3, ip
 1651              	.LVL205:
 558:./FWLIB/src/stm32f10x_tim.c ****   {
 1652              		.loc 1 558 3 is_stmt 1 view .LVU562
 558:./FWLIB/src/stm32f10x_tim.c ****   {
 1653              		.loc 1 558 5 is_stmt 0 view .LVU563
 1654 0046 0C4C     		ldr	r4, .L96
 1655 0048 A042     		cmp	r0, r4
 1656 004a 03D0     		beq	.L93
 558:./FWLIB/src/stm32f10x_tim.c ****   {
 1657              		.loc 1 558 21 discriminator 1 view .LVU564
 1658 004c 04F50064 		add	r4, r4, #2048
 1659 0050 A042     		cmp	r0, r4
 1660 0052 09D1     		bne	.L94
 1661              	.L93:
 560:./FWLIB/src/stm32f10x_tim.c ****     /* Reset the Output Compare IDLE State */
 1662              		.loc 1 560 5 is_stmt 1 view .LVU565
 562:./FWLIB/src/stm32f10x_tim.c ****     /* Set the Output Idle state */
 1663              		.loc 1 562 5 view .LVU566
 562:./FWLIB/src/stm32f10x_tim.c ****     /* Set the Output Idle state */
 1664              		.loc 1 562 12 is_stmt 0 view .LVU567
 1665 0054 2EF4804E 		bic	lr, lr, #16384
 1666              	.LVL206:
 564:./FWLIB/src/stm32f10x_tim.c ****   }
 1667              		.loc 1 564 5 is_stmt 1 view .LVU568
 564:./FWLIB/src/stm32f10x_tim.c ****   }
 1668              		.loc 1 564 42 is_stmt 0 view .LVU569
 1669 0058 B1F80CC0 		ldrh	ip, [r1, #12]
 564:./FWLIB/src/stm32f10x_tim.c ****   }
 1670              		.loc 1 564 15 view .LVU570
 1671 005c 4FEA8C1C 		lsl	ip, ip, #6
 1672 0060 1FFA8CFC 		uxth	ip, ip
 564:./FWLIB/src/stm32f10x_tim.c ****   }
 1673              		.loc 1 564 12 view .LVU571
 1674 0064 4EEA0C0E 		orr	lr, lr, ip
 1675              	.LVL207:
 1676              	.L94:
 567:./FWLIB/src/stm32f10x_tim.c ****   
 1677              		.loc 1 567 3 is_stmt 1 view .LVU572
 567:./FWLIB/src/stm32f10x_tim.c ****   
 1678              		.loc 1 567 13 is_stmt 0 view .LVU573
 1679 0068 A0F804E0 		strh	lr, [r0, #4]	@ movhi
 570:./FWLIB/src/stm32f10x_tim.c **** 
 1680              		.loc 1 570 3 is_stmt 1 view .LVU574
 570:./FWLIB/src/stm32f10x_tim.c **** 
 1681              		.loc 1 570 15 is_stmt 0 view .LVU575
 1682 006c 8283     		strh	r2, [r0, #28]	@ movhi
 573:./FWLIB/src/stm32f10x_tim.c ****   
ARM GAS  /tmp/ccvVNijM.s 			page 88


 1683              		.loc 1 573 3 is_stmt 1 view .LVU576
 573:./FWLIB/src/stm32f10x_tim.c ****   
 1684              		.loc 1 573 32 is_stmt 0 view .LVU577
 1685 006e CA88     		ldrh	r2, [r1, #6]
 1686              	.LVL208:
 573:./FWLIB/src/stm32f10x_tim.c ****   
 1687              		.loc 1 573 14 view .LVU578
 1688 0070 A0F84020 		strh	r2, [r0, #64]	@ movhi
 1689              	.LVL209:
 576:./FWLIB/src/stm32f10x_tim.c **** }
 1690              		.loc 1 576 3 is_stmt 1 view .LVU579
 576:./FWLIB/src/stm32f10x_tim.c **** }
 1691              		.loc 1 576 14 is_stmt 0 view .LVU580
 1692 0074 0384     		strh	r3, [r0, #32]	@ movhi
 577:./FWLIB/src/stm32f10x_tim.c **** 
 1693              		.loc 1 577 1 view .LVU581
 1694 0076 10BD     		pop	{r4, pc}
 1695              	.L97:
 1696              		.align	2
 1697              	.L96:
 1698 0078 002C0140 		.word	1073818624
 1699              		.cfi_endproc
 1700              	.LFE34:
 1702              		.section	.text.TIM_BDTRConfig,"ax",%progbits
 1703              		.align	1
 1704              		.global	TIM_BDTRConfig
 1705              		.syntax unified
 1706              		.thumb
 1707              		.thumb_func
 1709              	TIM_BDTRConfig:
 1710              	.LVL210:
 1711              	.LFB37:
 713:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 1712              		.loc 1 713 1 is_stmt 1 view -0
 1713              		.cfi_startproc
 1714              		@ args = 0, pretend = 0, frame = 0
 1715              		@ frame_needed = 0, uses_anonymous_args = 0
 713:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 1716              		.loc 1 713 1 is_stmt 0 view .LVU583
 1717 0000 70B5     		push	{r4, r5, r6, lr}
 1718              	.LCFI9:
 1719              		.cfi_def_cfa_offset 16
 1720              		.cfi_offset 4, -16
 1721              		.cfi_offset 5, -12
 1722              		.cfi_offset 6, -8
 1723              		.cfi_offset 14, -4
 715:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OSSR_STATE(TIM_BDTRInitStruct->TIM_OSSRState));
 1724              		.loc 1 715 3 is_stmt 1 view .LVU584
 716:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OSSI_STATE(TIM_BDTRInitStruct->TIM_OSSIState));
 1725              		.loc 1 716 3 view .LVU585
 717:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LOCK_LEVEL(TIM_BDTRInitStruct->TIM_LOCKLevel));
 1726              		.loc 1 717 3 view .LVU586
 718:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_BREAK_STATE(TIM_BDTRInitStruct->TIM_Break));
 1727              		.loc 1 718 3 view .LVU587
 719:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_BREAK_POLARITY(TIM_BDTRInitStruct->TIM_BreakPolarity));
 1728              		.loc 1 719 3 view .LVU588
 720:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_AUTOMATIC_OUTPUT_STATE(TIM_BDTRInitStruct->TIM_AutomaticOutput));
ARM GAS  /tmp/ccvVNijM.s 			page 89


 1729              		.loc 1 720 3 view .LVU589
 721:./FWLIB/src/stm32f10x_tim.c ****   /* Set the Lock level, the Break enable Bit and the Ploarity, the OSSR State,
 1730              		.loc 1 721 3 view .LVU590
 724:./FWLIB/src/stm32f10x_tim.c ****              TIM_BDTRInitStruct->TIM_LOCKLevel | TIM_BDTRInitStruct->TIM_DeadTime |
 1731              		.loc 1 724 3 view .LVU591
 724:./FWLIB/src/stm32f10x_tim.c ****              TIM_BDTRInitStruct->TIM_LOCKLevel | TIM_BDTRInitStruct->TIM_DeadTime |
 1732              		.loc 1 724 44 is_stmt 0 view .LVU592
 1733 0002 0D88     		ldrh	r5, [r1]
 724:./FWLIB/src/stm32f10x_tim.c ****              TIM_BDTRInitStruct->TIM_LOCKLevel | TIM_BDTRInitStruct->TIM_DeadTime |
 1734              		.loc 1 724 80 view .LVU593
 1735 0004 4E88     		ldrh	r6, [r1, #2]
 725:./FWLIB/src/stm32f10x_tim.c ****              TIM_BDTRInitStruct->TIM_Break | TIM_BDTRInitStruct->TIM_BreakPolarity |
 1736              		.loc 1 725 32 view .LVU594
 1737 0006 8C88     		ldrh	r4, [r1, #4]
 725:./FWLIB/src/stm32f10x_tim.c ****              TIM_BDTRInitStruct->TIM_Break | TIM_BDTRInitStruct->TIM_BreakPolarity |
 1738              		.loc 1 725 68 view .LVU595
 1739 0008 B1F806E0 		ldrh	lr, [r1, #6]
 726:./FWLIB/src/stm32f10x_tim.c ****              TIM_BDTRInitStruct->TIM_AutomaticOutput;
 1740              		.loc 1 726 32 view .LVU596
 1741 000c B1F808C0 		ldrh	ip, [r1, #8]
 726:./FWLIB/src/stm32f10x_tim.c ****              TIM_BDTRInitStruct->TIM_AutomaticOutput;
 1742              		.loc 1 726 64 view .LVU597
 1743 0010 4A89     		ldrh	r2, [r1, #10]
 727:./FWLIB/src/stm32f10x_tim.c **** }
 1744              		.loc 1 727 32 view .LVU598
 1745 0012 8B89     		ldrh	r3, [r1, #12]
 724:./FWLIB/src/stm32f10x_tim.c ****              TIM_BDTRInitStruct->TIM_LOCKLevel | TIM_BDTRInitStruct->TIM_DeadTime |
 1746              		.loc 1 724 14 view .LVU599
 1747 0014 45EA0601 		orr	r1, r5, r6
 1748              	.LVL211:
 724:./FWLIB/src/stm32f10x_tim.c ****              TIM_BDTRInitStruct->TIM_LOCKLevel | TIM_BDTRInitStruct->TIM_DeadTime |
 1749              		.loc 1 724 14 view .LVU600
 1750 0018 2143     		orrs	r1, r1, r4
 1751 001a 4EEA0101 		orr	r1, lr, r1
 1752 001e 4CEA0101 		orr	r1, ip, r1
 1753 0022 0A43     		orrs	r2, r2, r1
 1754 0024 1343     		orrs	r3, r3, r2
 1755 0026 A0F84430 		strh	r3, [r0, #68]	@ movhi
 728:./FWLIB/src/stm32f10x_tim.c **** 
 1756              		.loc 1 728 1 view .LVU601
 1757 002a 70BD     		pop	{r4, r5, r6, pc}
 1758              		.cfi_endproc
 1759              	.LFE37:
 1761              		.section	.text.TIM_TimeBaseStructInit,"ax",%progbits
 1762              		.align	1
 1763              		.global	TIM_TimeBaseStructInit
 1764              		.syntax unified
 1765              		.thumb
 1766              		.thumb_func
 1768              	TIM_TimeBaseStructInit:
 1769              	.LVL212:
 1770              	.LFB38:
 737:./FWLIB/src/stm32f10x_tim.c ****   /* Set the default configuration */
 1771              		.loc 1 737 1 is_stmt 1 view -0
 1772              		.cfi_startproc
 1773              		@ args = 0, pretend = 0, frame = 0
 1774              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccvVNijM.s 			page 90


 1775              		@ link register save eliminated.
 739:./FWLIB/src/stm32f10x_tim.c ****   TIM_TimeBaseInitStruct->TIM_Prescaler = 0x0000;
 1776              		.loc 1 739 3 view .LVU603
 739:./FWLIB/src/stm32f10x_tim.c ****   TIM_TimeBaseInitStruct->TIM_Prescaler = 0x0000;
 1777              		.loc 1 739 38 is_stmt 0 view .LVU604
 1778 0000 4FF6FF73 		movw	r3, #65535
 1779 0004 8380     		strh	r3, [r0, #4]	@ movhi
 740:./FWLIB/src/stm32f10x_tim.c ****   TIM_TimeBaseInitStruct->TIM_ClockDivision = TIM_CKD_DIV1;
 1780              		.loc 1 740 3 is_stmt 1 view .LVU605
 740:./FWLIB/src/stm32f10x_tim.c ****   TIM_TimeBaseInitStruct->TIM_ClockDivision = TIM_CKD_DIV1;
 1781              		.loc 1 740 41 is_stmt 0 view .LVU606
 1782 0006 0023     		movs	r3, #0
 1783 0008 0380     		strh	r3, [r0]	@ movhi
 741:./FWLIB/src/stm32f10x_tim.c ****   TIM_TimeBaseInitStruct->TIM_CounterMode = TIM_CounterMode_Up;
 1784              		.loc 1 741 3 is_stmt 1 view .LVU607
 741:./FWLIB/src/stm32f10x_tim.c ****   TIM_TimeBaseInitStruct->TIM_CounterMode = TIM_CounterMode_Up;
 1785              		.loc 1 741 45 is_stmt 0 view .LVU608
 1786 000a C380     		strh	r3, [r0, #6]	@ movhi
 742:./FWLIB/src/stm32f10x_tim.c ****   TIM_TimeBaseInitStruct->TIM_RepetitionCounter = 0x0000;
 1787              		.loc 1 742 3 is_stmt 1 view .LVU609
 742:./FWLIB/src/stm32f10x_tim.c ****   TIM_TimeBaseInitStruct->TIM_RepetitionCounter = 0x0000;
 1788              		.loc 1 742 43 is_stmt 0 view .LVU610
 1789 000c 4380     		strh	r3, [r0, #2]	@ movhi
 743:./FWLIB/src/stm32f10x_tim.c **** }
 1790              		.loc 1 743 3 is_stmt 1 view .LVU611
 743:./FWLIB/src/stm32f10x_tim.c **** }
 1791              		.loc 1 743 49 is_stmt 0 view .LVU612
 1792 000e 0372     		strb	r3, [r0, #8]
 744:./FWLIB/src/stm32f10x_tim.c **** 
 1793              		.loc 1 744 1 view .LVU613
 1794 0010 7047     		bx	lr
 1795              		.cfi_endproc
 1796              	.LFE38:
 1798              		.section	.text.TIM_OCStructInit,"ax",%progbits
 1799              		.align	1
 1800              		.global	TIM_OCStructInit
 1801              		.syntax unified
 1802              		.thumb
 1803              		.thumb_func
 1805              	TIM_OCStructInit:
 1806              	.LVL213:
 1807              	.LFB39:
 753:./FWLIB/src/stm32f10x_tim.c ****   /* Set the default configuration */
 1808              		.loc 1 753 1 is_stmt 1 view -0
 1809              		.cfi_startproc
 1810              		@ args = 0, pretend = 0, frame = 0
 1811              		@ frame_needed = 0, uses_anonymous_args = 0
 1812              		@ link register save eliminated.
 755:./FWLIB/src/stm32f10x_tim.c ****   TIM_OCInitStruct->TIM_OutputState = TIM_OutputState_Disable;
 1813              		.loc 1 755 3 view .LVU615
 755:./FWLIB/src/stm32f10x_tim.c ****   TIM_OCInitStruct->TIM_OutputState = TIM_OutputState_Disable;
 1814              		.loc 1 755 32 is_stmt 0 view .LVU616
 1815 0000 0023     		movs	r3, #0
 1816 0002 0380     		strh	r3, [r0]	@ movhi
 756:./FWLIB/src/stm32f10x_tim.c ****   TIM_OCInitStruct->TIM_OutputNState = TIM_OutputNState_Disable;
 1817              		.loc 1 756 3 is_stmt 1 view .LVU617
 756:./FWLIB/src/stm32f10x_tim.c ****   TIM_OCInitStruct->TIM_OutputNState = TIM_OutputNState_Disable;
ARM GAS  /tmp/ccvVNijM.s 			page 91


 1818              		.loc 1 756 37 is_stmt 0 view .LVU618
 1819 0004 4380     		strh	r3, [r0, #2]	@ movhi
 757:./FWLIB/src/stm32f10x_tim.c ****   TIM_OCInitStruct->TIM_Pulse = 0x0000;
 1820              		.loc 1 757 3 is_stmt 1 view .LVU619
 757:./FWLIB/src/stm32f10x_tim.c ****   TIM_OCInitStruct->TIM_Pulse = 0x0000;
 1821              		.loc 1 757 38 is_stmt 0 view .LVU620
 1822 0006 8380     		strh	r3, [r0, #4]	@ movhi
 758:./FWLIB/src/stm32f10x_tim.c ****   TIM_OCInitStruct->TIM_OCPolarity = TIM_OCPolarity_High;
 1823              		.loc 1 758 3 is_stmt 1 view .LVU621
 758:./FWLIB/src/stm32f10x_tim.c ****   TIM_OCInitStruct->TIM_OCPolarity = TIM_OCPolarity_High;
 1824              		.loc 1 758 31 is_stmt 0 view .LVU622
 1825 0008 C380     		strh	r3, [r0, #6]	@ movhi
 759:./FWLIB/src/stm32f10x_tim.c ****   TIM_OCInitStruct->TIM_OCNPolarity = TIM_OCPolarity_High;
 1826              		.loc 1 759 3 is_stmt 1 view .LVU623
 759:./FWLIB/src/stm32f10x_tim.c ****   TIM_OCInitStruct->TIM_OCNPolarity = TIM_OCPolarity_High;
 1827              		.loc 1 759 36 is_stmt 0 view .LVU624
 1828 000a 0381     		strh	r3, [r0, #8]	@ movhi
 760:./FWLIB/src/stm32f10x_tim.c ****   TIM_OCInitStruct->TIM_OCIdleState = TIM_OCIdleState_Reset;
 1829              		.loc 1 760 3 is_stmt 1 view .LVU625
 760:./FWLIB/src/stm32f10x_tim.c ****   TIM_OCInitStruct->TIM_OCIdleState = TIM_OCIdleState_Reset;
 1830              		.loc 1 760 37 is_stmt 0 view .LVU626
 1831 000c 4381     		strh	r3, [r0, #10]	@ movhi
 761:./FWLIB/src/stm32f10x_tim.c ****   TIM_OCInitStruct->TIM_OCNIdleState = TIM_OCNIdleState_Reset;
 1832              		.loc 1 761 3 is_stmt 1 view .LVU627
 761:./FWLIB/src/stm32f10x_tim.c ****   TIM_OCInitStruct->TIM_OCNIdleState = TIM_OCNIdleState_Reset;
 1833              		.loc 1 761 37 is_stmt 0 view .LVU628
 1834 000e 8381     		strh	r3, [r0, #12]	@ movhi
 762:./FWLIB/src/stm32f10x_tim.c **** }
 1835              		.loc 1 762 3 is_stmt 1 view .LVU629
 762:./FWLIB/src/stm32f10x_tim.c **** }
 1836              		.loc 1 762 38 is_stmt 0 view .LVU630
 1837 0010 C381     		strh	r3, [r0, #14]	@ movhi
 763:./FWLIB/src/stm32f10x_tim.c **** 
 1838              		.loc 1 763 1 view .LVU631
 1839 0012 7047     		bx	lr
 1840              		.cfi_endproc
 1841              	.LFE39:
 1843              		.section	.text.TIM_ICStructInit,"ax",%progbits
 1844              		.align	1
 1845              		.global	TIM_ICStructInit
 1846              		.syntax unified
 1847              		.thumb
 1848              		.thumb_func
 1850              	TIM_ICStructInit:
 1851              	.LVL214:
 1852              	.LFB40:
 772:./FWLIB/src/stm32f10x_tim.c ****   /* Set the default configuration */
 1853              		.loc 1 772 1 is_stmt 1 view -0
 1854              		.cfi_startproc
 1855              		@ args = 0, pretend = 0, frame = 0
 1856              		@ frame_needed = 0, uses_anonymous_args = 0
 1857              		@ link register save eliminated.
 774:./FWLIB/src/stm32f10x_tim.c ****   TIM_ICInitStruct->TIM_ICPolarity = TIM_ICPolarity_Rising;
 1858              		.loc 1 774 3 view .LVU633
 774:./FWLIB/src/stm32f10x_tim.c ****   TIM_ICInitStruct->TIM_ICPolarity = TIM_ICPolarity_Rising;
 1859              		.loc 1 774 33 is_stmt 0 view .LVU634
 1860 0000 0023     		movs	r3, #0
ARM GAS  /tmp/ccvVNijM.s 			page 92


 1861 0002 0380     		strh	r3, [r0]	@ movhi
 775:./FWLIB/src/stm32f10x_tim.c ****   TIM_ICInitStruct->TIM_ICSelection = TIM_ICSelection_DirectTI;
 1862              		.loc 1 775 3 is_stmt 1 view .LVU635
 775:./FWLIB/src/stm32f10x_tim.c ****   TIM_ICInitStruct->TIM_ICSelection = TIM_ICSelection_DirectTI;
 1863              		.loc 1 775 36 is_stmt 0 view .LVU636
 1864 0004 4380     		strh	r3, [r0, #2]	@ movhi
 776:./FWLIB/src/stm32f10x_tim.c ****   TIM_ICInitStruct->TIM_ICPrescaler = TIM_ICPSC_DIV1;
 1865              		.loc 1 776 3 is_stmt 1 view .LVU637
 776:./FWLIB/src/stm32f10x_tim.c ****   TIM_ICInitStruct->TIM_ICPrescaler = TIM_ICPSC_DIV1;
 1866              		.loc 1 776 37 is_stmt 0 view .LVU638
 1867 0006 0122     		movs	r2, #1
 1868 0008 8280     		strh	r2, [r0, #4]	@ movhi
 777:./FWLIB/src/stm32f10x_tim.c ****   TIM_ICInitStruct->TIM_ICFilter = 0x00;
 1869              		.loc 1 777 3 is_stmt 1 view .LVU639
 777:./FWLIB/src/stm32f10x_tim.c ****   TIM_ICInitStruct->TIM_ICFilter = 0x00;
 1870              		.loc 1 777 37 is_stmt 0 view .LVU640
 1871 000a C380     		strh	r3, [r0, #6]	@ movhi
 778:./FWLIB/src/stm32f10x_tim.c **** }
 1872              		.loc 1 778 3 is_stmt 1 view .LVU641
 778:./FWLIB/src/stm32f10x_tim.c **** }
 1873              		.loc 1 778 34 is_stmt 0 view .LVU642
 1874 000c 0381     		strh	r3, [r0, #8]	@ movhi
 779:./FWLIB/src/stm32f10x_tim.c **** 
 1875              		.loc 1 779 1 view .LVU643
 1876 000e 7047     		bx	lr
 1877              		.cfi_endproc
 1878              	.LFE40:
 1880              		.section	.text.TIM_BDTRStructInit,"ax",%progbits
 1881              		.align	1
 1882              		.global	TIM_BDTRStructInit
 1883              		.syntax unified
 1884              		.thumb
 1885              		.thumb_func
 1887              	TIM_BDTRStructInit:
 1888              	.LVL215:
 1889              	.LFB41:
 788:./FWLIB/src/stm32f10x_tim.c ****   /* Set the default configuration */
 1890              		.loc 1 788 1 is_stmt 1 view -0
 1891              		.cfi_startproc
 1892              		@ args = 0, pretend = 0, frame = 0
 1893              		@ frame_needed = 0, uses_anonymous_args = 0
 1894              		@ link register save eliminated.
 790:./FWLIB/src/stm32f10x_tim.c ****   TIM_BDTRInitStruct->TIM_OSSIState = TIM_OSSIState_Disable;
 1895              		.loc 1 790 3 view .LVU645
 790:./FWLIB/src/stm32f10x_tim.c ****   TIM_BDTRInitStruct->TIM_OSSIState = TIM_OSSIState_Disable;
 1896              		.loc 1 790 37 is_stmt 0 view .LVU646
 1897 0000 0023     		movs	r3, #0
 1898 0002 0380     		strh	r3, [r0]	@ movhi
 791:./FWLIB/src/stm32f10x_tim.c ****   TIM_BDTRInitStruct->TIM_LOCKLevel = TIM_LOCKLevel_OFF;
 1899              		.loc 1 791 3 is_stmt 1 view .LVU647
 791:./FWLIB/src/stm32f10x_tim.c ****   TIM_BDTRInitStruct->TIM_LOCKLevel = TIM_LOCKLevel_OFF;
 1900              		.loc 1 791 37 is_stmt 0 view .LVU648
 1901 0004 4380     		strh	r3, [r0, #2]	@ movhi
 792:./FWLIB/src/stm32f10x_tim.c ****   TIM_BDTRInitStruct->TIM_DeadTime = 0x00;
 1902              		.loc 1 792 3 is_stmt 1 view .LVU649
 792:./FWLIB/src/stm32f10x_tim.c ****   TIM_BDTRInitStruct->TIM_DeadTime = 0x00;
 1903              		.loc 1 792 37 is_stmt 0 view .LVU650
ARM GAS  /tmp/ccvVNijM.s 			page 93


 1904 0006 8380     		strh	r3, [r0, #4]	@ movhi
 793:./FWLIB/src/stm32f10x_tim.c ****   TIM_BDTRInitStruct->TIM_Break = TIM_Break_Disable;
 1905              		.loc 1 793 3 is_stmt 1 view .LVU651
 793:./FWLIB/src/stm32f10x_tim.c ****   TIM_BDTRInitStruct->TIM_Break = TIM_Break_Disable;
 1906              		.loc 1 793 36 is_stmt 0 view .LVU652
 1907 0008 C380     		strh	r3, [r0, #6]	@ movhi
 794:./FWLIB/src/stm32f10x_tim.c ****   TIM_BDTRInitStruct->TIM_BreakPolarity = TIM_BreakPolarity_Low;
 1908              		.loc 1 794 3 is_stmt 1 view .LVU653
 794:./FWLIB/src/stm32f10x_tim.c ****   TIM_BDTRInitStruct->TIM_BreakPolarity = TIM_BreakPolarity_Low;
 1909              		.loc 1 794 33 is_stmt 0 view .LVU654
 1910 000a 0381     		strh	r3, [r0, #8]	@ movhi
 795:./FWLIB/src/stm32f10x_tim.c ****   TIM_BDTRInitStruct->TIM_AutomaticOutput = TIM_AutomaticOutput_Disable;
 1911              		.loc 1 795 3 is_stmt 1 view .LVU655
 795:./FWLIB/src/stm32f10x_tim.c ****   TIM_BDTRInitStruct->TIM_AutomaticOutput = TIM_AutomaticOutput_Disable;
 1912              		.loc 1 795 41 is_stmt 0 view .LVU656
 1913 000c 4381     		strh	r3, [r0, #10]	@ movhi
 796:./FWLIB/src/stm32f10x_tim.c **** }
 1914              		.loc 1 796 3 is_stmt 1 view .LVU657
 796:./FWLIB/src/stm32f10x_tim.c **** }
 1915              		.loc 1 796 43 is_stmt 0 view .LVU658
 1916 000e 8381     		strh	r3, [r0, #12]	@ movhi
 797:./FWLIB/src/stm32f10x_tim.c **** 
 1917              		.loc 1 797 1 view .LVU659
 1918 0010 7047     		bx	lr
 1919              		.cfi_endproc
 1920              	.LFE41:
 1922              		.section	.text.TIM_Cmd,"ax",%progbits
 1923              		.align	1
 1924              		.global	TIM_Cmd
 1925              		.syntax unified
 1926              		.thumb
 1927              		.thumb_func
 1929              	TIM_Cmd:
 1930              	.LVL216:
 1931              	.LFB42:
 807:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 1932              		.loc 1 807 1 is_stmt 1 view -0
 1933              		.cfi_startproc
 1934              		@ args = 0, pretend = 0, frame = 0
 1935              		@ frame_needed = 0, uses_anonymous_args = 0
 1936              		@ link register save eliminated.
 809:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 1937              		.loc 1 809 3 view .LVU661
 810:./FWLIB/src/stm32f10x_tim.c ****   
 1938              		.loc 1 810 3 view .LVU662
 812:./FWLIB/src/stm32f10x_tim.c ****   {
 1939              		.loc 1 812 3 view .LVU663
 812:./FWLIB/src/stm32f10x_tim.c ****   {
 1940              		.loc 1 812 6 is_stmt 0 view .LVU664
 1941 0000 29B1     		cbz	r1, .L105
 815:./FWLIB/src/stm32f10x_tim.c ****   }
 1942              		.loc 1 815 5 is_stmt 1 view .LVU665
 815:./FWLIB/src/stm32f10x_tim.c ****   }
 1943              		.loc 1 815 9 is_stmt 0 view .LVU666
 1944 0002 0388     		ldrh	r3, [r0]
 1945 0004 9BB2     		uxth	r3, r3
 815:./FWLIB/src/stm32f10x_tim.c ****   }
ARM GAS  /tmp/ccvVNijM.s 			page 94


 1946              		.loc 1 815 15 view .LVU667
 1947 0006 43F00103 		orr	r3, r3, #1
 1948 000a 0380     		strh	r3, [r0]	@ movhi
 1949 000c 7047     		bx	lr
 1950              	.L105:
 820:./FWLIB/src/stm32f10x_tim.c ****   }
 1951              		.loc 1 820 5 is_stmt 1 view .LVU668
 820:./FWLIB/src/stm32f10x_tim.c ****   }
 1952              		.loc 1 820 9 is_stmt 0 view .LVU669
 1953 000e 0388     		ldrh	r3, [r0]
 1954 0010 9BB2     		uxth	r3, r3
 820:./FWLIB/src/stm32f10x_tim.c ****   }
 1955              		.loc 1 820 15 view .LVU670
 1956 0012 23F00103 		bic	r3, r3, #1
 1957 0016 9BB2     		uxth	r3, r3
 1958 0018 0380     		strh	r3, [r0]	@ movhi
 822:./FWLIB/src/stm32f10x_tim.c **** 
 1959              		.loc 1 822 1 view .LVU671
 1960 001a 7047     		bx	lr
 1961              		.cfi_endproc
 1962              	.LFE42:
 1964              		.section	.text.TIM_CtrlPWMOutputs,"ax",%progbits
 1965              		.align	1
 1966              		.global	TIM_CtrlPWMOutputs
 1967              		.syntax unified
 1968              		.thumb
 1969              		.thumb_func
 1971              	TIM_CtrlPWMOutputs:
 1972              	.LVL217:
 1973              	.LFB43:
 832:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 1974              		.loc 1 832 1 is_stmt 1 view -0
 1975              		.cfi_startproc
 1976              		@ args = 0, pretend = 0, frame = 0
 1977              		@ frame_needed = 0, uses_anonymous_args = 0
 1978              		@ link register save eliminated.
 834:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 1979              		.loc 1 834 3 view .LVU673
 835:./FWLIB/src/stm32f10x_tim.c ****   if (NewState != DISABLE)
 1980              		.loc 1 835 3 view .LVU674
 836:./FWLIB/src/stm32f10x_tim.c ****   {
 1981              		.loc 1 836 3 view .LVU675
 836:./FWLIB/src/stm32f10x_tim.c ****   {
 1982              		.loc 1 836 6 is_stmt 0 view .LVU676
 1983 0000 49B1     		cbz	r1, .L108
 839:./FWLIB/src/stm32f10x_tim.c ****   }
 1984              		.loc 1 839 5 is_stmt 1 view .LVU677
 839:./FWLIB/src/stm32f10x_tim.c ****   }
 1985              		.loc 1 839 9 is_stmt 0 view .LVU678
 1986 0002 B0F84430 		ldrh	r3, [r0, #68]
 839:./FWLIB/src/stm32f10x_tim.c ****   }
 1987              		.loc 1 839 16 view .LVU679
 1988 0006 6FEA4343 		mvn	r3, r3, lsl #17
 1989 000a 6FEA5343 		mvn	r3, r3, lsr #17
 1990 000e 9BB2     		uxth	r3, r3
 1991 0010 A0F84430 		strh	r3, [r0, #68]	@ movhi
 1992 0014 7047     		bx	lr
ARM GAS  /tmp/ccvVNijM.s 			page 95


 1993              	.L108:
 844:./FWLIB/src/stm32f10x_tim.c ****   }  
 1994              		.loc 1 844 5 is_stmt 1 view .LVU680
 844:./FWLIB/src/stm32f10x_tim.c ****   }  
 1995              		.loc 1 844 9 is_stmt 0 view .LVU681
 1996 0016 B0F84430 		ldrh	r3, [r0, #68]
 844:./FWLIB/src/stm32f10x_tim.c ****   }  
 1997              		.loc 1 844 16 view .LVU682
 1998 001a C3F30E03 		ubfx	r3, r3, #0, #15
 1999 001e A0F84430 		strh	r3, [r0, #68]	@ movhi
 846:./FWLIB/src/stm32f10x_tim.c **** 
 2000              		.loc 1 846 1 view .LVU683
 2001 0022 7047     		bx	lr
 2002              		.cfi_endproc
 2003              	.LFE43:
 2005              		.section	.text.TIM_ITConfig,"ax",%progbits
 2006              		.align	1
 2007              		.global	TIM_ITConfig
 2008              		.syntax unified
 2009              		.thumb
 2010              		.thumb_func
 2012              	TIM_ITConfig:
 2013              	.LVL218:
 2014              	.LFB44:
 873:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 2015              		.loc 1 873 1 is_stmt 1 view -0
 2016              		.cfi_startproc
 2017              		@ args = 0, pretend = 0, frame = 0
 2018              		@ frame_needed = 0, uses_anonymous_args = 0
 2019              		@ link register save eliminated.
 875:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_IT(TIM_IT));
 2020              		.loc 1 875 3 view .LVU685
 876:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 2021              		.loc 1 876 3 view .LVU686
 877:./FWLIB/src/stm32f10x_tim.c ****   
 2022              		.loc 1 877 3 view .LVU687
 879:./FWLIB/src/stm32f10x_tim.c ****   {
 2023              		.loc 1 879 3 view .LVU688
 879:./FWLIB/src/stm32f10x_tim.c ****   {
 2024              		.loc 1 879 6 is_stmt 0 view .LVU689
 2025 0000 22B1     		cbz	r2, .L111
 882:./FWLIB/src/stm32f10x_tim.c ****   }
 2026              		.loc 1 882 5 is_stmt 1 view .LVU690
 882:./FWLIB/src/stm32f10x_tim.c ****   }
 2027              		.loc 1 882 9 is_stmt 0 view .LVU691
 2028 0002 8389     		ldrh	r3, [r0, #12]
 2029 0004 9BB2     		uxth	r3, r3
 882:./FWLIB/src/stm32f10x_tim.c ****   }
 2030              		.loc 1 882 16 view .LVU692
 2031 0006 0B43     		orrs	r3, r3, r1
 2032 0008 8381     		strh	r3, [r0, #12]	@ movhi
 2033 000a 7047     		bx	lr
 2034              	.L111:
 887:./FWLIB/src/stm32f10x_tim.c ****   }
 2035              		.loc 1 887 5 is_stmt 1 view .LVU693
 887:./FWLIB/src/stm32f10x_tim.c ****   }
 2036              		.loc 1 887 9 is_stmt 0 view .LVU694
ARM GAS  /tmp/ccvVNijM.s 			page 96


 2037 000c 8389     		ldrh	r3, [r0, #12]
 887:./FWLIB/src/stm32f10x_tim.c ****   }
 2038              		.loc 1 887 19 view .LVU695
 2039 000e C943     		mvns	r1, r1
 2040              	.LVL219:
 887:./FWLIB/src/stm32f10x_tim.c ****   }
 2041              		.loc 1 887 19 view .LVU696
 2042 0010 89B2     		uxth	r1, r1
 887:./FWLIB/src/stm32f10x_tim.c ****   }
 2043              		.loc 1 887 16 view .LVU697
 2044 0012 1940     		ands	r1, r1, r3
 2045 0014 8181     		strh	r1, [r0, #12]	@ movhi
 889:./FWLIB/src/stm32f10x_tim.c **** 
 2046              		.loc 1 889 1 view .LVU698
 2047 0016 7047     		bx	lr
 2048              		.cfi_endproc
 2049              	.LFE44:
 2051              		.section	.text.TIM_GenerateEvent,"ax",%progbits
 2052              		.align	1
 2053              		.global	TIM_GenerateEvent
 2054              		.syntax unified
 2055              		.thumb
 2056              		.thumb_func
 2058              	TIM_GenerateEvent:
 2059              	.LVL220:
 2060              	.LFB45:
 910:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 2061              		.loc 1 910 1 is_stmt 1 view -0
 2062              		.cfi_startproc
 2063              		@ args = 0, pretend = 0, frame = 0
 2064              		@ frame_needed = 0, uses_anonymous_args = 0
 2065              		@ link register save eliminated.
 912:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_EVENT_SOURCE(TIM_EventSource));
 2066              		.loc 1 912 3 view .LVU700
 913:./FWLIB/src/stm32f10x_tim.c ****   
 2067              		.loc 1 913 3 view .LVU701
 916:./FWLIB/src/stm32f10x_tim.c **** }
 2068              		.loc 1 916 3 view .LVU702
 916:./FWLIB/src/stm32f10x_tim.c **** }
 2069              		.loc 1 916 13 is_stmt 0 view .LVU703
 2070 0000 8182     		strh	r1, [r0, #20]	@ movhi
 917:./FWLIB/src/stm32f10x_tim.c **** 
 2071              		.loc 1 917 1 view .LVU704
 2072 0002 7047     		bx	lr
 2073              		.cfi_endproc
 2074              	.LFE45:
 2076              		.section	.text.TIM_DMAConfig,"ax",%progbits
 2077              		.align	1
 2078              		.global	TIM_DMAConfig
 2079              		.syntax unified
 2080              		.thumb
 2081              		.thumb_func
 2083              	TIM_DMAConfig:
 2084              	.LVL221:
 2085              	.LFB46:
 938:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 2086              		.loc 1 938 1 is_stmt 1 view -0
ARM GAS  /tmp/ccvVNijM.s 			page 97


 2087              		.cfi_startproc
 2088              		@ args = 0, pretend = 0, frame = 0
 2089              		@ frame_needed = 0, uses_anonymous_args = 0
 2090              		@ link register save eliminated.
 940:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_DMA_BASE(TIM_DMABase));
 2091              		.loc 1 940 3 view .LVU706
 941:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_DMA_LENGTH(TIM_DMABurstLength));
 2092              		.loc 1 941 3 view .LVU707
 942:./FWLIB/src/stm32f10x_tim.c ****   /* Set the DMA Base and the DMA Burst Length */
 2093              		.loc 1 942 3 view .LVU708
 944:./FWLIB/src/stm32f10x_tim.c **** }
 2094              		.loc 1 944 3 view .LVU709
 944:./FWLIB/src/stm32f10x_tim.c **** }
 2095              		.loc 1 944 13 is_stmt 0 view .LVU710
 2096 0000 1143     		orrs	r1, r1, r2
 2097              	.LVL222:
 944:./FWLIB/src/stm32f10x_tim.c **** }
 2098              		.loc 1 944 13 view .LVU711
 2099 0002 A0F84810 		strh	r1, [r0, #72]	@ movhi
 945:./FWLIB/src/stm32f10x_tim.c **** 
 2100              		.loc 1 945 1 view .LVU712
 2101 0006 7047     		bx	lr
 2102              		.cfi_endproc
 2103              	.LFE46:
 2105              		.section	.text.TIM_DMACmd,"ax",%progbits
 2106              		.align	1
 2107              		.global	TIM_DMACmd
 2108              		.syntax unified
 2109              		.thumb
 2110              		.thumb_func
 2112              	TIM_DMACmd:
 2113              	.LVL223:
 2114              	.LFB47:
 965:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 2115              		.loc 1 965 1 is_stmt 1 view -0
 2116              		.cfi_startproc
 2117              		@ args = 0, pretend = 0, frame = 0
 2118              		@ frame_needed = 0, uses_anonymous_args = 0
 2119              		@ link register save eliminated.
 967:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_DMA_SOURCE(TIM_DMASource));
 2120              		.loc 1 967 3 view .LVU714
 968:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 2121              		.loc 1 968 3 view .LVU715
 969:./FWLIB/src/stm32f10x_tim.c ****   
 2122              		.loc 1 969 3 view .LVU716
 971:./FWLIB/src/stm32f10x_tim.c ****   {
 2123              		.loc 1 971 3 view .LVU717
 971:./FWLIB/src/stm32f10x_tim.c ****   {
 2124              		.loc 1 971 6 is_stmt 0 view .LVU718
 2125 0000 22B1     		cbz	r2, .L116
 974:./FWLIB/src/stm32f10x_tim.c ****   }
 2126              		.loc 1 974 5 is_stmt 1 view .LVU719
 974:./FWLIB/src/stm32f10x_tim.c ****   }
 2127              		.loc 1 974 9 is_stmt 0 view .LVU720
 2128 0002 8389     		ldrh	r3, [r0, #12]
 2129 0004 9BB2     		uxth	r3, r3
 974:./FWLIB/src/stm32f10x_tim.c ****   }
ARM GAS  /tmp/ccvVNijM.s 			page 98


 2130              		.loc 1 974 16 view .LVU721
 2131 0006 0B43     		orrs	r3, r3, r1
 2132 0008 8381     		strh	r3, [r0, #12]	@ movhi
 2133 000a 7047     		bx	lr
 2134              	.L116:
 979:./FWLIB/src/stm32f10x_tim.c ****   }
 2135              		.loc 1 979 5 is_stmt 1 view .LVU722
 979:./FWLIB/src/stm32f10x_tim.c ****   }
 2136              		.loc 1 979 9 is_stmt 0 view .LVU723
 2137 000c 8389     		ldrh	r3, [r0, #12]
 979:./FWLIB/src/stm32f10x_tim.c ****   }
 2138              		.loc 1 979 19 view .LVU724
 2139 000e C943     		mvns	r1, r1
 2140              	.LVL224:
 979:./FWLIB/src/stm32f10x_tim.c ****   }
 2141              		.loc 1 979 19 view .LVU725
 2142 0010 89B2     		uxth	r1, r1
 979:./FWLIB/src/stm32f10x_tim.c ****   }
 2143              		.loc 1 979 16 view .LVU726
 2144 0012 1940     		ands	r1, r1, r3
 2145 0014 8181     		strh	r1, [r0, #12]	@ movhi
 981:./FWLIB/src/stm32f10x_tim.c **** 
 2146              		.loc 1 981 1 view .LVU727
 2147 0016 7047     		bx	lr
 2148              		.cfi_endproc
 2149              	.LFE47:
 2151              		.section	.text.TIM_InternalClockConfig,"ax",%progbits
 2152              		.align	1
 2153              		.global	TIM_InternalClockConfig
 2154              		.syntax unified
 2155              		.thumb
 2156              		.thumb_func
 2158              	TIM_InternalClockConfig:
 2159              	.LVL225:
 2160              	.LFB48:
 990:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 2161              		.loc 1 990 1 is_stmt 1 view -0
 2162              		.cfi_startproc
 2163              		@ args = 0, pretend = 0, frame = 0
 2164              		@ frame_needed = 0, uses_anonymous_args = 0
 2165              		@ link register save eliminated.
 992:./FWLIB/src/stm32f10x_tim.c ****   /* Disable slave mode to clock the prescaler directly with the internal clock */
 2166              		.loc 1 992 3 view .LVU729
 994:./FWLIB/src/stm32f10x_tim.c **** }
 2167              		.loc 1 994 3 view .LVU730
 994:./FWLIB/src/stm32f10x_tim.c **** }
 2168              		.loc 1 994 7 is_stmt 0 view .LVU731
 2169 0000 0389     		ldrh	r3, [r0, #8]
 2170 0002 9BB2     		uxth	r3, r3
 994:./FWLIB/src/stm32f10x_tim.c **** }
 2171              		.loc 1 994 14 view .LVU732
 2172 0004 23F00703 		bic	r3, r3, #7
 2173 0008 9BB2     		uxth	r3, r3
 2174 000a 0381     		strh	r3, [r0, #8]	@ movhi
 995:./FWLIB/src/stm32f10x_tim.c **** 
 2175              		.loc 1 995 1 view .LVU733
 2176 000c 7047     		bx	lr
ARM GAS  /tmp/ccvVNijM.s 			page 99


 2177              		.cfi_endproc
 2178              	.LFE48:
 2180              		.section	.text.TIM_ETRConfig,"ax",%progbits
 2181              		.align	1
 2182              		.global	TIM_ETRConfig
 2183              		.syntax unified
 2184              		.thumb
 2185              		.thumb_func
 2187              	TIM_ETRConfig:
 2188              	.LVL226:
 2189              	.LFB53:
1150:./FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpsmcr = 0;
 2190              		.loc 1 1150 1 is_stmt 1 view -0
 2191              		.cfi_startproc
 2192              		@ args = 0, pretend = 0, frame = 0
 2193              		@ frame_needed = 0, uses_anonymous_args = 0
 2194              		@ link register save eliminated.
1151:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 2195              		.loc 1 1151 3 view .LVU735
1153:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_EXT_PRESCALER(TIM_ExtTRGPrescaler));
 2196              		.loc 1 1153 3 view .LVU736
1154:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_EXT_POLARITY(TIM_ExtTRGPolarity));
 2197              		.loc 1 1154 3 view .LVU737
1155:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_EXT_FILTER(ExtTRGFilter));
 2198              		.loc 1 1155 3 view .LVU738
1156:./FWLIB/src/stm32f10x_tim.c ****   tmpsmcr = TIMx->SMCR;
 2199              		.loc 1 1156 3 view .LVU739
1157:./FWLIB/src/stm32f10x_tim.c ****   /* Reset the ETR Bits */
 2200              		.loc 1 1157 3 view .LVU740
1157:./FWLIB/src/stm32f10x_tim.c ****   /* Reset the ETR Bits */
 2201              		.loc 1 1157 11 is_stmt 0 view .LVU741
 2202 0000 B0F808C0 		ldrh	ip, [r0, #8]
 2203              	.LVL227:
1159:./FWLIB/src/stm32f10x_tim.c ****   /* Set the Prescaler, the Filter value and the Polarity */
 2204              		.loc 1 1159 3 is_stmt 1 view .LVU742
1159:./FWLIB/src/stm32f10x_tim.c ****   /* Set the Prescaler, the Filter value and the Polarity */
 2205              		.loc 1 1159 11 is_stmt 0 view .LVU743
 2206 0004 5FFA8CFC 		uxtb	ip, ip
 2207              	.LVL228:
1161:./FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx SMCR */
 2208              		.loc 1 1161 3 is_stmt 1 view .LVU744
1161:./FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx SMCR */
 2209              		.loc 1 1161 79 is_stmt 0 view .LVU745
 2210 0008 1B02     		lsls	r3, r3, #8
 2211              	.LVL229:
1161:./FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx SMCR */
 2212              		.loc 1 1161 79 view .LVU746
 2213 000a 9BB2     		uxth	r3, r3
1161:./FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx SMCR */
 2214              		.loc 1 1161 47 view .LVU747
 2215 000c 1343     		orrs	r3, r3, r2
1161:./FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx SMCR */
 2216              		.loc 1 1161 14 view .LVU748
 2217 000e 0B43     		orrs	r3, r3, r1
1161:./FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx SMCR */
 2218              		.loc 1 1161 11 view .LVU749
 2219 0010 43EA0C03 		orr	r3, r3, ip
ARM GAS  /tmp/ccvVNijM.s 			page 100


 2220              	.LVL230:
1163:./FWLIB/src/stm32f10x_tim.c **** }
 2221              		.loc 1 1163 3 is_stmt 1 view .LVU750
1163:./FWLIB/src/stm32f10x_tim.c **** }
 2222              		.loc 1 1163 14 is_stmt 0 view .LVU751
 2223 0014 0381     		strh	r3, [r0, #8]	@ movhi
1164:./FWLIB/src/stm32f10x_tim.c **** 
 2224              		.loc 1 1164 1 view .LVU752
 2225 0016 7047     		bx	lr
 2226              		.cfi_endproc
 2227              	.LFE53:
 2229              		.section	.text.TIM_ETRClockMode1Config,"ax",%progbits
 2230              		.align	1
 2231              		.global	TIM_ETRClockMode1Config
 2232              		.syntax unified
 2233              		.thumb
 2234              		.thumb_func
 2236              	TIM_ETRClockMode1Config:
 2237              	.LVL231:
 2238              	.LFB51:
1077:./FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpsmcr = 0;
 2239              		.loc 1 1077 1 is_stmt 1 view -0
 2240              		.cfi_startproc
 2241              		@ args = 0, pretend = 0, frame = 0
 2242              		@ frame_needed = 0, uses_anonymous_args = 0
1077:./FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpsmcr = 0;
 2243              		.loc 1 1077 1 is_stmt 0 view .LVU754
 2244 0000 10B5     		push	{r4, lr}
 2245              	.LCFI10:
 2246              		.cfi_def_cfa_offset 8
 2247              		.cfi_offset 4, -8
 2248              		.cfi_offset 14, -4
 2249 0002 0446     		mov	r4, r0
1078:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 2250              		.loc 1 1078 3 is_stmt 1 view .LVU755
 2251              	.LVL232:
1080:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_EXT_PRESCALER(TIM_ExtTRGPrescaler));
 2252              		.loc 1 1080 3 view .LVU756
1081:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_EXT_POLARITY(TIM_ExtTRGPolarity));
 2253              		.loc 1 1081 3 view .LVU757
1082:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_EXT_FILTER(ExtTRGFilter));
 2254              		.loc 1 1082 3 view .LVU758
1083:./FWLIB/src/stm32f10x_tim.c ****   /* Configure the ETR Clock source */
 2255              		.loc 1 1083 3 view .LVU759
1085:./FWLIB/src/stm32f10x_tim.c ****   
 2256              		.loc 1 1085 3 view .LVU760
 2257 0004 FFF7FEFF 		bl	TIM_ETRConfig
 2258              	.LVL233:
1088:./FWLIB/src/stm32f10x_tim.c ****   /* Reset the SMS Bits */
 2259              		.loc 1 1088 3 view .LVU761
1088:./FWLIB/src/stm32f10x_tim.c ****   /* Reset the SMS Bits */
 2260              		.loc 1 1088 11 is_stmt 0 view .LVU762
 2261 0008 2389     		ldrh	r3, [r4, #8]
 2262 000a 9BB2     		uxth	r3, r3
 2263              	.LVL234:
1090:./FWLIB/src/stm32f10x_tim.c ****   /* Select the External clock mode1 */
 2264              		.loc 1 1090 3 is_stmt 1 view .LVU763
ARM GAS  /tmp/ccvVNijM.s 			page 101


1092:./FWLIB/src/stm32f10x_tim.c ****   /* Select the Trigger selection : ETRF */
 2265              		.loc 1 1092 3 view .LVU764
1094:./FWLIB/src/stm32f10x_tim.c ****   tmpsmcr |= TIM_TS_ETRF;
 2266              		.loc 1 1094 3 view .LVU765
1095:./FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx SMCR */
 2267              		.loc 1 1095 3 view .LVU766
1095:./FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx SMCR */
 2268              		.loc 1 1095 11 is_stmt 0 view .LVU767
 2269 000c 43F07703 		orr	r3, r3, #119
 2270              	.LVL235:
1097:./FWLIB/src/stm32f10x_tim.c **** }
 2271              		.loc 1 1097 3 is_stmt 1 view .LVU768
1097:./FWLIB/src/stm32f10x_tim.c **** }
 2272              		.loc 1 1097 14 is_stmt 0 view .LVU769
 2273 0010 2381     		strh	r3, [r4, #8]	@ movhi
1098:./FWLIB/src/stm32f10x_tim.c **** 
 2274              		.loc 1 1098 1 view .LVU770
 2275 0012 10BD     		pop	{r4, pc}
1098:./FWLIB/src/stm32f10x_tim.c **** 
 2276              		.loc 1 1098 1 view .LVU771
 2277              		.cfi_endproc
 2278              	.LFE51:
 2280              		.section	.text.TIM_ETRClockMode2Config,"ax",%progbits
 2281              		.align	1
 2282              		.global	TIM_ETRClockMode2Config
 2283              		.syntax unified
 2284              		.thumb
 2285              		.thumb_func
 2287              	TIM_ETRClockMode2Config:
 2288              	.LVL236:
 2289              	.LFB52:
1119:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 2290              		.loc 1 1119 1 is_stmt 1 view -0
 2291              		.cfi_startproc
 2292              		@ args = 0, pretend = 0, frame = 0
 2293              		@ frame_needed = 0, uses_anonymous_args = 0
1119:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 2294              		.loc 1 1119 1 is_stmt 0 view .LVU773
 2295 0000 10B5     		push	{r4, lr}
 2296              	.LCFI11:
 2297              		.cfi_def_cfa_offset 8
 2298              		.cfi_offset 4, -8
 2299              		.cfi_offset 14, -4
 2300 0002 0446     		mov	r4, r0
1121:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_EXT_PRESCALER(TIM_ExtTRGPrescaler));
 2301              		.loc 1 1121 3 is_stmt 1 view .LVU774
1122:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_EXT_POLARITY(TIM_ExtTRGPolarity));
 2302              		.loc 1 1122 3 view .LVU775
1123:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_EXT_FILTER(ExtTRGFilter));
 2303              		.loc 1 1123 3 view .LVU776
1124:./FWLIB/src/stm32f10x_tim.c ****   /* Configure the ETR Clock source */
 2304              		.loc 1 1124 3 view .LVU777
1126:./FWLIB/src/stm32f10x_tim.c ****   /* Enable the External clock mode2 */
 2305              		.loc 1 1126 3 view .LVU778
 2306 0004 FFF7FEFF 		bl	TIM_ETRConfig
 2307              	.LVL237:
1128:./FWLIB/src/stm32f10x_tim.c **** }
ARM GAS  /tmp/ccvVNijM.s 			page 102


 2308              		.loc 1 1128 3 view .LVU779
1128:./FWLIB/src/stm32f10x_tim.c **** }
 2309              		.loc 1 1128 7 is_stmt 0 view .LVU780
 2310 0008 2389     		ldrh	r3, [r4, #8]
 2311 000a 9BB2     		uxth	r3, r3
1128:./FWLIB/src/stm32f10x_tim.c **** }
 2312              		.loc 1 1128 14 view .LVU781
 2313 000c 43F48043 		orr	r3, r3, #16384
 2314 0010 2381     		strh	r3, [r4, #8]	@ movhi
1129:./FWLIB/src/stm32f10x_tim.c **** 
 2315              		.loc 1 1129 1 view .LVU782
 2316 0012 10BD     		pop	{r4, pc}
1129:./FWLIB/src/stm32f10x_tim.c **** 
 2317              		.loc 1 1129 1 view .LVU783
 2318              		.cfi_endproc
 2319              	.LFE52:
 2321              		.section	.text.TIM_PrescalerConfig,"ax",%progbits
 2322              		.align	1
 2323              		.global	TIM_PrescalerConfig
 2324              		.syntax unified
 2325              		.thumb
 2326              		.thumb_func
 2328              	TIM_PrescalerConfig:
 2329              	.LVL238:
 2330              	.LFB54:
1177:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 2331              		.loc 1 1177 1 is_stmt 1 view -0
 2332              		.cfi_startproc
 2333              		@ args = 0, pretend = 0, frame = 0
 2334              		@ frame_needed = 0, uses_anonymous_args = 0
 2335              		@ link register save eliminated.
1179:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_PRESCALER_RELOAD(TIM_PSCReloadMode));
 2336              		.loc 1 1179 3 view .LVU785
1180:./FWLIB/src/stm32f10x_tim.c ****   /* Set the Prescaler value */
 2337              		.loc 1 1180 3 view .LVU786
1182:./FWLIB/src/stm32f10x_tim.c ****   /* Set or reset the UG Bit */
 2338              		.loc 1 1182 3 view .LVU787
1182:./FWLIB/src/stm32f10x_tim.c ****   /* Set or reset the UG Bit */
 2339              		.loc 1 1182 13 is_stmt 0 view .LVU788
 2340 0000 0185     		strh	r1, [r0, #40]	@ movhi
1184:./FWLIB/src/stm32f10x_tim.c **** }
 2341              		.loc 1 1184 3 is_stmt 1 view .LVU789
1184:./FWLIB/src/stm32f10x_tim.c **** }
 2342              		.loc 1 1184 13 is_stmt 0 view .LVU790
 2343 0002 8282     		strh	r2, [r0, #20]	@ movhi
1185:./FWLIB/src/stm32f10x_tim.c **** 
 2344              		.loc 1 1185 1 view .LVU791
 2345 0004 7047     		bx	lr
 2346              		.cfi_endproc
 2347              	.LFE54:
 2349              		.section	.text.TIM_CounterModeConfig,"ax",%progbits
 2350              		.align	1
 2351              		.global	TIM_CounterModeConfig
 2352              		.syntax unified
 2353              		.thumb
 2354              		.thumb_func
 2356              	TIM_CounterModeConfig:
ARM GAS  /tmp/ccvVNijM.s 			page 103


 2357              	.LVL239:
 2358              	.LFB55:
1200:./FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpcr1 = 0;
 2359              		.loc 1 1200 1 is_stmt 1 view -0
 2360              		.cfi_startproc
 2361              		@ args = 0, pretend = 0, frame = 0
 2362              		@ frame_needed = 0, uses_anonymous_args = 0
 2363              		@ link register save eliminated.
1201:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 2364              		.loc 1 1201 3 view .LVU793
1203:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_COUNTER_MODE(TIM_CounterMode));
 2365              		.loc 1 1203 3 view .LVU794
1204:./FWLIB/src/stm32f10x_tim.c ****   tmpcr1 = TIMx->CR1;
 2366              		.loc 1 1204 3 view .LVU795
1205:./FWLIB/src/stm32f10x_tim.c ****   /* Reset the CMS and DIR Bits */
 2367              		.loc 1 1205 3 view .LVU796
1205:./FWLIB/src/stm32f10x_tim.c ****   /* Reset the CMS and DIR Bits */
 2368              		.loc 1 1205 10 is_stmt 0 view .LVU797
 2369 0000 0388     		ldrh	r3, [r0]
 2370 0002 9BB2     		uxth	r3, r3
 2371              	.LVL240:
1207:./FWLIB/src/stm32f10x_tim.c ****   /* Set the Counter Mode */
 2372              		.loc 1 1207 3 is_stmt 1 view .LVU798
1207:./FWLIB/src/stm32f10x_tim.c ****   /* Set the Counter Mode */
 2373              		.loc 1 1207 10 is_stmt 0 view .LVU799
 2374 0004 23F07003 		bic	r3, r3, #112
 2375              	.LVL241:
1209:./FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CR1 register */
 2376              		.loc 1 1209 3 is_stmt 1 view .LVU800
1209:./FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CR1 register */
 2377              		.loc 1 1209 10 is_stmt 0 view .LVU801
 2378 0008 0B43     		orrs	r3, r3, r1
 2379              	.LVL242:
1211:./FWLIB/src/stm32f10x_tim.c **** }
 2380              		.loc 1 1211 3 is_stmt 1 view .LVU802
1211:./FWLIB/src/stm32f10x_tim.c **** }
 2381              		.loc 1 1211 13 is_stmt 0 view .LVU803
 2382 000a 0380     		strh	r3, [r0]	@ movhi
1212:./FWLIB/src/stm32f10x_tim.c **** 
 2383              		.loc 1 1212 1 view .LVU804
 2384 000c 7047     		bx	lr
 2385              		.cfi_endproc
 2386              	.LFE55:
 2388              		.section	.text.TIM_SelectInputTrigger,"ax",%progbits
 2389              		.align	1
 2390              		.global	TIM_SelectInputTrigger
 2391              		.syntax unified
 2392              		.thumb
 2393              		.thumb_func
 2395              	TIM_SelectInputTrigger:
 2396              	.LVL243:
 2397              	.LFB56:
1230:./FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpsmcr = 0;
 2398              		.loc 1 1230 1 is_stmt 1 view -0
 2399              		.cfi_startproc
 2400              		@ args = 0, pretend = 0, frame = 0
 2401              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccvVNijM.s 			page 104


 2402              		@ link register save eliminated.
1231:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 2403              		.loc 1 1231 3 view .LVU806
1233:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_TRIGGER_SELECTION(TIM_InputTriggerSource));
 2404              		.loc 1 1233 3 view .LVU807
1234:./FWLIB/src/stm32f10x_tim.c ****   /* Get the TIMx SMCR register value */
 2405              		.loc 1 1234 3 view .LVU808
1236:./FWLIB/src/stm32f10x_tim.c ****   /* Reset the TS Bits */
 2406              		.loc 1 1236 3 view .LVU809
1236:./FWLIB/src/stm32f10x_tim.c ****   /* Reset the TS Bits */
 2407              		.loc 1 1236 11 is_stmt 0 view .LVU810
 2408 0000 0389     		ldrh	r3, [r0, #8]
 2409 0002 9BB2     		uxth	r3, r3
 2410              	.LVL244:
1238:./FWLIB/src/stm32f10x_tim.c ****   /* Set the Input Trigger source */
 2411              		.loc 1 1238 3 is_stmt 1 view .LVU811
1238:./FWLIB/src/stm32f10x_tim.c ****   /* Set the Input Trigger source */
 2412              		.loc 1 1238 11 is_stmt 0 view .LVU812
 2413 0004 23F07003 		bic	r3, r3, #112
 2414              	.LVL245:
1240:./FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx SMCR */
 2415              		.loc 1 1240 3 is_stmt 1 view .LVU813
1240:./FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx SMCR */
 2416              		.loc 1 1240 11 is_stmt 0 view .LVU814
 2417 0008 0B43     		orrs	r3, r3, r1
 2418              	.LVL246:
1242:./FWLIB/src/stm32f10x_tim.c **** }
 2419              		.loc 1 1242 3 is_stmt 1 view .LVU815
1242:./FWLIB/src/stm32f10x_tim.c **** }
 2420              		.loc 1 1242 14 is_stmt 0 view .LVU816
 2421 000a 0381     		strh	r3, [r0, #8]	@ movhi
1243:./FWLIB/src/stm32f10x_tim.c **** 
 2422              		.loc 1 1243 1 view .LVU817
 2423 000c 7047     		bx	lr
 2424              		.cfi_endproc
 2425              	.LFE56:
 2427              		.section	.text.TIM_ITRxExternalClockConfig,"ax",%progbits
 2428              		.align	1
 2429              		.global	TIM_ITRxExternalClockConfig
 2430              		.syntax unified
 2431              		.thumb
 2432              		.thumb_func
 2434              	TIM_ITRxExternalClockConfig:
 2435              	.LVL247:
 2436              	.LFB49:
1009:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 2437              		.loc 1 1009 1 is_stmt 1 view -0
 2438              		.cfi_startproc
 2439              		@ args = 0, pretend = 0, frame = 0
 2440              		@ frame_needed = 0, uses_anonymous_args = 0
1009:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 2441              		.loc 1 1009 1 is_stmt 0 view .LVU819
 2442 0000 10B5     		push	{r4, lr}
 2443              	.LCFI12:
 2444              		.cfi_def_cfa_offset 8
 2445              		.cfi_offset 4, -8
 2446              		.cfi_offset 14, -4
ARM GAS  /tmp/ccvVNijM.s 			page 105


 2447 0002 0446     		mov	r4, r0
1011:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_INTERNAL_TRIGGER_SELECTION(TIM_InputTriggerSource));
 2448              		.loc 1 1011 3 is_stmt 1 view .LVU820
1012:./FWLIB/src/stm32f10x_tim.c ****   /* Select the Internal Trigger */
 2449              		.loc 1 1012 3 view .LVU821
1014:./FWLIB/src/stm32f10x_tim.c ****   /* Select the External clock mode1 */
 2450              		.loc 1 1014 3 view .LVU822
 2451 0004 FFF7FEFF 		bl	TIM_SelectInputTrigger
 2452              	.LVL248:
1016:./FWLIB/src/stm32f10x_tim.c **** }
 2453              		.loc 1 1016 3 view .LVU823
1016:./FWLIB/src/stm32f10x_tim.c **** }
 2454              		.loc 1 1016 7 is_stmt 0 view .LVU824
 2455 0008 2389     		ldrh	r3, [r4, #8]
 2456 000a 9BB2     		uxth	r3, r3
1016:./FWLIB/src/stm32f10x_tim.c **** }
 2457              		.loc 1 1016 14 view .LVU825
 2458 000c 43F00703 		orr	r3, r3, #7
 2459 0010 2381     		strh	r3, [r4, #8]	@ movhi
1017:./FWLIB/src/stm32f10x_tim.c **** 
 2460              		.loc 1 1017 1 view .LVU826
 2461 0012 10BD     		pop	{r4, pc}
1017:./FWLIB/src/stm32f10x_tim.c **** 
 2462              		.loc 1 1017 1 view .LVU827
 2463              		.cfi_endproc
 2464              	.LFE49:
 2466              		.section	.text.TIM_TIxExternalClockConfig,"ax",%progbits
 2467              		.align	1
 2468              		.global	TIM_TIxExternalClockConfig
 2469              		.syntax unified
 2470              		.thumb
 2471              		.thumb_func
 2473              	TIM_TIxExternalClockConfig:
 2474              	.LVL249:
 2475              	.LFB50:
1037:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 2476              		.loc 1 1037 1 is_stmt 1 view -0
 2477              		.cfi_startproc
 2478              		@ args = 0, pretend = 0, frame = 0
 2479              		@ frame_needed = 0, uses_anonymous_args = 0
1037:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 2480              		.loc 1 1037 1 is_stmt 0 view .LVU829
 2481 0000 38B5     		push	{r3, r4, r5, lr}
 2482              	.LCFI13:
 2483              		.cfi_def_cfa_offset 16
 2484              		.cfi_offset 3, -16
 2485              		.cfi_offset 4, -12
 2486              		.cfi_offset 5, -8
 2487              		.cfi_offset 14, -4
 2488 0002 0446     		mov	r4, r0
 2489 0004 0D46     		mov	r5, r1
 2490 0006 1146     		mov	r1, r2
 2491              	.LVL250:
1039:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_TIXCLK_SOURCE(TIM_TIxExternalCLKSource));
 2492              		.loc 1 1039 3 is_stmt 1 view .LVU830
1040:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_IC_POLARITY(TIM_ICPolarity));
 2493              		.loc 1 1040 3 view .LVU831
ARM GAS  /tmp/ccvVNijM.s 			page 106


1041:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_IC_FILTER(ICFilter));
 2494              		.loc 1 1041 3 view .LVU832
1042:./FWLIB/src/stm32f10x_tim.c ****   /* Configure the Timer Input Clock Source */
 2495              		.loc 1 1042 3 view .LVU833
1044:./FWLIB/src/stm32f10x_tim.c ****   {
 2496              		.loc 1 1044 3 view .LVU834
1044:./FWLIB/src/stm32f10x_tim.c ****   {
 2497              		.loc 1 1044 6 is_stmt 0 view .LVU835
 2498 0008 602D     		cmp	r5, #96
 2499 000a 0CD0     		beq	.L133
1050:./FWLIB/src/stm32f10x_tim.c ****   }
 2500              		.loc 1 1050 5 is_stmt 1 view .LVU836
 2501 000c 0122     		movs	r2, #1
 2502              	.LVL251:
1050:./FWLIB/src/stm32f10x_tim.c ****   }
 2503              		.loc 1 1050 5 is_stmt 0 view .LVU837
 2504 000e FFF7FEFF 		bl	TI1_Config
 2505              	.LVL252:
 2506              	.L131:
1053:./FWLIB/src/stm32f10x_tim.c ****   /* Select the External clock mode1 */
 2507              		.loc 1 1053 3 is_stmt 1 view .LVU838
 2508 0012 2946     		mov	r1, r5
 2509 0014 2046     		mov	r0, r4
 2510 0016 FFF7FEFF 		bl	TIM_SelectInputTrigger
 2511              	.LVL253:
1055:./FWLIB/src/stm32f10x_tim.c **** }
 2512              		.loc 1 1055 3 view .LVU839
1055:./FWLIB/src/stm32f10x_tim.c **** }
 2513              		.loc 1 1055 7 is_stmt 0 view .LVU840
 2514 001a 2389     		ldrh	r3, [r4, #8]
 2515 001c 9BB2     		uxth	r3, r3
1055:./FWLIB/src/stm32f10x_tim.c **** }
 2516              		.loc 1 1055 14 view .LVU841
 2517 001e 43F00703 		orr	r3, r3, #7
 2518 0022 2381     		strh	r3, [r4, #8]	@ movhi
1056:./FWLIB/src/stm32f10x_tim.c **** 
 2519              		.loc 1 1056 1 view .LVU842
 2520 0024 38BD     		pop	{r3, r4, r5, pc}
 2521              	.LVL254:
 2522              	.L133:
1046:./FWLIB/src/stm32f10x_tim.c ****   }
 2523              		.loc 1 1046 5 is_stmt 1 view .LVU843
 2524 0026 0122     		movs	r2, #1
 2525              	.LVL255:
1046:./FWLIB/src/stm32f10x_tim.c ****   }
 2526              		.loc 1 1046 5 is_stmt 0 view .LVU844
 2527 0028 FFF7FEFF 		bl	TI2_Config
 2528              	.LVL256:
1046:./FWLIB/src/stm32f10x_tim.c ****   }
 2529              		.loc 1 1046 5 view .LVU845
 2530 002c F1E7     		b	.L131
 2531              		.cfi_endproc
 2532              	.LFE50:
 2534              		.section	.text.TIM_EncoderInterfaceConfig,"ax",%progbits
 2535              		.align	1
 2536              		.global	TIM_EncoderInterfaceConfig
 2537              		.syntax unified
ARM GAS  /tmp/ccvVNijM.s 			page 107


 2538              		.thumb
 2539              		.thumb_func
 2541              	TIM_EncoderInterfaceConfig:
 2542              	.LVL257:
 2543              	.LFB57:
1266:./FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpsmcr = 0;
 2544              		.loc 1 1266 1 is_stmt 1 view -0
 2545              		.cfi_startproc
 2546              		@ args = 0, pretend = 0, frame = 0
 2547              		@ frame_needed = 0, uses_anonymous_args = 0
1266:./FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpsmcr = 0;
 2548              		.loc 1 1266 1 is_stmt 0 view .LVU847
 2549 0000 10B5     		push	{r4, lr}
 2550              	.LCFI14:
 2551              		.cfi_def_cfa_offset 8
 2552              		.cfi_offset 4, -8
 2553              		.cfi_offset 14, -4
1267:./FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpccmr1 = 0;
 2554              		.loc 1 1267 3 is_stmt 1 view .LVU848
 2555              	.LVL258:
1268:./FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpccer = 0;
 2556              		.loc 1 1268 3 view .LVU849
1269:./FWLIB/src/stm32f10x_tim.c ****     
 2557              		.loc 1 1269 3 view .LVU850
1272:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_ENCODER_MODE(TIM_EncoderMode));
 2558              		.loc 1 1272 3 view .LVU851
1273:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_IC_POLARITY(TIM_IC1Polarity));
 2559              		.loc 1 1273 3 view .LVU852
1274:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_IC_POLARITY(TIM_IC2Polarity));
 2560              		.loc 1 1274 3 view .LVU853
1275:./FWLIB/src/stm32f10x_tim.c **** 
 2561              		.loc 1 1275 3 view .LVU854
1278:./FWLIB/src/stm32f10x_tim.c ****   
 2562              		.loc 1 1278 3 view .LVU855
1278:./FWLIB/src/stm32f10x_tim.c ****   
 2563              		.loc 1 1278 11 is_stmt 0 view .LVU856
 2564 0002 0489     		ldrh	r4, [r0, #8]
 2565 0004 A4B2     		uxth	r4, r4
 2566              	.LVL259:
1281:./FWLIB/src/stm32f10x_tim.c ****   
 2567              		.loc 1 1281 3 is_stmt 1 view .LVU857
1281:./FWLIB/src/stm32f10x_tim.c ****   
 2568              		.loc 1 1281 12 is_stmt 0 view .LVU858
 2569 0006 B0F818C0 		ldrh	ip, [r0, #24]
 2570 000a 1FFA8CFC 		uxth	ip, ip
 2571              	.LVL260:
1284:./FWLIB/src/stm32f10x_tim.c ****   
 2572              		.loc 1 1284 3 is_stmt 1 view .LVU859
1284:./FWLIB/src/stm32f10x_tim.c ****   
 2573              		.loc 1 1284 11 is_stmt 0 view .LVU860
 2574 000e B0F820E0 		ldrh	lr, [r0, #32]
 2575 0012 1FFA8EFE 		uxth	lr, lr
 2576              	.LVL261:
1287:./FWLIB/src/stm32f10x_tim.c ****   tmpsmcr |= TIM_EncoderMode;
 2577              		.loc 1 1287 3 is_stmt 1 view .LVU861
1287:./FWLIB/src/stm32f10x_tim.c ****   tmpsmcr |= TIM_EncoderMode;
 2578              		.loc 1 1287 11 is_stmt 0 view .LVU862
ARM GAS  /tmp/ccvVNijM.s 			page 108


 2579 0016 24F00704 		bic	r4, r4, #7
 2580              	.LVL262:
1288:./FWLIB/src/stm32f10x_tim.c ****   
 2581              		.loc 1 1288 3 is_stmt 1 view .LVU863
1288:./FWLIB/src/stm32f10x_tim.c ****   
 2582              		.loc 1 1288 11 is_stmt 0 view .LVU864
 2583 001a 0C43     		orrs	r4, r4, r1
 2584              	.LVL263:
1291:./FWLIB/src/stm32f10x_tim.c ****   tmpccmr1 |= TIM_CCMR1_CC1S_0 | TIM_CCMR1_CC2S_0;
 2585              		.loc 1 1291 3 is_stmt 1 view .LVU865
1291:./FWLIB/src/stm32f10x_tim.c ****   tmpccmr1 |= TIM_CCMR1_CC1S_0 | TIM_CCMR1_CC2S_0;
 2586              		.loc 1 1291 12 is_stmt 0 view .LVU866
 2587 001c 2CF4407C 		bic	ip, ip, #768
 2588              	.LVL264:
1291:./FWLIB/src/stm32f10x_tim.c ****   tmpccmr1 |= TIM_CCMR1_CC1S_0 | TIM_CCMR1_CC2S_0;
 2589              		.loc 1 1291 12 view .LVU867
 2590 0020 2CF0030C 		bic	ip, ip, #3
 2591              	.LVL265:
1292:./FWLIB/src/stm32f10x_tim.c ****   
 2592              		.loc 1 1292 3 is_stmt 1 view .LVU868
1292:./FWLIB/src/stm32f10x_tim.c ****   
 2593              		.loc 1 1292 12 is_stmt 0 view .LVU869
 2594 0024 4CF4807C 		orr	ip, ip, #256
 2595              	.LVL266:
1292:./FWLIB/src/stm32f10x_tim.c ****   
 2596              		.loc 1 1292 12 view .LVU870
 2597 0028 4CF0010C 		orr	ip, ip, #1
 2598              	.LVL267:
1295:./FWLIB/src/stm32f10x_tim.c ****   tmpccer |= (uint16_t)(TIM_IC1Polarity | (uint16_t)(TIM_IC2Polarity << (uint16_t)4));
 2599              		.loc 1 1295 3 is_stmt 1 view .LVU871
1295:./FWLIB/src/stm32f10x_tim.c ****   tmpccer |= (uint16_t)(TIM_IC1Polarity | (uint16_t)(TIM_IC2Polarity << (uint16_t)4));
 2600              		.loc 1 1295 11 is_stmt 0 view .LVU872
 2601 002c 2EF0220E 		bic	lr, lr, #34
 2602              	.LVL268:
1296:./FWLIB/src/stm32f10x_tim.c ****   
 2603              		.loc 1 1296 3 is_stmt 1 view .LVU873
1296:./FWLIB/src/stm32f10x_tim.c ****   
 2604              		.loc 1 1296 43 is_stmt 0 view .LVU874
 2605 0030 1B01     		lsls	r3, r3, #4
 2606              	.LVL269:
1296:./FWLIB/src/stm32f10x_tim.c ****   
 2607              		.loc 1 1296 43 view .LVU875
 2608 0032 9BB2     		uxth	r3, r3
1296:./FWLIB/src/stm32f10x_tim.c ****   
 2609              		.loc 1 1296 14 view .LVU876
 2610 0034 1343     		orrs	r3, r3, r2
1296:./FWLIB/src/stm32f10x_tim.c ****   
 2611              		.loc 1 1296 11 view .LVU877
 2612 0036 4EEA030E 		orr	lr, lr, r3
 2613              	.LVL270:
1299:./FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR1 */
 2614              		.loc 1 1299 3 is_stmt 1 view .LVU878
1299:./FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR1 */
 2615              		.loc 1 1299 14 is_stmt 0 view .LVU879
 2616 003a 0481     		strh	r4, [r0, #8]	@ movhi
1301:./FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCER */
 2617              		.loc 1 1301 3 is_stmt 1 view .LVU880
ARM GAS  /tmp/ccvVNijM.s 			page 109


1301:./FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCER */
 2618              		.loc 1 1301 15 is_stmt 0 view .LVU881
 2619 003c A0F818C0 		strh	ip, [r0, #24]	@ movhi
1303:./FWLIB/src/stm32f10x_tim.c **** }
 2620              		.loc 1 1303 3 is_stmt 1 view .LVU882
1303:./FWLIB/src/stm32f10x_tim.c **** }
 2621              		.loc 1 1303 14 is_stmt 0 view .LVU883
 2622 0040 A0F820E0 		strh	lr, [r0, #32]	@ movhi
1304:./FWLIB/src/stm32f10x_tim.c **** 
 2623              		.loc 1 1304 1 view .LVU884
 2624 0044 10BD     		pop	{r4, pc}
1304:./FWLIB/src/stm32f10x_tim.c **** 
 2625              		.loc 1 1304 1 view .LVU885
 2626              		.cfi_endproc
 2627              	.LFE57:
 2629              		.section	.text.TIM_ForcedOC1Config,"ax",%progbits
 2630              		.align	1
 2631              		.global	TIM_ForcedOC1Config
 2632              		.syntax unified
 2633              		.thumb
 2634              		.thumb_func
 2636              	TIM_ForcedOC1Config:
 2637              	.LVL271:
 2638              	.LFB58:
1316:./FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpccmr1 = 0;
 2639              		.loc 1 1316 1 is_stmt 1 view -0
 2640              		.cfi_startproc
 2641              		@ args = 0, pretend = 0, frame = 0
 2642              		@ frame_needed = 0, uses_anonymous_args = 0
 2643              		@ link register save eliminated.
1317:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 2644              		.loc 1 1317 3 view .LVU887
1319:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_FORCED_ACTION(TIM_ForcedAction));
 2645              		.loc 1 1319 3 view .LVU888
1320:./FWLIB/src/stm32f10x_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 2646              		.loc 1 1320 3 view .LVU889
1321:./FWLIB/src/stm32f10x_tim.c ****   /* Reset the OC1M Bits */
 2647              		.loc 1 1321 3 view .LVU890
1321:./FWLIB/src/stm32f10x_tim.c ****   /* Reset the OC1M Bits */
 2648              		.loc 1 1321 12 is_stmt 0 view .LVU891
 2649 0000 038B     		ldrh	r3, [r0, #24]
 2650 0002 9BB2     		uxth	r3, r3
 2651              	.LVL272:
1323:./FWLIB/src/stm32f10x_tim.c ****   /* Configure The Forced output Mode */
 2652              		.loc 1 1323 3 is_stmt 1 view .LVU892
1323:./FWLIB/src/stm32f10x_tim.c ****   /* Configure The Forced output Mode */
 2653              		.loc 1 1323 12 is_stmt 0 view .LVU893
 2654 0004 23F07003 		bic	r3, r3, #112
 2655              	.LVL273:
1325:./FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR1 register */
 2656              		.loc 1 1325 3 is_stmt 1 view .LVU894
1325:./FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR1 register */
 2657              		.loc 1 1325 12 is_stmt 0 view .LVU895
 2658 0008 0B43     		orrs	r3, r3, r1
 2659              	.LVL274:
1327:./FWLIB/src/stm32f10x_tim.c **** }
 2660              		.loc 1 1327 3 is_stmt 1 view .LVU896
ARM GAS  /tmp/ccvVNijM.s 			page 110


1327:./FWLIB/src/stm32f10x_tim.c **** }
 2661              		.loc 1 1327 15 is_stmt 0 view .LVU897
 2662 000a 0383     		strh	r3, [r0, #24]	@ movhi
1328:./FWLIB/src/stm32f10x_tim.c **** 
 2663              		.loc 1 1328 1 view .LVU898
 2664 000c 7047     		bx	lr
 2665              		.cfi_endproc
 2666              	.LFE58:
 2668              		.section	.text.TIM_ForcedOC2Config,"ax",%progbits
 2669              		.align	1
 2670              		.global	TIM_ForcedOC2Config
 2671              		.syntax unified
 2672              		.thumb
 2673              		.thumb_func
 2675              	TIM_ForcedOC2Config:
 2676              	.LVL275:
 2677              	.LFB59:
1340:./FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpccmr1 = 0;
 2678              		.loc 1 1340 1 is_stmt 1 view -0
 2679              		.cfi_startproc
 2680              		@ args = 0, pretend = 0, frame = 0
 2681              		@ frame_needed = 0, uses_anonymous_args = 0
 2682              		@ link register save eliminated.
1341:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 2683              		.loc 1 1341 3 view .LVU900
1343:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_FORCED_ACTION(TIM_ForcedAction));
 2684              		.loc 1 1343 3 view .LVU901
1344:./FWLIB/src/stm32f10x_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 2685              		.loc 1 1344 3 view .LVU902
1345:./FWLIB/src/stm32f10x_tim.c ****   /* Reset the OC2M Bits */
 2686              		.loc 1 1345 3 view .LVU903
1345:./FWLIB/src/stm32f10x_tim.c ****   /* Reset the OC2M Bits */
 2687              		.loc 1 1345 12 is_stmt 0 view .LVU904
 2688 0000 038B     		ldrh	r3, [r0, #24]
 2689 0002 9BB2     		uxth	r3, r3
 2690              	.LVL276:
1347:./FWLIB/src/stm32f10x_tim.c ****   /* Configure The Forced output Mode */
 2691              		.loc 1 1347 3 is_stmt 1 view .LVU905
1347:./FWLIB/src/stm32f10x_tim.c ****   /* Configure The Forced output Mode */
 2692              		.loc 1 1347 12 is_stmt 0 view .LVU906
 2693 0004 23F4E043 		bic	r3, r3, #28672
 2694              	.LVL277:
1349:./FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR1 register */
 2695              		.loc 1 1349 3 is_stmt 1 view .LVU907
1349:./FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR1 register */
 2696              		.loc 1 1349 15 is_stmt 0 view .LVU908
 2697 0008 0902     		lsls	r1, r1, #8
 2698              	.LVL278:
1349:./FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR1 register */
 2699              		.loc 1 1349 15 view .LVU909
 2700 000a 89B2     		uxth	r1, r1
1349:./FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR1 register */
 2701              		.loc 1 1349 12 view .LVU910
 2702 000c 0B43     		orrs	r3, r3, r1
 2703              	.LVL279:
1351:./FWLIB/src/stm32f10x_tim.c **** }
 2704              		.loc 1 1351 3 is_stmt 1 view .LVU911
ARM GAS  /tmp/ccvVNijM.s 			page 111


1351:./FWLIB/src/stm32f10x_tim.c **** }
 2705              		.loc 1 1351 15 is_stmt 0 view .LVU912
 2706 000e 0383     		strh	r3, [r0, #24]	@ movhi
1352:./FWLIB/src/stm32f10x_tim.c **** 
 2707              		.loc 1 1352 1 view .LVU913
 2708 0010 7047     		bx	lr
 2709              		.cfi_endproc
 2710              	.LFE59:
 2712              		.section	.text.TIM_ForcedOC3Config,"ax",%progbits
 2713              		.align	1
 2714              		.global	TIM_ForcedOC3Config
 2715              		.syntax unified
 2716              		.thumb
 2717              		.thumb_func
 2719              	TIM_ForcedOC3Config:
 2720              	.LVL280:
 2721              	.LFB60:
1364:./FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpccmr2 = 0;
 2722              		.loc 1 1364 1 is_stmt 1 view -0
 2723              		.cfi_startproc
 2724              		@ args = 0, pretend = 0, frame = 0
 2725              		@ frame_needed = 0, uses_anonymous_args = 0
 2726              		@ link register save eliminated.
1365:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 2727              		.loc 1 1365 3 view .LVU915
1367:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_FORCED_ACTION(TIM_ForcedAction));
 2728              		.loc 1 1367 3 view .LVU916
1368:./FWLIB/src/stm32f10x_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 2729              		.loc 1 1368 3 view .LVU917
1369:./FWLIB/src/stm32f10x_tim.c ****   /* Reset the OC1M Bits */
 2730              		.loc 1 1369 3 view .LVU918
1369:./FWLIB/src/stm32f10x_tim.c ****   /* Reset the OC1M Bits */
 2731              		.loc 1 1369 12 is_stmt 0 view .LVU919
 2732 0000 838B     		ldrh	r3, [r0, #28]
 2733 0002 9BB2     		uxth	r3, r3
 2734              	.LVL281:
1371:./FWLIB/src/stm32f10x_tim.c ****   /* Configure The Forced output Mode */
 2735              		.loc 1 1371 3 is_stmt 1 view .LVU920
1371:./FWLIB/src/stm32f10x_tim.c ****   /* Configure The Forced output Mode */
 2736              		.loc 1 1371 12 is_stmt 0 view .LVU921
 2737 0004 23F07003 		bic	r3, r3, #112
 2738              	.LVL282:
1373:./FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR2 register */
 2739              		.loc 1 1373 3 is_stmt 1 view .LVU922
1373:./FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR2 register */
 2740              		.loc 1 1373 12 is_stmt 0 view .LVU923
 2741 0008 0B43     		orrs	r3, r3, r1
 2742              	.LVL283:
1375:./FWLIB/src/stm32f10x_tim.c **** }
 2743              		.loc 1 1375 3 is_stmt 1 view .LVU924
1375:./FWLIB/src/stm32f10x_tim.c **** }
 2744              		.loc 1 1375 15 is_stmt 0 view .LVU925
 2745 000a 8383     		strh	r3, [r0, #28]	@ movhi
1376:./FWLIB/src/stm32f10x_tim.c **** 
 2746              		.loc 1 1376 1 view .LVU926
 2747 000c 7047     		bx	lr
 2748              		.cfi_endproc
ARM GAS  /tmp/ccvVNijM.s 			page 112


 2749              	.LFE60:
 2751              		.section	.text.TIM_ForcedOC4Config,"ax",%progbits
 2752              		.align	1
 2753              		.global	TIM_ForcedOC4Config
 2754              		.syntax unified
 2755              		.thumb
 2756              		.thumb_func
 2758              	TIM_ForcedOC4Config:
 2759              	.LVL284:
 2760              	.LFB61:
1388:./FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpccmr2 = 0;
 2761              		.loc 1 1388 1 is_stmt 1 view -0
 2762              		.cfi_startproc
 2763              		@ args = 0, pretend = 0, frame = 0
 2764              		@ frame_needed = 0, uses_anonymous_args = 0
 2765              		@ link register save eliminated.
1389:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 2766              		.loc 1 1389 3 view .LVU928
1391:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_FORCED_ACTION(TIM_ForcedAction));
 2767              		.loc 1 1391 3 view .LVU929
1392:./FWLIB/src/stm32f10x_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 2768              		.loc 1 1392 3 view .LVU930
1393:./FWLIB/src/stm32f10x_tim.c ****   /* Reset the OC2M Bits */
 2769              		.loc 1 1393 3 view .LVU931
1393:./FWLIB/src/stm32f10x_tim.c ****   /* Reset the OC2M Bits */
 2770              		.loc 1 1393 12 is_stmt 0 view .LVU932
 2771 0000 838B     		ldrh	r3, [r0, #28]
 2772 0002 9BB2     		uxth	r3, r3
 2773              	.LVL285:
1395:./FWLIB/src/stm32f10x_tim.c ****   /* Configure The Forced output Mode */
 2774              		.loc 1 1395 3 is_stmt 1 view .LVU933
1395:./FWLIB/src/stm32f10x_tim.c ****   /* Configure The Forced output Mode */
 2775              		.loc 1 1395 12 is_stmt 0 view .LVU934
 2776 0004 23F4E043 		bic	r3, r3, #28672
 2777              	.LVL286:
1397:./FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR2 register */
 2778              		.loc 1 1397 3 is_stmt 1 view .LVU935
1397:./FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR2 register */
 2779              		.loc 1 1397 15 is_stmt 0 view .LVU936
 2780 0008 0902     		lsls	r1, r1, #8
 2781              	.LVL287:
1397:./FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR2 register */
 2782              		.loc 1 1397 15 view .LVU937
 2783 000a 89B2     		uxth	r1, r1
1397:./FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR2 register */
 2784              		.loc 1 1397 12 view .LVU938
 2785 000c 0B43     		orrs	r3, r3, r1
 2786              	.LVL288:
1399:./FWLIB/src/stm32f10x_tim.c **** }
 2787              		.loc 1 1399 3 is_stmt 1 view .LVU939
1399:./FWLIB/src/stm32f10x_tim.c **** }
 2788              		.loc 1 1399 15 is_stmt 0 view .LVU940
 2789 000e 8383     		strh	r3, [r0, #28]	@ movhi
1400:./FWLIB/src/stm32f10x_tim.c **** 
 2790              		.loc 1 1400 1 view .LVU941
 2791 0010 7047     		bx	lr
 2792              		.cfi_endproc
ARM GAS  /tmp/ccvVNijM.s 			page 113


 2793              	.LFE61:
 2795              		.section	.text.TIM_ARRPreloadConfig,"ax",%progbits
 2796              		.align	1
 2797              		.global	TIM_ARRPreloadConfig
 2798              		.syntax unified
 2799              		.thumb
 2800              		.thumb_func
 2802              	TIM_ARRPreloadConfig:
 2803              	.LVL289:
 2804              	.LFB62:
1410:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 2805              		.loc 1 1410 1 is_stmt 1 view -0
 2806              		.cfi_startproc
 2807              		@ args = 0, pretend = 0, frame = 0
 2808              		@ frame_needed = 0, uses_anonymous_args = 0
 2809              		@ link register save eliminated.
1412:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 2810              		.loc 1 1412 3 view .LVU943
1413:./FWLIB/src/stm32f10x_tim.c ****   if (NewState != DISABLE)
 2811              		.loc 1 1413 3 view .LVU944
1414:./FWLIB/src/stm32f10x_tim.c ****   {
 2812              		.loc 1 1414 3 view .LVU945
1414:./FWLIB/src/stm32f10x_tim.c ****   {
 2813              		.loc 1 1414 6 is_stmt 0 view .LVU946
 2814 0000 29B1     		cbz	r1, .L141
1417:./FWLIB/src/stm32f10x_tim.c ****   }
 2815              		.loc 1 1417 5 is_stmt 1 view .LVU947
1417:./FWLIB/src/stm32f10x_tim.c ****   }
 2816              		.loc 1 1417 9 is_stmt 0 view .LVU948
 2817 0002 0388     		ldrh	r3, [r0]
 2818 0004 9BB2     		uxth	r3, r3
1417:./FWLIB/src/stm32f10x_tim.c ****   }
 2819              		.loc 1 1417 15 view .LVU949
 2820 0006 43F08003 		orr	r3, r3, #128
 2821 000a 0380     		strh	r3, [r0]	@ movhi
 2822 000c 7047     		bx	lr
 2823              	.L141:
1422:./FWLIB/src/stm32f10x_tim.c ****   }
 2824              		.loc 1 1422 5 is_stmt 1 view .LVU950
1422:./FWLIB/src/stm32f10x_tim.c ****   }
 2825              		.loc 1 1422 9 is_stmt 0 view .LVU951
 2826 000e 0388     		ldrh	r3, [r0]
 2827 0010 9BB2     		uxth	r3, r3
1422:./FWLIB/src/stm32f10x_tim.c ****   }
 2828              		.loc 1 1422 15 view .LVU952
 2829 0012 23F08003 		bic	r3, r3, #128
 2830 0016 9BB2     		uxth	r3, r3
 2831 0018 0380     		strh	r3, [r0]	@ movhi
1424:./FWLIB/src/stm32f10x_tim.c **** 
 2832              		.loc 1 1424 1 view .LVU953
 2833 001a 7047     		bx	lr
 2834              		.cfi_endproc
 2835              	.LFE62:
 2837              		.section	.text.TIM_SelectCOM,"ax",%progbits
 2838              		.align	1
 2839              		.global	TIM_SelectCOM
 2840              		.syntax unified
ARM GAS  /tmp/ccvVNijM.s 			page 114


 2841              		.thumb
 2842              		.thumb_func
 2844              	TIM_SelectCOM:
 2845              	.LVL290:
 2846              	.LFB63:
1434:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 2847              		.loc 1 1434 1 is_stmt 1 view -0
 2848              		.cfi_startproc
 2849              		@ args = 0, pretend = 0, frame = 0
 2850              		@ frame_needed = 0, uses_anonymous_args = 0
 2851              		@ link register save eliminated.
1436:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 2852              		.loc 1 1436 3 view .LVU955
1437:./FWLIB/src/stm32f10x_tim.c ****   if (NewState != DISABLE)
 2853              		.loc 1 1437 3 view .LVU956
1438:./FWLIB/src/stm32f10x_tim.c ****   {
 2854              		.loc 1 1438 3 view .LVU957
1438:./FWLIB/src/stm32f10x_tim.c ****   {
 2855              		.loc 1 1438 6 is_stmt 0 view .LVU958
 2856 0000 29B1     		cbz	r1, .L144
1441:./FWLIB/src/stm32f10x_tim.c ****   }
 2857              		.loc 1 1441 5 is_stmt 1 view .LVU959
1441:./FWLIB/src/stm32f10x_tim.c ****   }
 2858              		.loc 1 1441 9 is_stmt 0 view .LVU960
 2859 0002 8388     		ldrh	r3, [r0, #4]
 2860 0004 9BB2     		uxth	r3, r3
1441:./FWLIB/src/stm32f10x_tim.c ****   }
 2861              		.loc 1 1441 15 view .LVU961
 2862 0006 43F00403 		orr	r3, r3, #4
 2863 000a 8380     		strh	r3, [r0, #4]	@ movhi
 2864 000c 7047     		bx	lr
 2865              	.L144:
1446:./FWLIB/src/stm32f10x_tim.c ****   }
 2866              		.loc 1 1446 5 is_stmt 1 view .LVU962
1446:./FWLIB/src/stm32f10x_tim.c ****   }
 2867              		.loc 1 1446 9 is_stmt 0 view .LVU963
 2868 000e 8388     		ldrh	r3, [r0, #4]
 2869 0010 9BB2     		uxth	r3, r3
1446:./FWLIB/src/stm32f10x_tim.c ****   }
 2870              		.loc 1 1446 15 view .LVU964
 2871 0012 23F00403 		bic	r3, r3, #4
 2872 0016 9BB2     		uxth	r3, r3
 2873 0018 8380     		strh	r3, [r0, #4]	@ movhi
1448:./FWLIB/src/stm32f10x_tim.c **** 
 2874              		.loc 1 1448 1 view .LVU965
 2875 001a 7047     		bx	lr
 2876              		.cfi_endproc
 2877              	.LFE63:
 2879              		.section	.text.TIM_SelectCCDMA,"ax",%progbits
 2880              		.align	1
 2881              		.global	TIM_SelectCCDMA
 2882              		.syntax unified
 2883              		.thumb
 2884              		.thumb_func
 2886              	TIM_SelectCCDMA:
 2887              	.LVL291:
 2888              	.LFB64:
ARM GAS  /tmp/ccvVNijM.s 			page 115


1459:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 2889              		.loc 1 1459 1 is_stmt 1 view -0
 2890              		.cfi_startproc
 2891              		@ args = 0, pretend = 0, frame = 0
 2892              		@ frame_needed = 0, uses_anonymous_args = 0
 2893              		@ link register save eliminated.
1461:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 2894              		.loc 1 1461 3 view .LVU967
1462:./FWLIB/src/stm32f10x_tim.c ****   if (NewState != DISABLE)
 2895              		.loc 1 1462 3 view .LVU968
1463:./FWLIB/src/stm32f10x_tim.c ****   {
 2896              		.loc 1 1463 3 view .LVU969
1463:./FWLIB/src/stm32f10x_tim.c ****   {
 2897              		.loc 1 1463 6 is_stmt 0 view .LVU970
 2898 0000 29B1     		cbz	r1, .L147
1466:./FWLIB/src/stm32f10x_tim.c ****   }
 2899              		.loc 1 1466 5 is_stmt 1 view .LVU971
1466:./FWLIB/src/stm32f10x_tim.c ****   }
 2900              		.loc 1 1466 9 is_stmt 0 view .LVU972
 2901 0002 8388     		ldrh	r3, [r0, #4]
 2902 0004 9BB2     		uxth	r3, r3
1466:./FWLIB/src/stm32f10x_tim.c ****   }
 2903              		.loc 1 1466 15 view .LVU973
 2904 0006 43F00803 		orr	r3, r3, #8
 2905 000a 8380     		strh	r3, [r0, #4]	@ movhi
 2906 000c 7047     		bx	lr
 2907              	.L147:
1471:./FWLIB/src/stm32f10x_tim.c ****   }
 2908              		.loc 1 1471 5 is_stmt 1 view .LVU974
1471:./FWLIB/src/stm32f10x_tim.c ****   }
 2909              		.loc 1 1471 9 is_stmt 0 view .LVU975
 2910 000e 8388     		ldrh	r3, [r0, #4]
 2911 0010 9BB2     		uxth	r3, r3
1471:./FWLIB/src/stm32f10x_tim.c ****   }
 2912              		.loc 1 1471 15 view .LVU976
 2913 0012 23F00803 		bic	r3, r3, #8
 2914 0016 9BB2     		uxth	r3, r3
 2915 0018 8380     		strh	r3, [r0, #4]	@ movhi
1473:./FWLIB/src/stm32f10x_tim.c **** 
 2916              		.loc 1 1473 1 view .LVU977
 2917 001a 7047     		bx	lr
 2918              		.cfi_endproc
 2919              	.LFE64:
 2921              		.section	.text.TIM_CCPreloadControl,"ax",%progbits
 2922              		.align	1
 2923              		.global	TIM_CCPreloadControl
 2924              		.syntax unified
 2925              		.thumb
 2926              		.thumb_func
 2928              	TIM_CCPreloadControl:
 2929              	.LVL292:
 2930              	.LFB65:
1484:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 2931              		.loc 1 1484 1 is_stmt 1 view -0
 2932              		.cfi_startproc
 2933              		@ args = 0, pretend = 0, frame = 0
 2934              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccvVNijM.s 			page 116


 2935              		@ link register save eliminated.
1486:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 2936              		.loc 1 1486 3 view .LVU979
1487:./FWLIB/src/stm32f10x_tim.c ****   if (NewState != DISABLE)
 2937              		.loc 1 1487 3 view .LVU980
1488:./FWLIB/src/stm32f10x_tim.c ****   {
 2938              		.loc 1 1488 3 view .LVU981
1488:./FWLIB/src/stm32f10x_tim.c ****   {
 2939              		.loc 1 1488 6 is_stmt 0 view .LVU982
 2940 0000 29B1     		cbz	r1, .L150
1491:./FWLIB/src/stm32f10x_tim.c ****   }
 2941              		.loc 1 1491 5 is_stmt 1 view .LVU983
1491:./FWLIB/src/stm32f10x_tim.c ****   }
 2942              		.loc 1 1491 9 is_stmt 0 view .LVU984
 2943 0002 8388     		ldrh	r3, [r0, #4]
 2944 0004 9BB2     		uxth	r3, r3
1491:./FWLIB/src/stm32f10x_tim.c ****   }
 2945              		.loc 1 1491 15 view .LVU985
 2946 0006 43F00103 		orr	r3, r3, #1
 2947 000a 8380     		strh	r3, [r0, #4]	@ movhi
 2948 000c 7047     		bx	lr
 2949              	.L150:
1496:./FWLIB/src/stm32f10x_tim.c ****   }
 2950              		.loc 1 1496 5 is_stmt 1 view .LVU986
1496:./FWLIB/src/stm32f10x_tim.c ****   }
 2951              		.loc 1 1496 9 is_stmt 0 view .LVU987
 2952 000e 8388     		ldrh	r3, [r0, #4]
 2953 0010 9BB2     		uxth	r3, r3
1496:./FWLIB/src/stm32f10x_tim.c ****   }
 2954              		.loc 1 1496 15 view .LVU988
 2955 0012 23F00103 		bic	r3, r3, #1
 2956 0016 9BB2     		uxth	r3, r3
 2957 0018 8380     		strh	r3, [r0, #4]	@ movhi
1498:./FWLIB/src/stm32f10x_tim.c **** 
 2958              		.loc 1 1498 1 view .LVU989
 2959 001a 7047     		bx	lr
 2960              		.cfi_endproc
 2961              	.LFE65:
 2963              		.section	.text.TIM_OC1PreloadConfig,"ax",%progbits
 2964              		.align	1
 2965              		.global	TIM_OC1PreloadConfig
 2966              		.syntax unified
 2967              		.thumb
 2968              		.thumb_func
 2970              	TIM_OC1PreloadConfig:
 2971              	.LVL293:
 2972              	.LFB66:
1510:./FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpccmr1 = 0;
 2973              		.loc 1 1510 1 is_stmt 1 view -0
 2974              		.cfi_startproc
 2975              		@ args = 0, pretend = 0, frame = 0
 2976              		@ frame_needed = 0, uses_anonymous_args = 0
 2977              		@ link register save eliminated.
1511:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 2978              		.loc 1 1511 3 view .LVU991
1513:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OCPRELOAD_STATE(TIM_OCPreload));
 2979              		.loc 1 1513 3 view .LVU992
ARM GAS  /tmp/ccvVNijM.s 			page 117


1514:./FWLIB/src/stm32f10x_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 2980              		.loc 1 1514 3 view .LVU993
1515:./FWLIB/src/stm32f10x_tim.c ****   /* Reset the OC1PE Bit */
 2981              		.loc 1 1515 3 view .LVU994
1515:./FWLIB/src/stm32f10x_tim.c ****   /* Reset the OC1PE Bit */
 2982              		.loc 1 1515 12 is_stmt 0 view .LVU995
 2983 0000 038B     		ldrh	r3, [r0, #24]
 2984 0002 9BB2     		uxth	r3, r3
 2985              	.LVL294:
1517:./FWLIB/src/stm32f10x_tim.c ****   /* Enable or Disable the Output Compare Preload feature */
 2986              		.loc 1 1517 3 is_stmt 1 view .LVU996
1517:./FWLIB/src/stm32f10x_tim.c ****   /* Enable or Disable the Output Compare Preload feature */
 2987              		.loc 1 1517 12 is_stmt 0 view .LVU997
 2988 0004 23F00803 		bic	r3, r3, #8
 2989              	.LVL295:
1519:./FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR1 register */
 2990              		.loc 1 1519 3 is_stmt 1 view .LVU998
1519:./FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR1 register */
 2991              		.loc 1 1519 12 is_stmt 0 view .LVU999
 2992 0008 0B43     		orrs	r3, r3, r1
 2993              	.LVL296:
1521:./FWLIB/src/stm32f10x_tim.c **** }
 2994              		.loc 1 1521 3 is_stmt 1 view .LVU1000
1521:./FWLIB/src/stm32f10x_tim.c **** }
 2995              		.loc 1 1521 15 is_stmt 0 view .LVU1001
 2996 000a 0383     		strh	r3, [r0, #24]	@ movhi
1522:./FWLIB/src/stm32f10x_tim.c **** 
 2997              		.loc 1 1522 1 view .LVU1002
 2998 000c 7047     		bx	lr
 2999              		.cfi_endproc
 3000              	.LFE66:
 3002              		.section	.text.TIM_OC2PreloadConfig,"ax",%progbits
 3003              		.align	1
 3004              		.global	TIM_OC2PreloadConfig
 3005              		.syntax unified
 3006              		.thumb
 3007              		.thumb_func
 3009              	TIM_OC2PreloadConfig:
 3010              	.LVL297:
 3011              	.LFB67:
1535:./FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpccmr1 = 0;
 3012              		.loc 1 1535 1 is_stmt 1 view -0
 3013              		.cfi_startproc
 3014              		@ args = 0, pretend = 0, frame = 0
 3015              		@ frame_needed = 0, uses_anonymous_args = 0
 3016              		@ link register save eliminated.
1536:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 3017              		.loc 1 1536 3 view .LVU1004
1538:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OCPRELOAD_STATE(TIM_OCPreload));
 3018              		.loc 1 1538 3 view .LVU1005
1539:./FWLIB/src/stm32f10x_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 3019              		.loc 1 1539 3 view .LVU1006
1540:./FWLIB/src/stm32f10x_tim.c ****   /* Reset the OC2PE Bit */
 3020              		.loc 1 1540 3 view .LVU1007
1540:./FWLIB/src/stm32f10x_tim.c ****   /* Reset the OC2PE Bit */
 3021              		.loc 1 1540 12 is_stmt 0 view .LVU1008
 3022 0000 038B     		ldrh	r3, [r0, #24]
ARM GAS  /tmp/ccvVNijM.s 			page 118


 3023 0002 9BB2     		uxth	r3, r3
 3024              	.LVL298:
1542:./FWLIB/src/stm32f10x_tim.c ****   /* Enable or Disable the Output Compare Preload feature */
 3025              		.loc 1 1542 3 is_stmt 1 view .LVU1009
1542:./FWLIB/src/stm32f10x_tim.c ****   /* Enable or Disable the Output Compare Preload feature */
 3026              		.loc 1 1542 12 is_stmt 0 view .LVU1010
 3027 0004 23F40063 		bic	r3, r3, #2048
 3028              	.LVL299:
1544:./FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR1 register */
 3029              		.loc 1 1544 3 is_stmt 1 view .LVU1011
1544:./FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR1 register */
 3030              		.loc 1 1544 15 is_stmt 0 view .LVU1012
 3031 0008 0902     		lsls	r1, r1, #8
 3032              	.LVL300:
1544:./FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR1 register */
 3033              		.loc 1 1544 15 view .LVU1013
 3034 000a 89B2     		uxth	r1, r1
1544:./FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR1 register */
 3035              		.loc 1 1544 12 view .LVU1014
 3036 000c 0B43     		orrs	r3, r3, r1
 3037              	.LVL301:
1546:./FWLIB/src/stm32f10x_tim.c **** }
 3038              		.loc 1 1546 3 is_stmt 1 view .LVU1015
1546:./FWLIB/src/stm32f10x_tim.c **** }
 3039              		.loc 1 1546 15 is_stmt 0 view .LVU1016
 3040 000e 0383     		strh	r3, [r0, #24]	@ movhi
1547:./FWLIB/src/stm32f10x_tim.c **** 
 3041              		.loc 1 1547 1 view .LVU1017
 3042 0010 7047     		bx	lr
 3043              		.cfi_endproc
 3044              	.LFE67:
 3046              		.section	.text.TIM_OC3PreloadConfig,"ax",%progbits
 3047              		.align	1
 3048              		.global	TIM_OC3PreloadConfig
 3049              		.syntax unified
 3050              		.thumb
 3051              		.thumb_func
 3053              	TIM_OC3PreloadConfig:
 3054              	.LVL302:
 3055              	.LFB68:
1559:./FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpccmr2 = 0;
 3056              		.loc 1 1559 1 is_stmt 1 view -0
 3057              		.cfi_startproc
 3058              		@ args = 0, pretend = 0, frame = 0
 3059              		@ frame_needed = 0, uses_anonymous_args = 0
 3060              		@ link register save eliminated.
1560:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 3061              		.loc 1 1560 3 view .LVU1019
1562:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OCPRELOAD_STATE(TIM_OCPreload));
 3062              		.loc 1 1562 3 view .LVU1020
1563:./FWLIB/src/stm32f10x_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 3063              		.loc 1 1563 3 view .LVU1021
1564:./FWLIB/src/stm32f10x_tim.c ****   /* Reset the OC3PE Bit */
 3064              		.loc 1 1564 3 view .LVU1022
1564:./FWLIB/src/stm32f10x_tim.c ****   /* Reset the OC3PE Bit */
 3065              		.loc 1 1564 12 is_stmt 0 view .LVU1023
 3066 0000 838B     		ldrh	r3, [r0, #28]
ARM GAS  /tmp/ccvVNijM.s 			page 119


 3067 0002 9BB2     		uxth	r3, r3
 3068              	.LVL303:
1566:./FWLIB/src/stm32f10x_tim.c ****   /* Enable or Disable the Output Compare Preload feature */
 3069              		.loc 1 1566 3 is_stmt 1 view .LVU1024
1566:./FWLIB/src/stm32f10x_tim.c ****   /* Enable or Disable the Output Compare Preload feature */
 3070              		.loc 1 1566 12 is_stmt 0 view .LVU1025
 3071 0004 23F00803 		bic	r3, r3, #8
 3072              	.LVL304:
1568:./FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR2 register */
 3073              		.loc 1 1568 3 is_stmt 1 view .LVU1026
1568:./FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR2 register */
 3074              		.loc 1 1568 12 is_stmt 0 view .LVU1027
 3075 0008 0B43     		orrs	r3, r3, r1
 3076              	.LVL305:
1570:./FWLIB/src/stm32f10x_tim.c **** }
 3077              		.loc 1 1570 3 is_stmt 1 view .LVU1028
1570:./FWLIB/src/stm32f10x_tim.c **** }
 3078              		.loc 1 1570 15 is_stmt 0 view .LVU1029
 3079 000a 8383     		strh	r3, [r0, #28]	@ movhi
1571:./FWLIB/src/stm32f10x_tim.c **** 
 3080              		.loc 1 1571 1 view .LVU1030
 3081 000c 7047     		bx	lr
 3082              		.cfi_endproc
 3083              	.LFE68:
 3085              		.section	.text.TIM_OC4PreloadConfig,"ax",%progbits
 3086              		.align	1
 3087              		.global	TIM_OC4PreloadConfig
 3088              		.syntax unified
 3089              		.thumb
 3090              		.thumb_func
 3092              	TIM_OC4PreloadConfig:
 3093              	.LVL306:
 3094              	.LFB69:
1583:./FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpccmr2 = 0;
 3095              		.loc 1 1583 1 is_stmt 1 view -0
 3096              		.cfi_startproc
 3097              		@ args = 0, pretend = 0, frame = 0
 3098              		@ frame_needed = 0, uses_anonymous_args = 0
 3099              		@ link register save eliminated.
1584:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 3100              		.loc 1 1584 3 view .LVU1032
1586:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OCPRELOAD_STATE(TIM_OCPreload));
 3101              		.loc 1 1586 3 view .LVU1033
1587:./FWLIB/src/stm32f10x_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 3102              		.loc 1 1587 3 view .LVU1034
1588:./FWLIB/src/stm32f10x_tim.c ****   /* Reset the OC4PE Bit */
 3103              		.loc 1 1588 3 view .LVU1035
1588:./FWLIB/src/stm32f10x_tim.c ****   /* Reset the OC4PE Bit */
 3104              		.loc 1 1588 12 is_stmt 0 view .LVU1036
 3105 0000 838B     		ldrh	r3, [r0, #28]
 3106 0002 9BB2     		uxth	r3, r3
 3107              	.LVL307:
1590:./FWLIB/src/stm32f10x_tim.c ****   /* Enable or Disable the Output Compare Preload feature */
 3108              		.loc 1 1590 3 is_stmt 1 view .LVU1037
1590:./FWLIB/src/stm32f10x_tim.c ****   /* Enable or Disable the Output Compare Preload feature */
 3109              		.loc 1 1590 12 is_stmt 0 view .LVU1038
 3110 0004 23F40063 		bic	r3, r3, #2048
ARM GAS  /tmp/ccvVNijM.s 			page 120


 3111              	.LVL308:
1592:./FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR2 register */
 3112              		.loc 1 1592 3 is_stmt 1 view .LVU1039
1592:./FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR2 register */
 3113              		.loc 1 1592 15 is_stmt 0 view .LVU1040
 3114 0008 0902     		lsls	r1, r1, #8
 3115              	.LVL309:
1592:./FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR2 register */
 3116              		.loc 1 1592 15 view .LVU1041
 3117 000a 89B2     		uxth	r1, r1
1592:./FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR2 register */
 3118              		.loc 1 1592 12 view .LVU1042
 3119 000c 0B43     		orrs	r3, r3, r1
 3120              	.LVL310:
1594:./FWLIB/src/stm32f10x_tim.c **** }
 3121              		.loc 1 1594 3 is_stmt 1 view .LVU1043
1594:./FWLIB/src/stm32f10x_tim.c **** }
 3122              		.loc 1 1594 15 is_stmt 0 view .LVU1044
 3123 000e 8383     		strh	r3, [r0, #28]	@ movhi
1595:./FWLIB/src/stm32f10x_tim.c **** 
 3124              		.loc 1 1595 1 view .LVU1045
 3125 0010 7047     		bx	lr
 3126              		.cfi_endproc
 3127              	.LFE69:
 3129              		.section	.text.TIM_OC1FastConfig,"ax",%progbits
 3130              		.align	1
 3131              		.global	TIM_OC1FastConfig
 3132              		.syntax unified
 3133              		.thumb
 3134              		.thumb_func
 3136              	TIM_OC1FastConfig:
 3137              	.LVL311:
 3138              	.LFB70:
1607:./FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpccmr1 = 0;
 3139              		.loc 1 1607 1 is_stmt 1 view -0
 3140              		.cfi_startproc
 3141              		@ args = 0, pretend = 0, frame = 0
 3142              		@ frame_needed = 0, uses_anonymous_args = 0
 3143              		@ link register save eliminated.
1608:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 3144              		.loc 1 1608 3 view .LVU1047
1610:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OCFAST_STATE(TIM_OCFast));
 3145              		.loc 1 1610 3 view .LVU1048
1611:./FWLIB/src/stm32f10x_tim.c ****   /* Get the TIMx CCMR1 register value */
 3146              		.loc 1 1611 3 view .LVU1049
1613:./FWLIB/src/stm32f10x_tim.c ****   /* Reset the OC1FE Bit */
 3147              		.loc 1 1613 3 view .LVU1050
1613:./FWLIB/src/stm32f10x_tim.c ****   /* Reset the OC1FE Bit */
 3148              		.loc 1 1613 12 is_stmt 0 view .LVU1051
 3149 0000 038B     		ldrh	r3, [r0, #24]
 3150 0002 9BB2     		uxth	r3, r3
 3151              	.LVL312:
1615:./FWLIB/src/stm32f10x_tim.c ****   /* Enable or Disable the Output Compare Fast Bit */
 3152              		.loc 1 1615 3 is_stmt 1 view .LVU1052
1615:./FWLIB/src/stm32f10x_tim.c ****   /* Enable or Disable the Output Compare Fast Bit */
 3153              		.loc 1 1615 12 is_stmt 0 view .LVU1053
 3154 0004 23F00403 		bic	r3, r3, #4
ARM GAS  /tmp/ccvVNijM.s 			page 121


 3155              	.LVL313:
1617:./FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR1 */
 3156              		.loc 1 1617 3 is_stmt 1 view .LVU1054
1617:./FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR1 */
 3157              		.loc 1 1617 12 is_stmt 0 view .LVU1055
 3158 0008 0B43     		orrs	r3, r3, r1
 3159              	.LVL314:
1619:./FWLIB/src/stm32f10x_tim.c **** }
 3160              		.loc 1 1619 3 is_stmt 1 view .LVU1056
1619:./FWLIB/src/stm32f10x_tim.c **** }
 3161              		.loc 1 1619 15 is_stmt 0 view .LVU1057
 3162 000a 0383     		strh	r3, [r0, #24]	@ movhi
1620:./FWLIB/src/stm32f10x_tim.c **** 
 3163              		.loc 1 1620 1 view .LVU1058
 3164 000c 7047     		bx	lr
 3165              		.cfi_endproc
 3166              	.LFE70:
 3168              		.section	.text.TIM_OC2FastConfig,"ax",%progbits
 3169              		.align	1
 3170              		.global	TIM_OC2FastConfig
 3171              		.syntax unified
 3172              		.thumb
 3173              		.thumb_func
 3175              	TIM_OC2FastConfig:
 3176              	.LVL315:
 3177              	.LFB71:
1633:./FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpccmr1 = 0;
 3178              		.loc 1 1633 1 is_stmt 1 view -0
 3179              		.cfi_startproc
 3180              		@ args = 0, pretend = 0, frame = 0
 3181              		@ frame_needed = 0, uses_anonymous_args = 0
 3182              		@ link register save eliminated.
1634:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 3183              		.loc 1 1634 3 view .LVU1060
1636:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OCFAST_STATE(TIM_OCFast));
 3184              		.loc 1 1636 3 view .LVU1061
1637:./FWLIB/src/stm32f10x_tim.c ****   /* Get the TIMx CCMR1 register value */
 3185              		.loc 1 1637 3 view .LVU1062
1639:./FWLIB/src/stm32f10x_tim.c ****   /* Reset the OC2FE Bit */
 3186              		.loc 1 1639 3 view .LVU1063
1639:./FWLIB/src/stm32f10x_tim.c ****   /* Reset the OC2FE Bit */
 3187              		.loc 1 1639 12 is_stmt 0 view .LVU1064
 3188 0000 038B     		ldrh	r3, [r0, #24]
 3189 0002 9BB2     		uxth	r3, r3
 3190              	.LVL316:
1641:./FWLIB/src/stm32f10x_tim.c ****   /* Enable or Disable the Output Compare Fast Bit */
 3191              		.loc 1 1641 3 is_stmt 1 view .LVU1065
1641:./FWLIB/src/stm32f10x_tim.c ****   /* Enable or Disable the Output Compare Fast Bit */
 3192              		.loc 1 1641 12 is_stmt 0 view .LVU1066
 3193 0004 23F48063 		bic	r3, r3, #1024
 3194              	.LVL317:
1643:./FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR1 */
 3195              		.loc 1 1643 3 is_stmt 1 view .LVU1067
1643:./FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR1 */
 3196              		.loc 1 1643 15 is_stmt 0 view .LVU1068
 3197 0008 0902     		lsls	r1, r1, #8
 3198              	.LVL318:
ARM GAS  /tmp/ccvVNijM.s 			page 122


1643:./FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR1 */
 3199              		.loc 1 1643 15 view .LVU1069
 3200 000a 89B2     		uxth	r1, r1
1643:./FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR1 */
 3201              		.loc 1 1643 12 view .LVU1070
 3202 000c 0B43     		orrs	r3, r3, r1
 3203              	.LVL319:
1645:./FWLIB/src/stm32f10x_tim.c **** }
 3204              		.loc 1 1645 3 is_stmt 1 view .LVU1071
1645:./FWLIB/src/stm32f10x_tim.c **** }
 3205              		.loc 1 1645 15 is_stmt 0 view .LVU1072
 3206 000e 0383     		strh	r3, [r0, #24]	@ movhi
1646:./FWLIB/src/stm32f10x_tim.c **** 
 3207              		.loc 1 1646 1 view .LVU1073
 3208 0010 7047     		bx	lr
 3209              		.cfi_endproc
 3210              	.LFE71:
 3212              		.section	.text.TIM_OC3FastConfig,"ax",%progbits
 3213              		.align	1
 3214              		.global	TIM_OC3FastConfig
 3215              		.syntax unified
 3216              		.thumb
 3217              		.thumb_func
 3219              	TIM_OC3FastConfig:
 3220              	.LVL320:
 3221              	.LFB72:
1658:./FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpccmr2 = 0;
 3222              		.loc 1 1658 1 is_stmt 1 view -0
 3223              		.cfi_startproc
 3224              		@ args = 0, pretend = 0, frame = 0
 3225              		@ frame_needed = 0, uses_anonymous_args = 0
 3226              		@ link register save eliminated.
1659:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 3227              		.loc 1 1659 3 view .LVU1075
1661:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OCFAST_STATE(TIM_OCFast));
 3228              		.loc 1 1661 3 view .LVU1076
1662:./FWLIB/src/stm32f10x_tim.c ****   /* Get the TIMx CCMR2 register value */
 3229              		.loc 1 1662 3 view .LVU1077
1664:./FWLIB/src/stm32f10x_tim.c ****   /* Reset the OC3FE Bit */
 3230              		.loc 1 1664 3 view .LVU1078
1664:./FWLIB/src/stm32f10x_tim.c ****   /* Reset the OC3FE Bit */
 3231              		.loc 1 1664 12 is_stmt 0 view .LVU1079
 3232 0000 838B     		ldrh	r3, [r0, #28]
 3233 0002 9BB2     		uxth	r3, r3
 3234              	.LVL321:
1666:./FWLIB/src/stm32f10x_tim.c ****   /* Enable or Disable the Output Compare Fast Bit */
 3235              		.loc 1 1666 3 is_stmt 1 view .LVU1080
1666:./FWLIB/src/stm32f10x_tim.c ****   /* Enable or Disable the Output Compare Fast Bit */
 3236              		.loc 1 1666 12 is_stmt 0 view .LVU1081
 3237 0004 23F00403 		bic	r3, r3, #4
 3238              	.LVL322:
1668:./FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR2 */
 3239              		.loc 1 1668 3 is_stmt 1 view .LVU1082
1668:./FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR2 */
 3240              		.loc 1 1668 12 is_stmt 0 view .LVU1083
 3241 0008 0B43     		orrs	r3, r3, r1
 3242              	.LVL323:
ARM GAS  /tmp/ccvVNijM.s 			page 123


1670:./FWLIB/src/stm32f10x_tim.c **** }
 3243              		.loc 1 1670 3 is_stmt 1 view .LVU1084
1670:./FWLIB/src/stm32f10x_tim.c **** }
 3244              		.loc 1 1670 15 is_stmt 0 view .LVU1085
 3245 000a 8383     		strh	r3, [r0, #28]	@ movhi
1671:./FWLIB/src/stm32f10x_tim.c **** 
 3246              		.loc 1 1671 1 view .LVU1086
 3247 000c 7047     		bx	lr
 3248              		.cfi_endproc
 3249              	.LFE72:
 3251              		.section	.text.TIM_OC4FastConfig,"ax",%progbits
 3252              		.align	1
 3253              		.global	TIM_OC4FastConfig
 3254              		.syntax unified
 3255              		.thumb
 3256              		.thumb_func
 3258              	TIM_OC4FastConfig:
 3259              	.LVL324:
 3260              	.LFB73:
1683:./FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpccmr2 = 0;
 3261              		.loc 1 1683 1 is_stmt 1 view -0
 3262              		.cfi_startproc
 3263              		@ args = 0, pretend = 0, frame = 0
 3264              		@ frame_needed = 0, uses_anonymous_args = 0
 3265              		@ link register save eliminated.
1684:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 3266              		.loc 1 1684 3 view .LVU1088
1686:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OCFAST_STATE(TIM_OCFast));
 3267              		.loc 1 1686 3 view .LVU1089
1687:./FWLIB/src/stm32f10x_tim.c ****   /* Get the TIMx CCMR2 register value */
 3268              		.loc 1 1687 3 view .LVU1090
1689:./FWLIB/src/stm32f10x_tim.c ****   /* Reset the OC4FE Bit */
 3269              		.loc 1 1689 3 view .LVU1091
1689:./FWLIB/src/stm32f10x_tim.c ****   /* Reset the OC4FE Bit */
 3270              		.loc 1 1689 12 is_stmt 0 view .LVU1092
 3271 0000 838B     		ldrh	r3, [r0, #28]
 3272 0002 9BB2     		uxth	r3, r3
 3273              	.LVL325:
1691:./FWLIB/src/stm32f10x_tim.c ****   /* Enable or Disable the Output Compare Fast Bit */
 3274              		.loc 1 1691 3 is_stmt 1 view .LVU1093
1691:./FWLIB/src/stm32f10x_tim.c ****   /* Enable or Disable the Output Compare Fast Bit */
 3275              		.loc 1 1691 12 is_stmt 0 view .LVU1094
 3276 0004 23F48063 		bic	r3, r3, #1024
 3277              	.LVL326:
1693:./FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR2 */
 3278              		.loc 1 1693 3 is_stmt 1 view .LVU1095
1693:./FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR2 */
 3279              		.loc 1 1693 15 is_stmt 0 view .LVU1096
 3280 0008 0902     		lsls	r1, r1, #8
 3281              	.LVL327:
1693:./FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR2 */
 3282              		.loc 1 1693 15 view .LVU1097
 3283 000a 89B2     		uxth	r1, r1
1693:./FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR2 */
 3284              		.loc 1 1693 12 view .LVU1098
 3285 000c 0B43     		orrs	r3, r3, r1
 3286              	.LVL328:
ARM GAS  /tmp/ccvVNijM.s 			page 124


1695:./FWLIB/src/stm32f10x_tim.c **** }
 3287              		.loc 1 1695 3 is_stmt 1 view .LVU1099
1695:./FWLIB/src/stm32f10x_tim.c **** }
 3288              		.loc 1 1695 15 is_stmt 0 view .LVU1100
 3289 000e 8383     		strh	r3, [r0, #28]	@ movhi
1696:./FWLIB/src/stm32f10x_tim.c **** 
 3290              		.loc 1 1696 1 view .LVU1101
 3291 0010 7047     		bx	lr
 3292              		.cfi_endproc
 3293              	.LFE73:
 3295              		.section	.text.TIM_ClearOC1Ref,"ax",%progbits
 3296              		.align	1
 3297              		.global	TIM_ClearOC1Ref
 3298              		.syntax unified
 3299              		.thumb
 3300              		.thumb_func
 3302              	TIM_ClearOC1Ref:
 3303              	.LVL329:
 3304              	.LFB74:
1708:./FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpccmr1 = 0;
 3305              		.loc 1 1708 1 is_stmt 1 view -0
 3306              		.cfi_startproc
 3307              		@ args = 0, pretend = 0, frame = 0
 3308              		@ frame_needed = 0, uses_anonymous_args = 0
 3309              		@ link register save eliminated.
1709:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 3310              		.loc 1 1709 3 view .LVU1103
1711:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OCCLEAR_STATE(TIM_OCClear));
 3311              		.loc 1 1711 3 view .LVU1104
1712:./FWLIB/src/stm32f10x_tim.c **** 
 3312              		.loc 1 1712 3 view .LVU1105
1714:./FWLIB/src/stm32f10x_tim.c **** 
 3313              		.loc 1 1714 3 view .LVU1106
1714:./FWLIB/src/stm32f10x_tim.c **** 
 3314              		.loc 1 1714 12 is_stmt 0 view .LVU1107
 3315 0000 038B     		ldrh	r3, [r0, #24]
 3316 0002 9BB2     		uxth	r3, r3
 3317              	.LVL330:
1717:./FWLIB/src/stm32f10x_tim.c ****   /* Enable or Disable the Output Compare Clear Bit */
 3318              		.loc 1 1717 3 is_stmt 1 view .LVU1108
1717:./FWLIB/src/stm32f10x_tim.c ****   /* Enable or Disable the Output Compare Clear Bit */
 3319              		.loc 1 1717 12 is_stmt 0 view .LVU1109
 3320 0004 23F08003 		bic	r3, r3, #128
 3321              	.LVL331:
1719:./FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR1 register */
 3322              		.loc 1 1719 3 is_stmt 1 view .LVU1110
1719:./FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR1 register */
 3323              		.loc 1 1719 12 is_stmt 0 view .LVU1111
 3324 0008 0B43     		orrs	r3, r3, r1
 3325              	.LVL332:
1721:./FWLIB/src/stm32f10x_tim.c **** }
 3326              		.loc 1 1721 3 is_stmt 1 view .LVU1112
1721:./FWLIB/src/stm32f10x_tim.c **** }
 3327              		.loc 1 1721 15 is_stmt 0 view .LVU1113
 3328 000a 0383     		strh	r3, [r0, #24]	@ movhi
1722:./FWLIB/src/stm32f10x_tim.c **** 
 3329              		.loc 1 1722 1 view .LVU1114
ARM GAS  /tmp/ccvVNijM.s 			page 125


 3330 000c 7047     		bx	lr
 3331              		.cfi_endproc
 3332              	.LFE74:
 3334              		.section	.text.TIM_ClearOC2Ref,"ax",%progbits
 3335              		.align	1
 3336              		.global	TIM_ClearOC2Ref
 3337              		.syntax unified
 3338              		.thumb
 3339              		.thumb_func
 3341              	TIM_ClearOC2Ref:
 3342              	.LVL333:
 3343              	.LFB75:
1734:./FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpccmr1 = 0;
 3344              		.loc 1 1734 1 is_stmt 1 view -0
 3345              		.cfi_startproc
 3346              		@ args = 0, pretend = 0, frame = 0
 3347              		@ frame_needed = 0, uses_anonymous_args = 0
 3348              		@ link register save eliminated.
1735:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 3349              		.loc 1 1735 3 view .LVU1116
1737:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OCCLEAR_STATE(TIM_OCClear));
 3350              		.loc 1 1737 3 view .LVU1117
1738:./FWLIB/src/stm32f10x_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 3351              		.loc 1 1738 3 view .LVU1118
1739:./FWLIB/src/stm32f10x_tim.c ****   /* Reset the OC2CE Bit */
 3352              		.loc 1 1739 3 view .LVU1119
1739:./FWLIB/src/stm32f10x_tim.c ****   /* Reset the OC2CE Bit */
 3353              		.loc 1 1739 12 is_stmt 0 view .LVU1120
 3354 0000 038B     		ldrh	r3, [r0, #24]
 3355              	.LVL334:
1741:./FWLIB/src/stm32f10x_tim.c ****   /* Enable or Disable the Output Compare Clear Bit */
 3356              		.loc 1 1741 3 is_stmt 1 view .LVU1121
1741:./FWLIB/src/stm32f10x_tim.c ****   /* Enable or Disable the Output Compare Clear Bit */
 3357              		.loc 1 1741 12 is_stmt 0 view .LVU1122
 3358 0002 C3F30E03 		ubfx	r3, r3, #0, #15
 3359              	.LVL335:
1743:./FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR1 register */
 3360              		.loc 1 1743 3 is_stmt 1 view .LVU1123
1743:./FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR1 register */
 3361              		.loc 1 1743 15 is_stmt 0 view .LVU1124
 3362 0006 0902     		lsls	r1, r1, #8
 3363              	.LVL336:
1743:./FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR1 register */
 3364              		.loc 1 1743 15 view .LVU1125
 3365 0008 89B2     		uxth	r1, r1
1743:./FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR1 register */
 3366              		.loc 1 1743 12 view .LVU1126
 3367 000a 1943     		orrs	r1, r1, r3
 3368              	.LVL337:
1745:./FWLIB/src/stm32f10x_tim.c **** }
 3369              		.loc 1 1745 3 is_stmt 1 view .LVU1127
1745:./FWLIB/src/stm32f10x_tim.c **** }
 3370              		.loc 1 1745 15 is_stmt 0 view .LVU1128
 3371 000c 0183     		strh	r1, [r0, #24]	@ movhi
1746:./FWLIB/src/stm32f10x_tim.c **** 
 3372              		.loc 1 1746 1 view .LVU1129
 3373 000e 7047     		bx	lr
ARM GAS  /tmp/ccvVNijM.s 			page 126


 3374              		.cfi_endproc
 3375              	.LFE75:
 3377              		.section	.text.TIM_ClearOC3Ref,"ax",%progbits
 3378              		.align	1
 3379              		.global	TIM_ClearOC3Ref
 3380              		.syntax unified
 3381              		.thumb
 3382              		.thumb_func
 3384              	TIM_ClearOC3Ref:
 3385              	.LVL338:
 3386              	.LFB76:
1758:./FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpccmr2 = 0;
 3387              		.loc 1 1758 1 is_stmt 1 view -0
 3388              		.cfi_startproc
 3389              		@ args = 0, pretend = 0, frame = 0
 3390              		@ frame_needed = 0, uses_anonymous_args = 0
 3391              		@ link register save eliminated.
1759:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 3392              		.loc 1 1759 3 view .LVU1131
1761:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OCCLEAR_STATE(TIM_OCClear));
 3393              		.loc 1 1761 3 view .LVU1132
1762:./FWLIB/src/stm32f10x_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 3394              		.loc 1 1762 3 view .LVU1133
1763:./FWLIB/src/stm32f10x_tim.c ****   /* Reset the OC3CE Bit */
 3395              		.loc 1 1763 3 view .LVU1134
1763:./FWLIB/src/stm32f10x_tim.c ****   /* Reset the OC3CE Bit */
 3396              		.loc 1 1763 12 is_stmt 0 view .LVU1135
 3397 0000 838B     		ldrh	r3, [r0, #28]
 3398 0002 9BB2     		uxth	r3, r3
 3399              	.LVL339:
1765:./FWLIB/src/stm32f10x_tim.c ****   /* Enable or Disable the Output Compare Clear Bit */
 3400              		.loc 1 1765 3 is_stmt 1 view .LVU1136
1765:./FWLIB/src/stm32f10x_tim.c ****   /* Enable or Disable the Output Compare Clear Bit */
 3401              		.loc 1 1765 12 is_stmt 0 view .LVU1137
 3402 0004 23F08003 		bic	r3, r3, #128
 3403              	.LVL340:
1767:./FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR2 register */
 3404              		.loc 1 1767 3 is_stmt 1 view .LVU1138
1767:./FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR2 register */
 3405              		.loc 1 1767 12 is_stmt 0 view .LVU1139
 3406 0008 0B43     		orrs	r3, r3, r1
 3407              	.LVL341:
1769:./FWLIB/src/stm32f10x_tim.c **** }
 3408              		.loc 1 1769 3 is_stmt 1 view .LVU1140
1769:./FWLIB/src/stm32f10x_tim.c **** }
 3409              		.loc 1 1769 15 is_stmt 0 view .LVU1141
 3410 000a 8383     		strh	r3, [r0, #28]	@ movhi
1770:./FWLIB/src/stm32f10x_tim.c **** 
 3411              		.loc 1 1770 1 view .LVU1142
 3412 000c 7047     		bx	lr
 3413              		.cfi_endproc
 3414              	.LFE76:
 3416              		.section	.text.TIM_ClearOC4Ref,"ax",%progbits
 3417              		.align	1
 3418              		.global	TIM_ClearOC4Ref
 3419              		.syntax unified
 3420              		.thumb
ARM GAS  /tmp/ccvVNijM.s 			page 127


 3421              		.thumb_func
 3423              	TIM_ClearOC4Ref:
 3424              	.LVL342:
 3425              	.LFB77:
1782:./FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpccmr2 = 0;
 3426              		.loc 1 1782 1 is_stmt 1 view -0
 3427              		.cfi_startproc
 3428              		@ args = 0, pretend = 0, frame = 0
 3429              		@ frame_needed = 0, uses_anonymous_args = 0
 3430              		@ link register save eliminated.
1783:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 3431              		.loc 1 1783 3 view .LVU1144
1785:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OCCLEAR_STATE(TIM_OCClear));
 3432              		.loc 1 1785 3 view .LVU1145
1786:./FWLIB/src/stm32f10x_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 3433              		.loc 1 1786 3 view .LVU1146
1787:./FWLIB/src/stm32f10x_tim.c ****   /* Reset the OC4CE Bit */
 3434              		.loc 1 1787 3 view .LVU1147
1787:./FWLIB/src/stm32f10x_tim.c ****   /* Reset the OC4CE Bit */
 3435              		.loc 1 1787 12 is_stmt 0 view .LVU1148
 3436 0000 838B     		ldrh	r3, [r0, #28]
 3437              	.LVL343:
1789:./FWLIB/src/stm32f10x_tim.c ****   /* Enable or Disable the Output Compare Clear Bit */
 3438              		.loc 1 1789 3 is_stmt 1 view .LVU1149
1789:./FWLIB/src/stm32f10x_tim.c ****   /* Enable or Disable the Output Compare Clear Bit */
 3439              		.loc 1 1789 12 is_stmt 0 view .LVU1150
 3440 0002 C3F30E03 		ubfx	r3, r3, #0, #15
 3441              	.LVL344:
1791:./FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR2 register */
 3442              		.loc 1 1791 3 is_stmt 1 view .LVU1151
1791:./FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR2 register */
 3443              		.loc 1 1791 15 is_stmt 0 view .LVU1152
 3444 0006 0902     		lsls	r1, r1, #8
 3445              	.LVL345:
1791:./FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR2 register */
 3446              		.loc 1 1791 15 view .LVU1153
 3447 0008 89B2     		uxth	r1, r1
1791:./FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR2 register */
 3448              		.loc 1 1791 12 view .LVU1154
 3449 000a 1943     		orrs	r1, r1, r3
 3450              	.LVL346:
1793:./FWLIB/src/stm32f10x_tim.c **** }
 3451              		.loc 1 1793 3 is_stmt 1 view .LVU1155
1793:./FWLIB/src/stm32f10x_tim.c **** }
 3452              		.loc 1 1793 15 is_stmt 0 view .LVU1156
 3453 000c 8183     		strh	r1, [r0, #28]	@ movhi
1794:./FWLIB/src/stm32f10x_tim.c **** 
 3454              		.loc 1 1794 1 view .LVU1157
 3455 000e 7047     		bx	lr
 3456              		.cfi_endproc
 3457              	.LFE77:
 3459              		.section	.text.TIM_OC1PolarityConfig,"ax",%progbits
 3460              		.align	1
 3461              		.global	TIM_OC1PolarityConfig
 3462              		.syntax unified
 3463              		.thumb
 3464              		.thumb_func
ARM GAS  /tmp/ccvVNijM.s 			page 128


 3466              	TIM_OC1PolarityConfig:
 3467              	.LVL347:
 3468              	.LFB78:
1806:./FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpccer = 0;
 3469              		.loc 1 1806 1 is_stmt 1 view -0
 3470              		.cfi_startproc
 3471              		@ args = 0, pretend = 0, frame = 0
 3472              		@ frame_needed = 0, uses_anonymous_args = 0
 3473              		@ link register save eliminated.
1807:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 3474              		.loc 1 1807 3 view .LVU1159
1809:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCPolarity));
 3475              		.loc 1 1809 3 view .LVU1160
1810:./FWLIB/src/stm32f10x_tim.c ****   tmpccer = TIMx->CCER;
 3476              		.loc 1 1810 3 view .LVU1161
1811:./FWLIB/src/stm32f10x_tim.c ****   /* Set or Reset the CC1P Bit */
 3477              		.loc 1 1811 3 view .LVU1162
1811:./FWLIB/src/stm32f10x_tim.c ****   /* Set or Reset the CC1P Bit */
 3478              		.loc 1 1811 11 is_stmt 0 view .LVU1163
 3479 0000 038C     		ldrh	r3, [r0, #32]
 3480 0002 9BB2     		uxth	r3, r3
 3481              	.LVL348:
1813:./FWLIB/src/stm32f10x_tim.c ****   tmpccer |= TIM_OCPolarity;
 3482              		.loc 1 1813 3 is_stmt 1 view .LVU1164
1813:./FWLIB/src/stm32f10x_tim.c ****   tmpccer |= TIM_OCPolarity;
 3483              		.loc 1 1813 11 is_stmt 0 view .LVU1165
 3484 0004 23F00203 		bic	r3, r3, #2
 3485              	.LVL349:
1814:./FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCER register */
 3486              		.loc 1 1814 3 is_stmt 1 view .LVU1166
1814:./FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCER register */
 3487              		.loc 1 1814 11 is_stmt 0 view .LVU1167
 3488 0008 0B43     		orrs	r3, r3, r1
 3489              	.LVL350:
1816:./FWLIB/src/stm32f10x_tim.c **** }
 3490              		.loc 1 1816 3 is_stmt 1 view .LVU1168
1816:./FWLIB/src/stm32f10x_tim.c **** }
 3491              		.loc 1 1816 14 is_stmt 0 view .LVU1169
 3492 000a 0384     		strh	r3, [r0, #32]	@ movhi
1817:./FWLIB/src/stm32f10x_tim.c **** 
 3493              		.loc 1 1817 1 view .LVU1170
 3494 000c 7047     		bx	lr
 3495              		.cfi_endproc
 3496              	.LFE78:
 3498              		.section	.text.TIM_OC1NPolarityConfig,"ax",%progbits
 3499              		.align	1
 3500              		.global	TIM_OC1NPolarityConfig
 3501              		.syntax unified
 3502              		.thumb
 3503              		.thumb_func
 3505              	TIM_OC1NPolarityConfig:
 3506              	.LVL351:
 3507              	.LFB79:
1829:./FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpccer = 0;
 3508              		.loc 1 1829 1 is_stmt 1 view -0
 3509              		.cfi_startproc
 3510              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccvVNijM.s 			page 129


 3511              		@ frame_needed = 0, uses_anonymous_args = 0
 3512              		@ link register save eliminated.
1830:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 3513              		.loc 1 1830 3 view .LVU1172
1832:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OCN_POLARITY(TIM_OCNPolarity));
 3514              		.loc 1 1832 3 view .LVU1173
1833:./FWLIB/src/stm32f10x_tim.c ****    
 3515              		.loc 1 1833 3 view .LVU1174
1835:./FWLIB/src/stm32f10x_tim.c ****   /* Set or Reset the CC1NP Bit */
 3516              		.loc 1 1835 3 view .LVU1175
1835:./FWLIB/src/stm32f10x_tim.c ****   /* Set or Reset the CC1NP Bit */
 3517              		.loc 1 1835 11 is_stmt 0 view .LVU1176
 3518 0000 038C     		ldrh	r3, [r0, #32]
 3519 0002 9BB2     		uxth	r3, r3
 3520              	.LVL352:
1837:./FWLIB/src/stm32f10x_tim.c ****   tmpccer |= TIM_OCNPolarity;
 3521              		.loc 1 1837 3 is_stmt 1 view .LVU1177
1837:./FWLIB/src/stm32f10x_tim.c ****   tmpccer |= TIM_OCNPolarity;
 3522              		.loc 1 1837 11 is_stmt 0 view .LVU1178
 3523 0004 23F00803 		bic	r3, r3, #8
 3524              	.LVL353:
1838:./FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCER register */
 3525              		.loc 1 1838 3 is_stmt 1 view .LVU1179
1838:./FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCER register */
 3526              		.loc 1 1838 11 is_stmt 0 view .LVU1180
 3527 0008 0B43     		orrs	r3, r3, r1
 3528              	.LVL354:
1840:./FWLIB/src/stm32f10x_tim.c **** }
 3529              		.loc 1 1840 3 is_stmt 1 view .LVU1181
1840:./FWLIB/src/stm32f10x_tim.c **** }
 3530              		.loc 1 1840 14 is_stmt 0 view .LVU1182
 3531 000a 0384     		strh	r3, [r0, #32]	@ movhi
1841:./FWLIB/src/stm32f10x_tim.c **** 
 3532              		.loc 1 1841 1 view .LVU1183
 3533 000c 7047     		bx	lr
 3534              		.cfi_endproc
 3535              	.LFE79:
 3537              		.section	.text.TIM_OC2PolarityConfig,"ax",%progbits
 3538              		.align	1
 3539              		.global	TIM_OC2PolarityConfig
 3540              		.syntax unified
 3541              		.thumb
 3542              		.thumb_func
 3544              	TIM_OC2PolarityConfig:
 3545              	.LVL355:
 3546              	.LFB80:
1853:./FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpccer = 0;
 3547              		.loc 1 1853 1 is_stmt 1 view -0
 3548              		.cfi_startproc
 3549              		@ args = 0, pretend = 0, frame = 0
 3550              		@ frame_needed = 0, uses_anonymous_args = 0
 3551              		@ link register save eliminated.
1854:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 3552              		.loc 1 1854 3 view .LVU1185
1856:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCPolarity));
 3553              		.loc 1 1856 3 view .LVU1186
1857:./FWLIB/src/stm32f10x_tim.c ****   tmpccer = TIMx->CCER;
ARM GAS  /tmp/ccvVNijM.s 			page 130


 3554              		.loc 1 1857 3 view .LVU1187
1858:./FWLIB/src/stm32f10x_tim.c ****   /* Set or Reset the CC2P Bit */
 3555              		.loc 1 1858 3 view .LVU1188
1858:./FWLIB/src/stm32f10x_tim.c ****   /* Set or Reset the CC2P Bit */
 3556              		.loc 1 1858 11 is_stmt 0 view .LVU1189
 3557 0000 038C     		ldrh	r3, [r0, #32]
 3558 0002 9BB2     		uxth	r3, r3
 3559              	.LVL356:
1860:./FWLIB/src/stm32f10x_tim.c ****   tmpccer |= (uint16_t)(TIM_OCPolarity << 4);
 3560              		.loc 1 1860 3 is_stmt 1 view .LVU1190
1860:./FWLIB/src/stm32f10x_tim.c ****   tmpccer |= (uint16_t)(TIM_OCPolarity << 4);
 3561              		.loc 1 1860 11 is_stmt 0 view .LVU1191
 3562 0004 23F02003 		bic	r3, r3, #32
 3563              	.LVL357:
1861:./FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCER register */
 3564              		.loc 1 1861 3 is_stmt 1 view .LVU1192
1861:./FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCER register */
 3565              		.loc 1 1861 14 is_stmt 0 view .LVU1193
 3566 0008 0901     		lsls	r1, r1, #4
 3567              	.LVL358:
1861:./FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCER register */
 3568              		.loc 1 1861 14 view .LVU1194
 3569 000a 89B2     		uxth	r1, r1
1861:./FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCER register */
 3570              		.loc 1 1861 11 view .LVU1195
 3571 000c 0B43     		orrs	r3, r3, r1
 3572              	.LVL359:
1863:./FWLIB/src/stm32f10x_tim.c **** }
 3573              		.loc 1 1863 3 is_stmt 1 view .LVU1196
1863:./FWLIB/src/stm32f10x_tim.c **** }
 3574              		.loc 1 1863 14 is_stmt 0 view .LVU1197
 3575 000e 0384     		strh	r3, [r0, #32]	@ movhi
1864:./FWLIB/src/stm32f10x_tim.c **** 
 3576              		.loc 1 1864 1 view .LVU1198
 3577 0010 7047     		bx	lr
 3578              		.cfi_endproc
 3579              	.LFE80:
 3581              		.section	.text.TIM_OC2NPolarityConfig,"ax",%progbits
 3582              		.align	1
 3583              		.global	TIM_OC2NPolarityConfig
 3584              		.syntax unified
 3585              		.thumb
 3586              		.thumb_func
 3588              	TIM_OC2NPolarityConfig:
 3589              	.LVL360:
 3590              	.LFB81:
1876:./FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpccer = 0;
 3591              		.loc 1 1876 1 is_stmt 1 view -0
 3592              		.cfi_startproc
 3593              		@ args = 0, pretend = 0, frame = 0
 3594              		@ frame_needed = 0, uses_anonymous_args = 0
 3595              		@ link register save eliminated.
1877:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 3596              		.loc 1 1877 3 view .LVU1200
1879:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OCN_POLARITY(TIM_OCNPolarity));
 3597              		.loc 1 1879 3 view .LVU1201
1880:./FWLIB/src/stm32f10x_tim.c ****   
ARM GAS  /tmp/ccvVNijM.s 			page 131


 3598              		.loc 1 1880 3 view .LVU1202
1882:./FWLIB/src/stm32f10x_tim.c ****   /* Set or Reset the CC2NP Bit */
 3599              		.loc 1 1882 3 view .LVU1203
1882:./FWLIB/src/stm32f10x_tim.c ****   /* Set or Reset the CC2NP Bit */
 3600              		.loc 1 1882 11 is_stmt 0 view .LVU1204
 3601 0000 038C     		ldrh	r3, [r0, #32]
 3602 0002 9BB2     		uxth	r3, r3
 3603              	.LVL361:
1884:./FWLIB/src/stm32f10x_tim.c ****   tmpccer |= (uint16_t)(TIM_OCNPolarity << 4);
 3604              		.loc 1 1884 3 is_stmt 1 view .LVU1205
1884:./FWLIB/src/stm32f10x_tim.c ****   tmpccer |= (uint16_t)(TIM_OCNPolarity << 4);
 3605              		.loc 1 1884 11 is_stmt 0 view .LVU1206
 3606 0004 23F08003 		bic	r3, r3, #128
 3607              	.LVL362:
1885:./FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCER register */
 3608              		.loc 1 1885 3 is_stmt 1 view .LVU1207
1885:./FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCER register */
 3609              		.loc 1 1885 14 is_stmt 0 view .LVU1208
 3610 0008 0901     		lsls	r1, r1, #4
 3611              	.LVL363:
1885:./FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCER register */
 3612              		.loc 1 1885 14 view .LVU1209
 3613 000a 89B2     		uxth	r1, r1
1885:./FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCER register */
 3614              		.loc 1 1885 11 view .LVU1210
 3615 000c 0B43     		orrs	r3, r3, r1
 3616              	.LVL364:
1887:./FWLIB/src/stm32f10x_tim.c **** }
 3617              		.loc 1 1887 3 is_stmt 1 view .LVU1211
1887:./FWLIB/src/stm32f10x_tim.c **** }
 3618              		.loc 1 1887 14 is_stmt 0 view .LVU1212
 3619 000e 0384     		strh	r3, [r0, #32]	@ movhi
1888:./FWLIB/src/stm32f10x_tim.c **** 
 3620              		.loc 1 1888 1 view .LVU1213
 3621 0010 7047     		bx	lr
 3622              		.cfi_endproc
 3623              	.LFE81:
 3625              		.section	.text.TIM_OC3PolarityConfig,"ax",%progbits
 3626              		.align	1
 3627              		.global	TIM_OC3PolarityConfig
 3628              		.syntax unified
 3629              		.thumb
 3630              		.thumb_func
 3632              	TIM_OC3PolarityConfig:
 3633              	.LVL365:
 3634              	.LFB82:
1900:./FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpccer = 0;
 3635              		.loc 1 1900 1 is_stmt 1 view -0
 3636              		.cfi_startproc
 3637              		@ args = 0, pretend = 0, frame = 0
 3638              		@ frame_needed = 0, uses_anonymous_args = 0
 3639              		@ link register save eliminated.
1901:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 3640              		.loc 1 1901 3 view .LVU1215
1903:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCPolarity));
 3641              		.loc 1 1903 3 view .LVU1216
1904:./FWLIB/src/stm32f10x_tim.c ****   tmpccer = TIMx->CCER;
ARM GAS  /tmp/ccvVNijM.s 			page 132


 3642              		.loc 1 1904 3 view .LVU1217
1905:./FWLIB/src/stm32f10x_tim.c ****   /* Set or Reset the CC3P Bit */
 3643              		.loc 1 1905 3 view .LVU1218
1905:./FWLIB/src/stm32f10x_tim.c ****   /* Set or Reset the CC3P Bit */
 3644              		.loc 1 1905 11 is_stmt 0 view .LVU1219
 3645 0000 038C     		ldrh	r3, [r0, #32]
 3646 0002 9BB2     		uxth	r3, r3
 3647              	.LVL366:
1907:./FWLIB/src/stm32f10x_tim.c ****   tmpccer |= (uint16_t)(TIM_OCPolarity << 8);
 3648              		.loc 1 1907 3 is_stmt 1 view .LVU1220
1907:./FWLIB/src/stm32f10x_tim.c ****   tmpccer |= (uint16_t)(TIM_OCPolarity << 8);
 3649              		.loc 1 1907 11 is_stmt 0 view .LVU1221
 3650 0004 23F40073 		bic	r3, r3, #512
 3651              	.LVL367:
1908:./FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCER register */
 3652              		.loc 1 1908 3 is_stmt 1 view .LVU1222
1908:./FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCER register */
 3653              		.loc 1 1908 14 is_stmt 0 view .LVU1223
 3654 0008 0902     		lsls	r1, r1, #8
 3655              	.LVL368:
1908:./FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCER register */
 3656              		.loc 1 1908 14 view .LVU1224
 3657 000a 89B2     		uxth	r1, r1
1908:./FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCER register */
 3658              		.loc 1 1908 11 view .LVU1225
 3659 000c 0B43     		orrs	r3, r3, r1
 3660              	.LVL369:
1910:./FWLIB/src/stm32f10x_tim.c **** }
 3661              		.loc 1 1910 3 is_stmt 1 view .LVU1226
1910:./FWLIB/src/stm32f10x_tim.c **** }
 3662              		.loc 1 1910 14 is_stmt 0 view .LVU1227
 3663 000e 0384     		strh	r3, [r0, #32]	@ movhi
1911:./FWLIB/src/stm32f10x_tim.c **** 
 3664              		.loc 1 1911 1 view .LVU1228
 3665 0010 7047     		bx	lr
 3666              		.cfi_endproc
 3667              	.LFE82:
 3669              		.section	.text.TIM_OC3NPolarityConfig,"ax",%progbits
 3670              		.align	1
 3671              		.global	TIM_OC3NPolarityConfig
 3672              		.syntax unified
 3673              		.thumb
 3674              		.thumb_func
 3676              	TIM_OC3NPolarityConfig:
 3677              	.LVL370:
 3678              	.LFB83:
1923:./FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpccer = 0;
 3679              		.loc 1 1923 1 is_stmt 1 view -0
 3680              		.cfi_startproc
 3681              		@ args = 0, pretend = 0, frame = 0
 3682              		@ frame_needed = 0, uses_anonymous_args = 0
 3683              		@ link register save eliminated.
1924:./FWLIB/src/stm32f10x_tim.c ****  
 3684              		.loc 1 1924 3 view .LVU1230
1927:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OCN_POLARITY(TIM_OCNPolarity));
 3685              		.loc 1 1927 3 view .LVU1231
1928:./FWLIB/src/stm32f10x_tim.c ****     
ARM GAS  /tmp/ccvVNijM.s 			page 133


 3686              		.loc 1 1928 3 view .LVU1232
1930:./FWLIB/src/stm32f10x_tim.c ****   /* Set or Reset the CC3NP Bit */
 3687              		.loc 1 1930 3 view .LVU1233
1930:./FWLIB/src/stm32f10x_tim.c ****   /* Set or Reset the CC3NP Bit */
 3688              		.loc 1 1930 11 is_stmt 0 view .LVU1234
 3689 0000 038C     		ldrh	r3, [r0, #32]
 3690 0002 9BB2     		uxth	r3, r3
 3691              	.LVL371:
1932:./FWLIB/src/stm32f10x_tim.c ****   tmpccer |= (uint16_t)(TIM_OCNPolarity << 8);
 3692              		.loc 1 1932 3 is_stmt 1 view .LVU1235
1932:./FWLIB/src/stm32f10x_tim.c ****   tmpccer |= (uint16_t)(TIM_OCNPolarity << 8);
 3693              		.loc 1 1932 11 is_stmt 0 view .LVU1236
 3694 0004 23F40063 		bic	r3, r3, #2048
 3695              	.LVL372:
1933:./FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCER register */
 3696              		.loc 1 1933 3 is_stmt 1 view .LVU1237
1933:./FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCER register */
 3697              		.loc 1 1933 14 is_stmt 0 view .LVU1238
 3698 0008 0902     		lsls	r1, r1, #8
 3699              	.LVL373:
1933:./FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCER register */
 3700              		.loc 1 1933 14 view .LVU1239
 3701 000a 89B2     		uxth	r1, r1
1933:./FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCER register */
 3702              		.loc 1 1933 11 view .LVU1240
 3703 000c 0B43     		orrs	r3, r3, r1
 3704              	.LVL374:
1935:./FWLIB/src/stm32f10x_tim.c **** }
 3705              		.loc 1 1935 3 is_stmt 1 view .LVU1241
1935:./FWLIB/src/stm32f10x_tim.c **** }
 3706              		.loc 1 1935 14 is_stmt 0 view .LVU1242
 3707 000e 0384     		strh	r3, [r0, #32]	@ movhi
1936:./FWLIB/src/stm32f10x_tim.c **** 
 3708              		.loc 1 1936 1 view .LVU1243
 3709 0010 7047     		bx	lr
 3710              		.cfi_endproc
 3711              	.LFE83:
 3713              		.section	.text.TIM_OC4PolarityConfig,"ax",%progbits
 3714              		.align	1
 3715              		.global	TIM_OC4PolarityConfig
 3716              		.syntax unified
 3717              		.thumb
 3718              		.thumb_func
 3720              	TIM_OC4PolarityConfig:
 3721              	.LVL375:
 3722              	.LFB84:
1948:./FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpccer = 0;
 3723              		.loc 1 1948 1 is_stmt 1 view -0
 3724              		.cfi_startproc
 3725              		@ args = 0, pretend = 0, frame = 0
 3726              		@ frame_needed = 0, uses_anonymous_args = 0
 3727              		@ link register save eliminated.
1949:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 3728              		.loc 1 1949 3 view .LVU1245
1951:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCPolarity));
 3729              		.loc 1 1951 3 view .LVU1246
1952:./FWLIB/src/stm32f10x_tim.c ****   tmpccer = TIMx->CCER;
ARM GAS  /tmp/ccvVNijM.s 			page 134


 3730              		.loc 1 1952 3 view .LVU1247
1953:./FWLIB/src/stm32f10x_tim.c ****   /* Set or Reset the CC4P Bit */
 3731              		.loc 1 1953 3 view .LVU1248
1953:./FWLIB/src/stm32f10x_tim.c ****   /* Set or Reset the CC4P Bit */
 3732              		.loc 1 1953 11 is_stmt 0 view .LVU1249
 3733 0000 038C     		ldrh	r3, [r0, #32]
 3734 0002 9BB2     		uxth	r3, r3
 3735              	.LVL376:
1955:./FWLIB/src/stm32f10x_tim.c ****   tmpccer |= (uint16_t)(TIM_OCPolarity << 12);
 3736              		.loc 1 1955 3 is_stmt 1 view .LVU1250
1955:./FWLIB/src/stm32f10x_tim.c ****   tmpccer |= (uint16_t)(TIM_OCPolarity << 12);
 3737              		.loc 1 1955 11 is_stmt 0 view .LVU1251
 3738 0004 23F40053 		bic	r3, r3, #8192
 3739              	.LVL377:
1956:./FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCER register */
 3740              		.loc 1 1956 3 is_stmt 1 view .LVU1252
1956:./FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCER register */
 3741              		.loc 1 1956 14 is_stmt 0 view .LVU1253
 3742 0008 0903     		lsls	r1, r1, #12
 3743              	.LVL378:
1956:./FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCER register */
 3744              		.loc 1 1956 14 view .LVU1254
 3745 000a 89B2     		uxth	r1, r1
1956:./FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCER register */
 3746              		.loc 1 1956 11 view .LVU1255
 3747 000c 0B43     		orrs	r3, r3, r1
 3748              	.LVL379:
1958:./FWLIB/src/stm32f10x_tim.c **** }
 3749              		.loc 1 1958 3 is_stmt 1 view .LVU1256
1958:./FWLIB/src/stm32f10x_tim.c **** }
 3750              		.loc 1 1958 14 is_stmt 0 view .LVU1257
 3751 000e 0384     		strh	r3, [r0, #32]	@ movhi
1959:./FWLIB/src/stm32f10x_tim.c **** 
 3752              		.loc 1 1959 1 view .LVU1258
 3753 0010 7047     		bx	lr
 3754              		.cfi_endproc
 3755              	.LFE84:
 3757              		.section	.text.TIM_CCxCmd,"ax",%progbits
 3758              		.align	1
 3759              		.global	TIM_CCxCmd
 3760              		.syntax unified
 3761              		.thumb
 3762              		.thumb_func
 3764              	TIM_CCxCmd:
 3765              	.LVL380:
 3766              	.LFB85:
1975:./FWLIB/src/stm32f10x_tim.c ****   uint16_t tmp = 0;
 3767              		.loc 1 1975 1 is_stmt 1 view -0
 3768              		.cfi_startproc
 3769              		@ args = 0, pretend = 0, frame = 0
 3770              		@ frame_needed = 0, uses_anonymous_args = 0
 3771              		@ link register save eliminated.
1976:./FWLIB/src/stm32f10x_tim.c **** 
 3772              		.loc 1 1976 3 view .LVU1260
1979:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_CHANNEL(TIM_Channel));
 3773              		.loc 1 1979 3 view .LVU1261
1980:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_CCX(TIM_CCx));
ARM GAS  /tmp/ccvVNijM.s 			page 135


 3774              		.loc 1 1980 3 view .LVU1262
1981:./FWLIB/src/stm32f10x_tim.c **** 
 3775              		.loc 1 1981 3 view .LVU1263
1983:./FWLIB/src/stm32f10x_tim.c **** 
 3776              		.loc 1 1983 3 view .LVU1264
1983:./FWLIB/src/stm32f10x_tim.c **** 
 3777              		.loc 1 1983 22 is_stmt 0 view .LVU1265
 3778 0000 0123     		movs	r3, #1
 3779 0002 8B40     		lsls	r3, r3, r1
1983:./FWLIB/src/stm32f10x_tim.c **** 
 3780              		.loc 1 1983 7 view .LVU1266
 3781 0004 9BB2     		uxth	r3, r3
 3782              	.LVL381:
1986:./FWLIB/src/stm32f10x_tim.c **** 
 3783              		.loc 1 1986 3 is_stmt 1 view .LVU1267
1986:./FWLIB/src/stm32f10x_tim.c **** 
 3784              		.loc 1 1986 7 is_stmt 0 view .LVU1268
 3785 0006 B0F820C0 		ldrh	ip, [r0, #32]
1986:./FWLIB/src/stm32f10x_tim.c **** 
 3786              		.loc 1 1986 17 view .LVU1269
 3787 000a DB43     		mvns	r3, r3
 3788              	.LVL382:
1986:./FWLIB/src/stm32f10x_tim.c **** 
 3789              		.loc 1 1986 17 view .LVU1270
 3790 000c 9BB2     		uxth	r3, r3
 3791              	.LVL383:
1986:./FWLIB/src/stm32f10x_tim.c **** 
 3792              		.loc 1 1986 14 view .LVU1271
 3793 000e 03EA0C03 		and	r3, r3, ip
 3794 0012 0384     		strh	r3, [r0, #32]	@ movhi
1989:./FWLIB/src/stm32f10x_tim.c **** }
 3795              		.loc 1 1989 3 is_stmt 1 view .LVU1272
1989:./FWLIB/src/stm32f10x_tim.c **** }
 3796              		.loc 1 1989 7 is_stmt 0 view .LVU1273
 3797 0014 038C     		ldrh	r3, [r0, #32]
 3798 0016 9BB2     		uxth	r3, r3
1989:./FWLIB/src/stm32f10x_tim.c **** }
 3799              		.loc 1 1989 37 view .LVU1274
 3800 0018 8A40     		lsls	r2, r2, r1
 3801              	.LVL384:
1989:./FWLIB/src/stm32f10x_tim.c **** }
 3802              		.loc 1 1989 18 view .LVU1275
 3803 001a 92B2     		uxth	r2, r2
1989:./FWLIB/src/stm32f10x_tim.c **** }
 3804              		.loc 1 1989 14 view .LVU1276
 3805 001c 1343     		orrs	r3, r3, r2
 3806 001e 0384     		strh	r3, [r0, #32]	@ movhi
1990:./FWLIB/src/stm32f10x_tim.c **** 
 3807              		.loc 1 1990 1 view .LVU1277
 3808 0020 7047     		bx	lr
 3809              		.cfi_endproc
 3810              	.LFE85:
 3812              		.section	.text.TIM_CCxNCmd,"ax",%progbits
 3813              		.align	1
 3814              		.global	TIM_CCxNCmd
 3815              		.syntax unified
 3816              		.thumb
ARM GAS  /tmp/ccvVNijM.s 			page 136


 3817              		.thumb_func
 3819              	TIM_CCxNCmd:
 3820              	.LVL385:
 3821              	.LFB86:
2005:./FWLIB/src/stm32f10x_tim.c ****   uint16_t tmp = 0;
 3822              		.loc 1 2005 1 is_stmt 1 view -0
 3823              		.cfi_startproc
 3824              		@ args = 0, pretend = 0, frame = 0
 3825              		@ frame_needed = 0, uses_anonymous_args = 0
 3826              		@ link register save eliminated.
2006:./FWLIB/src/stm32f10x_tim.c **** 
 3827              		.loc 1 2006 3 view .LVU1279
2009:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_COMPLEMENTARY_CHANNEL(TIM_Channel));
 3828              		.loc 1 2009 3 view .LVU1280
2010:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_CCXN(TIM_CCxN));
 3829              		.loc 1 2010 3 view .LVU1281
2011:./FWLIB/src/stm32f10x_tim.c **** 
 3830              		.loc 1 2011 3 view .LVU1282
2013:./FWLIB/src/stm32f10x_tim.c **** 
 3831              		.loc 1 2013 3 view .LVU1283
2013:./FWLIB/src/stm32f10x_tim.c **** 
 3832              		.loc 1 2013 23 is_stmt 0 view .LVU1284
 3833 0000 0423     		movs	r3, #4
 3834 0002 8B40     		lsls	r3, r3, r1
2013:./FWLIB/src/stm32f10x_tim.c **** 
 3835              		.loc 1 2013 7 view .LVU1285
 3836 0004 9BB2     		uxth	r3, r3
 3837              	.LVL386:
2016:./FWLIB/src/stm32f10x_tim.c **** 
 3838              		.loc 1 2016 3 is_stmt 1 view .LVU1286
2016:./FWLIB/src/stm32f10x_tim.c **** 
 3839              		.loc 1 2016 7 is_stmt 0 view .LVU1287
 3840 0006 B0F820C0 		ldrh	ip, [r0, #32]
2016:./FWLIB/src/stm32f10x_tim.c **** 
 3841              		.loc 1 2016 17 view .LVU1288
 3842 000a DB43     		mvns	r3, r3
 3843              	.LVL387:
2016:./FWLIB/src/stm32f10x_tim.c **** 
 3844              		.loc 1 2016 17 view .LVU1289
 3845 000c 9BB2     		uxth	r3, r3
 3846              	.LVL388:
2016:./FWLIB/src/stm32f10x_tim.c **** 
 3847              		.loc 1 2016 14 view .LVU1290
 3848 000e 03EA0C03 		and	r3, r3, ip
 3849 0012 0384     		strh	r3, [r0, #32]	@ movhi
2019:./FWLIB/src/stm32f10x_tim.c **** }
 3850              		.loc 1 2019 3 is_stmt 1 view .LVU1291
2019:./FWLIB/src/stm32f10x_tim.c **** }
 3851              		.loc 1 2019 7 is_stmt 0 view .LVU1292
 3852 0014 038C     		ldrh	r3, [r0, #32]
 3853 0016 9BB2     		uxth	r3, r3
2019:./FWLIB/src/stm32f10x_tim.c **** }
 3854              		.loc 1 2019 38 view .LVU1293
 3855 0018 8A40     		lsls	r2, r2, r1
 3856              	.LVL389:
2019:./FWLIB/src/stm32f10x_tim.c **** }
 3857              		.loc 1 2019 18 view .LVU1294
ARM GAS  /tmp/ccvVNijM.s 			page 137


 3858 001a 92B2     		uxth	r2, r2
2019:./FWLIB/src/stm32f10x_tim.c **** }
 3859              		.loc 1 2019 14 view .LVU1295
 3860 001c 1343     		orrs	r3, r3, r2
 3861 001e 0384     		strh	r3, [r0, #32]	@ movhi
2020:./FWLIB/src/stm32f10x_tim.c **** 
 3862              		.loc 1 2020 1 view .LVU1296
 3863 0020 7047     		bx	lr
 3864              		.cfi_endproc
 3865              	.LFE86:
 3867              		.section	.text.TIM_SelectOCxM,"ax",%progbits
 3868              		.align	1
 3869              		.global	TIM_SelectOCxM
 3870              		.syntax unified
 3871              		.thumb
 3872              		.thumb_func
 3874              	TIM_SelectOCxM:
 3875              	.LVL390:
 3876              	.LFB87:
2046:./FWLIB/src/stm32f10x_tim.c ****   uint32_t tmp = 0;
 3877              		.loc 1 2046 1 is_stmt 1 view -0
 3878              		.cfi_startproc
 3879              		@ args = 0, pretend = 0, frame = 0
 3880              		@ frame_needed = 0, uses_anonymous_args = 0
2046:./FWLIB/src/stm32f10x_tim.c ****   uint32_t tmp = 0;
 3881              		.loc 1 2046 1 is_stmt 0 view .LVU1298
 3882 0000 00B5     		push	{lr}
 3883              	.LCFI15:
 3884              		.cfi_def_cfa_offset 4
 3885              		.cfi_offset 14, -4
2047:./FWLIB/src/stm32f10x_tim.c ****   uint16_t tmp1 = 0;
 3886              		.loc 1 2047 3 is_stmt 1 view .LVU1299
 3887              	.LVL391:
2048:./FWLIB/src/stm32f10x_tim.c **** 
 3888              		.loc 1 2048 3 view .LVU1300
2051:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_CHANNEL(TIM_Channel));
 3889              		.loc 1 2051 3 view .LVU1301
2052:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OCM(TIM_OCMode));
 3890              		.loc 1 2052 3 view .LVU1302
2053:./FWLIB/src/stm32f10x_tim.c **** 
 3891              		.loc 1 2053 3 view .LVU1303
2055:./FWLIB/src/stm32f10x_tim.c ****   tmp += CCMR_Offset;
 3892              		.loc 1 2055 3 view .LVU1304
2056:./FWLIB/src/stm32f10x_tim.c **** 
 3893              		.loc 1 2056 3 view .LVU1305
2056:./FWLIB/src/stm32f10x_tim.c **** 
 3894              		.loc 1 2056 7 is_stmt 0 view .LVU1306
 3895 0002 00F1180C 		add	ip, r0, #24
 3896              	.LVL392:
2058:./FWLIB/src/stm32f10x_tim.c **** 
 3897              		.loc 1 2058 3 is_stmt 1 view .LVU1307
2058:./FWLIB/src/stm32f10x_tim.c **** 
 3898              		.loc 1 2058 23 is_stmt 0 view .LVU1308
 3899 0006 0123     		movs	r3, #1
 3900 0008 8B40     		lsls	r3, r3, r1
2058:./FWLIB/src/stm32f10x_tim.c **** 
 3901              		.loc 1 2058 8 view .LVU1309
ARM GAS  /tmp/ccvVNijM.s 			page 138


 3902 000a 9BB2     		uxth	r3, r3
 3903              	.LVL393:
2061:./FWLIB/src/stm32f10x_tim.c **** 
 3904              		.loc 1 2061 3 is_stmt 1 view .LVU1310
2061:./FWLIB/src/stm32f10x_tim.c **** 
 3905              		.loc 1 2061 7 is_stmt 0 view .LVU1311
 3906 000c B0F820E0 		ldrh	lr, [r0, #32]
2061:./FWLIB/src/stm32f10x_tim.c **** 
 3907              		.loc 1 2061 17 view .LVU1312
 3908 0010 DB43     		mvns	r3, r3
 3909              	.LVL394:
2061:./FWLIB/src/stm32f10x_tim.c **** 
 3910              		.loc 1 2061 17 view .LVU1313
 3911 0012 9BB2     		uxth	r3, r3
 3912              	.LVL395:
2061:./FWLIB/src/stm32f10x_tim.c **** 
 3913              		.loc 1 2061 14 view .LVU1314
 3914 0014 03EA0E03 		and	r3, r3, lr
 3915 0018 0384     		strh	r3, [r0, #32]	@ movhi
2063:./FWLIB/src/stm32f10x_tim.c ****   {
 3916              		.loc 1 2063 3 is_stmt 1 view .LVU1315
2063:./FWLIB/src/stm32f10x_tim.c ****   {
 3917              		.loc 1 2063 5 is_stmt 0 view .LVU1316
 3918 001a 91B1     		cbz	r1, .L174
2063:./FWLIB/src/stm32f10x_tim.c ****   {
 3919              		.loc 1 2063 37 discriminator 1 view .LVU1317
 3920 001c 0829     		cmp	r1, #8
 3921 001e 10D0     		beq	.L174
2075:./FWLIB/src/stm32f10x_tim.c **** 
 3922              		.loc 1 2075 5 is_stmt 1 view .LVU1318
2075:./FWLIB/src/stm32f10x_tim.c **** 
 3923              		.loc 1 2075 12 is_stmt 0 view .LVU1319
 3924 0020 0439     		subs	r1, r1, #4
 3925              	.LVL396:
2075:./FWLIB/src/stm32f10x_tim.c **** 
 3926              		.loc 1 2075 49 view .LVU1320
 3927 0022 C1F34E01 		ubfx	r1, r1, #1, #15
 3928              	.LVL397:
2078:./FWLIB/src/stm32f10x_tim.c ****     
 3929              		.loc 1 2078 5 is_stmt 1 view .LVU1321
 3930 0026 51F80C30 		ldr	r3, [r1, ip]
2078:./FWLIB/src/stm32f10x_tim.c ****     
 3931              		.loc 1 2078 28 is_stmt 0 view .LVU1322
 3932 002a 23F4E043 		bic	r3, r3, #28672
 3933 002e 41F80C30 		str	r3, [r1, ip]
2081:./FWLIB/src/stm32f10x_tim.c ****   }
 3934              		.loc 1 2081 5 is_stmt 1 view .LVU1323
 3935 0032 51F80C30 		ldr	r3, [r1, ip]
2081:./FWLIB/src/stm32f10x_tim.c ****   }
 3936              		.loc 1 2081 31 is_stmt 0 view .LVU1324
 3937 0036 1202     		lsls	r2, r2, #8
 3938              	.LVL398:
2081:./FWLIB/src/stm32f10x_tim.c ****   }
 3939              		.loc 1 2081 31 view .LVU1325
 3940 0038 92B2     		uxth	r2, r2
2081:./FWLIB/src/stm32f10x_tim.c ****   }
 3941              		.loc 1 2081 28 view .LVU1326
ARM GAS  /tmp/ccvVNijM.s 			page 139


 3942 003a 1343     		orrs	r3, r3, r2
 3943 003c 41F80C30 		str	r3, [r1, ip]
2083:./FWLIB/src/stm32f10x_tim.c **** 
 3944              		.loc 1 2083 1 view .LVU1327
 3945 0040 0BE0     		b	.L173
 3946              	.LVL399:
 3947              	.L174:
2065:./FWLIB/src/stm32f10x_tim.c **** 
 3948              		.loc 1 2065 5 is_stmt 1 view .LVU1328
2065:./FWLIB/src/stm32f10x_tim.c **** 
 3949              		.loc 1 2065 24 is_stmt 0 view .LVU1329
 3950 0042 4908     		lsrs	r1, r1, #1
 3951              	.LVL400:
2068:./FWLIB/src/stm32f10x_tim.c ****    
 3952              		.loc 1 2068 5 is_stmt 1 view .LVU1330
 3953 0044 51F80C30 		ldr	r3, [r1, ip]
2068:./FWLIB/src/stm32f10x_tim.c ****    
 3954              		.loc 1 2068 28 is_stmt 0 view .LVU1331
 3955 0048 23F07003 		bic	r3, r3, #112
 3956 004c 41F80C30 		str	r3, [r1, ip]
2071:./FWLIB/src/stm32f10x_tim.c ****   }
 3957              		.loc 1 2071 5 is_stmt 1 view .LVU1332
 3958 0050 51F80C30 		ldr	r3, [r1, ip]
2071:./FWLIB/src/stm32f10x_tim.c ****   }
 3959              		.loc 1 2071 28 is_stmt 0 view .LVU1333
 3960 0054 1343     		orrs	r3, r3, r2
 3961 0056 41F80C30 		str	r3, [r1, ip]
 3962              	.LVL401:
 3963              	.L173:
2083:./FWLIB/src/stm32f10x_tim.c **** 
 3964              		.loc 1 2083 1 view .LVU1334
 3965 005a 5DF804FB 		ldr	pc, [sp], #4
 3966              		.cfi_endproc
 3967              	.LFE87:
 3969              		.section	.text.TIM_UpdateDisableConfig,"ax",%progbits
 3970              		.align	1
 3971              		.global	TIM_UpdateDisableConfig
 3972              		.syntax unified
 3973              		.thumb
 3974              		.thumb_func
 3976              	TIM_UpdateDisableConfig:
 3977              	.LVL402:
 3978              	.LFB88:
2093:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 3979              		.loc 1 2093 1 is_stmt 1 view -0
 3980              		.cfi_startproc
 3981              		@ args = 0, pretend = 0, frame = 0
 3982              		@ frame_needed = 0, uses_anonymous_args = 0
 3983              		@ link register save eliminated.
2095:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 3984              		.loc 1 2095 3 view .LVU1336
2096:./FWLIB/src/stm32f10x_tim.c ****   if (NewState != DISABLE)
 3985              		.loc 1 2096 3 view .LVU1337
2097:./FWLIB/src/stm32f10x_tim.c ****   {
 3986              		.loc 1 2097 3 view .LVU1338
2097:./FWLIB/src/stm32f10x_tim.c ****   {
 3987              		.loc 1 2097 6 is_stmt 0 view .LVU1339
ARM GAS  /tmp/ccvVNijM.s 			page 140


 3988 0000 29B1     		cbz	r1, .L179
2100:./FWLIB/src/stm32f10x_tim.c ****   }
 3989              		.loc 1 2100 5 is_stmt 1 view .LVU1340
2100:./FWLIB/src/stm32f10x_tim.c ****   }
 3990              		.loc 1 2100 9 is_stmt 0 view .LVU1341
 3991 0002 0388     		ldrh	r3, [r0]
 3992 0004 9BB2     		uxth	r3, r3
2100:./FWLIB/src/stm32f10x_tim.c ****   }
 3993              		.loc 1 2100 15 view .LVU1342
 3994 0006 43F00203 		orr	r3, r3, #2
 3995 000a 0380     		strh	r3, [r0]	@ movhi
 3996 000c 7047     		bx	lr
 3997              	.L179:
2105:./FWLIB/src/stm32f10x_tim.c ****   }
 3998              		.loc 1 2105 5 is_stmt 1 view .LVU1343
2105:./FWLIB/src/stm32f10x_tim.c ****   }
 3999              		.loc 1 2105 9 is_stmt 0 view .LVU1344
 4000 000e 0388     		ldrh	r3, [r0]
 4001 0010 9BB2     		uxth	r3, r3
2105:./FWLIB/src/stm32f10x_tim.c ****   }
 4002              		.loc 1 2105 15 view .LVU1345
 4003 0012 23F00203 		bic	r3, r3, #2
 4004 0016 9BB2     		uxth	r3, r3
 4005 0018 0380     		strh	r3, [r0]	@ movhi
2107:./FWLIB/src/stm32f10x_tim.c **** 
 4006              		.loc 1 2107 1 view .LVU1346
 4007 001a 7047     		bx	lr
 4008              		.cfi_endproc
 4009              	.LFE88:
 4011              		.section	.text.TIM_UpdateRequestConfig,"ax",%progbits
 4012              		.align	1
 4013              		.global	TIM_UpdateRequestConfig
 4014              		.syntax unified
 4015              		.thumb
 4016              		.thumb_func
 4018              	TIM_UpdateRequestConfig:
 4019              	.LVL403:
 4020              	.LFB89:
2121:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 4021              		.loc 1 2121 1 is_stmt 1 view -0
 4022              		.cfi_startproc
 4023              		@ args = 0, pretend = 0, frame = 0
 4024              		@ frame_needed = 0, uses_anonymous_args = 0
 4025              		@ link register save eliminated.
2123:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_UPDATE_SOURCE(TIM_UpdateSource));
 4026              		.loc 1 2123 3 view .LVU1348
2124:./FWLIB/src/stm32f10x_tim.c ****   if (TIM_UpdateSource != TIM_UpdateSource_Global)
 4027              		.loc 1 2124 3 view .LVU1349
2125:./FWLIB/src/stm32f10x_tim.c ****   {
 4028              		.loc 1 2125 3 view .LVU1350
2125:./FWLIB/src/stm32f10x_tim.c ****   {
 4029              		.loc 1 2125 6 is_stmt 0 view .LVU1351
 4030 0000 29B1     		cbz	r1, .L182
2128:./FWLIB/src/stm32f10x_tim.c ****   }
 4031              		.loc 1 2128 5 is_stmt 1 view .LVU1352
2128:./FWLIB/src/stm32f10x_tim.c ****   }
 4032              		.loc 1 2128 9 is_stmt 0 view .LVU1353
ARM GAS  /tmp/ccvVNijM.s 			page 141


 4033 0002 0388     		ldrh	r3, [r0]
 4034 0004 9BB2     		uxth	r3, r3
2128:./FWLIB/src/stm32f10x_tim.c ****   }
 4035              		.loc 1 2128 15 view .LVU1354
 4036 0006 43F00403 		orr	r3, r3, #4
 4037 000a 0380     		strh	r3, [r0]	@ movhi
 4038 000c 7047     		bx	lr
 4039              	.L182:
2133:./FWLIB/src/stm32f10x_tim.c ****   }
 4040              		.loc 1 2133 5 is_stmt 1 view .LVU1355
2133:./FWLIB/src/stm32f10x_tim.c ****   }
 4041              		.loc 1 2133 9 is_stmt 0 view .LVU1356
 4042 000e 0388     		ldrh	r3, [r0]
 4043 0010 9BB2     		uxth	r3, r3
2133:./FWLIB/src/stm32f10x_tim.c ****   }
 4044              		.loc 1 2133 15 view .LVU1357
 4045 0012 23F00403 		bic	r3, r3, #4
 4046 0016 9BB2     		uxth	r3, r3
 4047 0018 0380     		strh	r3, [r0]	@ movhi
2135:./FWLIB/src/stm32f10x_tim.c **** 
 4048              		.loc 1 2135 1 view .LVU1358
 4049 001a 7047     		bx	lr
 4050              		.cfi_endproc
 4051              	.LFE89:
 4053              		.section	.text.TIM_SelectHallSensor,"ax",%progbits
 4054              		.align	1
 4055              		.global	TIM_SelectHallSensor
 4056              		.syntax unified
 4057              		.thumb
 4058              		.thumb_func
 4060              	TIM_SelectHallSensor:
 4061              	.LVL404:
 4062              	.LFB90:
2145:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 4063              		.loc 1 2145 1 is_stmt 1 view -0
 4064              		.cfi_startproc
 4065              		@ args = 0, pretend = 0, frame = 0
 4066              		@ frame_needed = 0, uses_anonymous_args = 0
 4067              		@ link register save eliminated.
2147:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 4068              		.loc 1 2147 3 view .LVU1360
2148:./FWLIB/src/stm32f10x_tim.c ****   if (NewState != DISABLE)
 4069              		.loc 1 2148 3 view .LVU1361
2149:./FWLIB/src/stm32f10x_tim.c ****   {
 4070              		.loc 1 2149 3 view .LVU1362
2149:./FWLIB/src/stm32f10x_tim.c ****   {
 4071              		.loc 1 2149 6 is_stmt 0 view .LVU1363
 4072 0000 29B1     		cbz	r1, .L185
2152:./FWLIB/src/stm32f10x_tim.c ****   }
 4073              		.loc 1 2152 5 is_stmt 1 view .LVU1364
2152:./FWLIB/src/stm32f10x_tim.c ****   }
 4074              		.loc 1 2152 9 is_stmt 0 view .LVU1365
 4075 0002 8388     		ldrh	r3, [r0, #4]
 4076 0004 9BB2     		uxth	r3, r3
2152:./FWLIB/src/stm32f10x_tim.c ****   }
 4077              		.loc 1 2152 15 view .LVU1366
 4078 0006 43F08003 		orr	r3, r3, #128
ARM GAS  /tmp/ccvVNijM.s 			page 142


 4079 000a 8380     		strh	r3, [r0, #4]	@ movhi
 4080 000c 7047     		bx	lr
 4081              	.L185:
2157:./FWLIB/src/stm32f10x_tim.c ****   }
 4082              		.loc 1 2157 5 is_stmt 1 view .LVU1367
2157:./FWLIB/src/stm32f10x_tim.c ****   }
 4083              		.loc 1 2157 9 is_stmt 0 view .LVU1368
 4084 000e 8388     		ldrh	r3, [r0, #4]
 4085 0010 9BB2     		uxth	r3, r3
2157:./FWLIB/src/stm32f10x_tim.c ****   }
 4086              		.loc 1 2157 15 view .LVU1369
 4087 0012 23F08003 		bic	r3, r3, #128
 4088 0016 9BB2     		uxth	r3, r3
 4089 0018 8380     		strh	r3, [r0, #4]	@ movhi
2159:./FWLIB/src/stm32f10x_tim.c **** 
 4090              		.loc 1 2159 1 view .LVU1370
 4091 001a 7047     		bx	lr
 4092              		.cfi_endproc
 4093              	.LFE90:
 4095              		.section	.text.TIM_SelectOnePulseMode,"ax",%progbits
 4096              		.align	1
 4097              		.global	TIM_SelectOnePulseMode
 4098              		.syntax unified
 4099              		.thumb
 4100              		.thumb_func
 4102              	TIM_SelectOnePulseMode:
 4103              	.LVL405:
 4104              	.LFB91:
2171:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 4105              		.loc 1 2171 1 is_stmt 1 view -0
 4106              		.cfi_startproc
 4107              		@ args = 0, pretend = 0, frame = 0
 4108              		@ frame_needed = 0, uses_anonymous_args = 0
 4109              		@ link register save eliminated.
2173:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OPM_MODE(TIM_OPMode));
 4110              		.loc 1 2173 3 view .LVU1372
2174:./FWLIB/src/stm32f10x_tim.c ****   /* Reset the OPM Bit */
 4111              		.loc 1 2174 3 view .LVU1373
2176:./FWLIB/src/stm32f10x_tim.c ****   /* Configure the OPM Mode */
 4112              		.loc 1 2176 3 view .LVU1374
2176:./FWLIB/src/stm32f10x_tim.c ****   /* Configure the OPM Mode */
 4113              		.loc 1 2176 7 is_stmt 0 view .LVU1375
 4114 0000 0388     		ldrh	r3, [r0]
 4115 0002 9BB2     		uxth	r3, r3
2176:./FWLIB/src/stm32f10x_tim.c ****   /* Configure the OPM Mode */
 4116              		.loc 1 2176 13 view .LVU1376
 4117 0004 23F00803 		bic	r3, r3, #8
 4118 0008 9BB2     		uxth	r3, r3
 4119 000a 0380     		strh	r3, [r0]	@ movhi
2178:./FWLIB/src/stm32f10x_tim.c **** }
 4120              		.loc 1 2178 3 is_stmt 1 view .LVU1377
2178:./FWLIB/src/stm32f10x_tim.c **** }
 4121              		.loc 1 2178 7 is_stmt 0 view .LVU1378
 4122 000c 0388     		ldrh	r3, [r0]
 4123 000e 9BB2     		uxth	r3, r3
2178:./FWLIB/src/stm32f10x_tim.c **** }
 4124              		.loc 1 2178 13 view .LVU1379
ARM GAS  /tmp/ccvVNijM.s 			page 143


 4125 0010 0B43     		orrs	r3, r3, r1
 4126 0012 0380     		strh	r3, [r0]	@ movhi
2179:./FWLIB/src/stm32f10x_tim.c **** 
 4127              		.loc 1 2179 1 view .LVU1380
 4128 0014 7047     		bx	lr
 4129              		.cfi_endproc
 4130              	.LFE91:
 4132              		.section	.text.TIM_SelectOutputTrigger,"ax",%progbits
 4133              		.align	1
 4134              		.global	TIM_SelectOutputTrigger
 4135              		.syntax unified
 4136              		.thumb
 4137              		.thumb_func
 4139              	TIM_SelectOutputTrigger:
 4140              	.LVL406:
 4141              	.LFB92:
2203:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 4142              		.loc 1 2203 1 is_stmt 1 view -0
 4143              		.cfi_startproc
 4144              		@ args = 0, pretend = 0, frame = 0
 4145              		@ frame_needed = 0, uses_anonymous_args = 0
 4146              		@ link register save eliminated.
2205:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_TRGO_SOURCE(TIM_TRGOSource));
 4147              		.loc 1 2205 3 view .LVU1382
2206:./FWLIB/src/stm32f10x_tim.c ****   /* Reset the MMS Bits */
 4148              		.loc 1 2206 3 view .LVU1383
2208:./FWLIB/src/stm32f10x_tim.c ****   /* Select the TRGO source */
 4149              		.loc 1 2208 3 view .LVU1384
2208:./FWLIB/src/stm32f10x_tim.c ****   /* Select the TRGO source */
 4150              		.loc 1 2208 7 is_stmt 0 view .LVU1385
 4151 0000 8388     		ldrh	r3, [r0, #4]
 4152 0002 9BB2     		uxth	r3, r3
2208:./FWLIB/src/stm32f10x_tim.c ****   /* Select the TRGO source */
 4153              		.loc 1 2208 13 view .LVU1386
 4154 0004 23F07003 		bic	r3, r3, #112
 4155 0008 9BB2     		uxth	r3, r3
 4156 000a 8380     		strh	r3, [r0, #4]	@ movhi
2210:./FWLIB/src/stm32f10x_tim.c **** }
 4157              		.loc 1 2210 3 is_stmt 1 view .LVU1387
2210:./FWLIB/src/stm32f10x_tim.c **** }
 4158              		.loc 1 2210 7 is_stmt 0 view .LVU1388
 4159 000c 8388     		ldrh	r3, [r0, #4]
 4160 000e 9BB2     		uxth	r3, r3
2210:./FWLIB/src/stm32f10x_tim.c **** }
 4161              		.loc 1 2210 13 view .LVU1389
 4162 0010 0B43     		orrs	r3, r3, r1
 4163 0012 8380     		strh	r3, [r0, #4]	@ movhi
2211:./FWLIB/src/stm32f10x_tim.c **** 
 4164              		.loc 1 2211 1 view .LVU1390
 4165 0014 7047     		bx	lr
 4166              		.cfi_endproc
 4167              	.LFE92:
 4169              		.section	.text.TIM_SelectSlaveMode,"ax",%progbits
 4170              		.align	1
 4171              		.global	TIM_SelectSlaveMode
 4172              		.syntax unified
 4173              		.thumb
ARM GAS  /tmp/ccvVNijM.s 			page 144


 4174              		.thumb_func
 4176              	TIM_SelectSlaveMode:
 4177              	.LVL407:
 4178              	.LFB93:
2226:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 4179              		.loc 1 2226 1 is_stmt 1 view -0
 4180              		.cfi_startproc
 4181              		@ args = 0, pretend = 0, frame = 0
 4182              		@ frame_needed = 0, uses_anonymous_args = 0
 4183              		@ link register save eliminated.
2228:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_SLAVE_MODE(TIM_SlaveMode));
 4184              		.loc 1 2228 3 view .LVU1392
2229:./FWLIB/src/stm32f10x_tim.c ****  /* Reset the SMS Bits */
 4185              		.loc 1 2229 3 view .LVU1393
2231:./FWLIB/src/stm32f10x_tim.c ****   /* Select the Slave Mode */
 4186              		.loc 1 2231 3 view .LVU1394
2231:./FWLIB/src/stm32f10x_tim.c ****   /* Select the Slave Mode */
 4187              		.loc 1 2231 7 is_stmt 0 view .LVU1395
 4188 0000 0389     		ldrh	r3, [r0, #8]
 4189 0002 9BB2     		uxth	r3, r3
2231:./FWLIB/src/stm32f10x_tim.c ****   /* Select the Slave Mode */
 4190              		.loc 1 2231 14 view .LVU1396
 4191 0004 23F00703 		bic	r3, r3, #7
 4192 0008 9BB2     		uxth	r3, r3
 4193 000a 0381     		strh	r3, [r0, #8]	@ movhi
2233:./FWLIB/src/stm32f10x_tim.c **** }
 4194              		.loc 1 2233 3 is_stmt 1 view .LVU1397
2233:./FWLIB/src/stm32f10x_tim.c **** }
 4195              		.loc 1 2233 7 is_stmt 0 view .LVU1398
 4196 000c 0389     		ldrh	r3, [r0, #8]
 4197 000e 9BB2     		uxth	r3, r3
2233:./FWLIB/src/stm32f10x_tim.c **** }
 4198              		.loc 1 2233 14 view .LVU1399
 4199 0010 0B43     		orrs	r3, r3, r1
 4200 0012 0381     		strh	r3, [r0, #8]	@ movhi
2234:./FWLIB/src/stm32f10x_tim.c **** 
 4201              		.loc 1 2234 1 view .LVU1400
 4202 0014 7047     		bx	lr
 4203              		.cfi_endproc
 4204              	.LFE93:
 4206              		.section	.text.TIM_SelectMasterSlaveMode,"ax",%progbits
 4207              		.align	1
 4208              		.global	TIM_SelectMasterSlaveMode
 4209              		.syntax unified
 4210              		.thumb
 4211              		.thumb_func
 4213              	TIM_SelectMasterSlaveMode:
 4214              	.LVL408:
 4215              	.LFB94:
2247:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 4216              		.loc 1 2247 1 is_stmt 1 view -0
 4217              		.cfi_startproc
 4218              		@ args = 0, pretend = 0, frame = 0
 4219              		@ frame_needed = 0, uses_anonymous_args = 0
 4220              		@ link register save eliminated.
2249:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_MSM_STATE(TIM_MasterSlaveMode));
 4221              		.loc 1 2249 3 view .LVU1402
ARM GAS  /tmp/ccvVNijM.s 			page 145


2250:./FWLIB/src/stm32f10x_tim.c ****   /* Reset the MSM Bit */
 4222              		.loc 1 2250 3 view .LVU1403
2252:./FWLIB/src/stm32f10x_tim.c ****   
 4223              		.loc 1 2252 3 view .LVU1404
2252:./FWLIB/src/stm32f10x_tim.c ****   
 4224              		.loc 1 2252 7 is_stmt 0 view .LVU1405
 4225 0000 0389     		ldrh	r3, [r0, #8]
 4226 0002 9BB2     		uxth	r3, r3
2252:./FWLIB/src/stm32f10x_tim.c ****   
 4227              		.loc 1 2252 14 view .LVU1406
 4228 0004 23F08003 		bic	r3, r3, #128
 4229 0008 9BB2     		uxth	r3, r3
 4230 000a 0381     		strh	r3, [r0, #8]	@ movhi
2255:./FWLIB/src/stm32f10x_tim.c **** }
 4231              		.loc 1 2255 3 is_stmt 1 view .LVU1407
2255:./FWLIB/src/stm32f10x_tim.c **** }
 4232              		.loc 1 2255 7 is_stmt 0 view .LVU1408
 4233 000c 0389     		ldrh	r3, [r0, #8]
 4234 000e 9BB2     		uxth	r3, r3
2255:./FWLIB/src/stm32f10x_tim.c **** }
 4235              		.loc 1 2255 14 view .LVU1409
 4236 0010 0B43     		orrs	r3, r3, r1
 4237 0012 0381     		strh	r3, [r0, #8]	@ movhi
2256:./FWLIB/src/stm32f10x_tim.c **** 
 4238              		.loc 1 2256 1 view .LVU1410
 4239 0014 7047     		bx	lr
 4240              		.cfi_endproc
 4241              	.LFE94:
 4243              		.section	.text.TIM_SetCounter,"ax",%progbits
 4244              		.align	1
 4245              		.global	TIM_SetCounter
 4246              		.syntax unified
 4247              		.thumb
 4248              		.thumb_func
 4250              	TIM_SetCounter:
 4251              	.LVL409:
 4252              	.LFB95:
2265:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 4253              		.loc 1 2265 1 is_stmt 1 view -0
 4254              		.cfi_startproc
 4255              		@ args = 0, pretend = 0, frame = 0
 4256              		@ frame_needed = 0, uses_anonymous_args = 0
 4257              		@ link register save eliminated.
2267:./FWLIB/src/stm32f10x_tim.c ****   /* Set the Counter Register value */
 4258              		.loc 1 2267 3 view .LVU1412
2269:./FWLIB/src/stm32f10x_tim.c **** }
 4259              		.loc 1 2269 3 view .LVU1413
2269:./FWLIB/src/stm32f10x_tim.c **** }
 4260              		.loc 1 2269 13 is_stmt 0 view .LVU1414
 4261 0000 8184     		strh	r1, [r0, #36]	@ movhi
2270:./FWLIB/src/stm32f10x_tim.c **** 
 4262              		.loc 1 2270 1 view .LVU1415
 4263 0002 7047     		bx	lr
 4264              		.cfi_endproc
 4265              	.LFE95:
 4267              		.section	.text.TIM_SetAutoreload,"ax",%progbits
 4268              		.align	1
ARM GAS  /tmp/ccvVNijM.s 			page 146


 4269              		.global	TIM_SetAutoreload
 4270              		.syntax unified
 4271              		.thumb
 4272              		.thumb_func
 4274              	TIM_SetAutoreload:
 4275              	.LVL410:
 4276              	.LFB96:
2279:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 4277              		.loc 1 2279 1 is_stmt 1 view -0
 4278              		.cfi_startproc
 4279              		@ args = 0, pretend = 0, frame = 0
 4280              		@ frame_needed = 0, uses_anonymous_args = 0
 4281              		@ link register save eliminated.
2281:./FWLIB/src/stm32f10x_tim.c ****   /* Set the Autoreload Register value */
 4282              		.loc 1 2281 3 view .LVU1417
2283:./FWLIB/src/stm32f10x_tim.c **** }
 4283              		.loc 1 2283 3 view .LVU1418
2283:./FWLIB/src/stm32f10x_tim.c **** }
 4284              		.loc 1 2283 13 is_stmt 0 view .LVU1419
 4285 0000 8185     		strh	r1, [r0, #44]	@ movhi
2284:./FWLIB/src/stm32f10x_tim.c **** 
 4286              		.loc 1 2284 1 view .LVU1420
 4287 0002 7047     		bx	lr
 4288              		.cfi_endproc
 4289              	.LFE96:
 4291              		.section	.text.TIM_SetCompare1,"ax",%progbits
 4292              		.align	1
 4293              		.global	TIM_SetCompare1
 4294              		.syntax unified
 4295              		.thumb
 4296              		.thumb_func
 4298              	TIM_SetCompare1:
 4299              	.LVL411:
 4300              	.LFB97:
2293:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 4301              		.loc 1 2293 1 is_stmt 1 view -0
 4302              		.cfi_startproc
 4303              		@ args = 0, pretend = 0, frame = 0
 4304              		@ frame_needed = 0, uses_anonymous_args = 0
 4305              		@ link register save eliminated.
2295:./FWLIB/src/stm32f10x_tim.c ****   /* Set the Capture Compare1 Register value */
 4306              		.loc 1 2295 3 view .LVU1422
2297:./FWLIB/src/stm32f10x_tim.c **** }
 4307              		.loc 1 2297 3 view .LVU1423
2297:./FWLIB/src/stm32f10x_tim.c **** }
 4308              		.loc 1 2297 14 is_stmt 0 view .LVU1424
 4309 0000 8186     		strh	r1, [r0, #52]	@ movhi
2298:./FWLIB/src/stm32f10x_tim.c **** 
 4310              		.loc 1 2298 1 view .LVU1425
 4311 0002 7047     		bx	lr
 4312              		.cfi_endproc
 4313              	.LFE97:
 4315              		.section	.text.TIM_SetCompare2,"ax",%progbits
 4316              		.align	1
 4317              		.global	TIM_SetCompare2
 4318              		.syntax unified
 4319              		.thumb
ARM GAS  /tmp/ccvVNijM.s 			page 147


 4320              		.thumb_func
 4322              	TIM_SetCompare2:
 4323              	.LVL412:
 4324              	.LFB98:
2307:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 4325              		.loc 1 2307 1 is_stmt 1 view -0
 4326              		.cfi_startproc
 4327              		@ args = 0, pretend = 0, frame = 0
 4328              		@ frame_needed = 0, uses_anonymous_args = 0
 4329              		@ link register save eliminated.
2309:./FWLIB/src/stm32f10x_tim.c ****   /* Set the Capture Compare2 Register value */
 4330              		.loc 1 2309 3 view .LVU1427
2311:./FWLIB/src/stm32f10x_tim.c **** }
 4331              		.loc 1 2311 3 view .LVU1428
2311:./FWLIB/src/stm32f10x_tim.c **** }
 4332              		.loc 1 2311 14 is_stmt 0 view .LVU1429
 4333 0000 0187     		strh	r1, [r0, #56]	@ movhi
2312:./FWLIB/src/stm32f10x_tim.c **** 
 4334              		.loc 1 2312 1 view .LVU1430
 4335 0002 7047     		bx	lr
 4336              		.cfi_endproc
 4337              	.LFE98:
 4339              		.section	.text.TIM_SetCompare3,"ax",%progbits
 4340              		.align	1
 4341              		.global	TIM_SetCompare3
 4342              		.syntax unified
 4343              		.thumb
 4344              		.thumb_func
 4346              	TIM_SetCompare3:
 4347              	.LVL413:
 4348              	.LFB99:
2321:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 4349              		.loc 1 2321 1 is_stmt 1 view -0
 4350              		.cfi_startproc
 4351              		@ args = 0, pretend = 0, frame = 0
 4352              		@ frame_needed = 0, uses_anonymous_args = 0
 4353              		@ link register save eliminated.
2323:./FWLIB/src/stm32f10x_tim.c ****   /* Set the Capture Compare3 Register value */
 4354              		.loc 1 2323 3 view .LVU1432
2325:./FWLIB/src/stm32f10x_tim.c **** }
 4355              		.loc 1 2325 3 view .LVU1433
2325:./FWLIB/src/stm32f10x_tim.c **** }
 4356              		.loc 1 2325 14 is_stmt 0 view .LVU1434
 4357 0000 8187     		strh	r1, [r0, #60]	@ movhi
2326:./FWLIB/src/stm32f10x_tim.c **** 
 4358              		.loc 1 2326 1 view .LVU1435
 4359 0002 7047     		bx	lr
 4360              		.cfi_endproc
 4361              	.LFE99:
 4363              		.section	.text.TIM_SetCompare4,"ax",%progbits
 4364              		.align	1
 4365              		.global	TIM_SetCompare4
 4366              		.syntax unified
 4367              		.thumb
 4368              		.thumb_func
 4370              	TIM_SetCompare4:
 4371              	.LVL414:
ARM GAS  /tmp/ccvVNijM.s 			page 148


 4372              	.LFB100:
2335:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 4373              		.loc 1 2335 1 is_stmt 1 view -0
 4374              		.cfi_startproc
 4375              		@ args = 0, pretend = 0, frame = 0
 4376              		@ frame_needed = 0, uses_anonymous_args = 0
 4377              		@ link register save eliminated.
2337:./FWLIB/src/stm32f10x_tim.c ****   /* Set the Capture Compare4 Register value */
 4378              		.loc 1 2337 3 view .LVU1437
2339:./FWLIB/src/stm32f10x_tim.c **** }
 4379              		.loc 1 2339 3 view .LVU1438
2339:./FWLIB/src/stm32f10x_tim.c **** }
 4380              		.loc 1 2339 14 is_stmt 0 view .LVU1439
 4381 0000 A0F84010 		strh	r1, [r0, #64]	@ movhi
2340:./FWLIB/src/stm32f10x_tim.c **** 
 4382              		.loc 1 2340 1 view .LVU1440
 4383 0004 7047     		bx	lr
 4384              		.cfi_endproc
 4385              	.LFE100:
 4387              		.section	.text.TIM_SetIC1Prescaler,"ax",%progbits
 4388              		.align	1
 4389              		.global	TIM_SetIC1Prescaler
 4390              		.syntax unified
 4391              		.thumb
 4392              		.thumb_func
 4394              	TIM_SetIC1Prescaler:
 4395              	.LVL415:
 4396              	.LFB101:
2354:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 4397              		.loc 1 2354 1 is_stmt 1 view -0
 4398              		.cfi_startproc
 4399              		@ args = 0, pretend = 0, frame = 0
 4400              		@ frame_needed = 0, uses_anonymous_args = 0
 4401              		@ link register save eliminated.
2356:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_IC_PRESCALER(TIM_ICPSC));
 4402              		.loc 1 2356 3 view .LVU1442
2357:./FWLIB/src/stm32f10x_tim.c ****   /* Reset the IC1PSC Bits */
 4403              		.loc 1 2357 3 view .LVU1443
2359:./FWLIB/src/stm32f10x_tim.c ****   /* Set the IC1PSC value */
 4404              		.loc 1 2359 3 view .LVU1444
2359:./FWLIB/src/stm32f10x_tim.c ****   /* Set the IC1PSC value */
 4405              		.loc 1 2359 7 is_stmt 0 view .LVU1445
 4406 0000 038B     		ldrh	r3, [r0, #24]
 4407 0002 9BB2     		uxth	r3, r3
2359:./FWLIB/src/stm32f10x_tim.c ****   /* Set the IC1PSC value */
 4408              		.loc 1 2359 15 view .LVU1446
 4409 0004 23F00C03 		bic	r3, r3, #12
 4410 0008 9BB2     		uxth	r3, r3
 4411 000a 0383     		strh	r3, [r0, #24]	@ movhi
2361:./FWLIB/src/stm32f10x_tim.c **** }
 4412              		.loc 1 2361 3 is_stmt 1 view .LVU1447
2361:./FWLIB/src/stm32f10x_tim.c **** }
 4413              		.loc 1 2361 7 is_stmt 0 view .LVU1448
 4414 000c 038B     		ldrh	r3, [r0, #24]
 4415 000e 9BB2     		uxth	r3, r3
2361:./FWLIB/src/stm32f10x_tim.c **** }
 4416              		.loc 1 2361 15 view .LVU1449
ARM GAS  /tmp/ccvVNijM.s 			page 149


 4417 0010 0B43     		orrs	r3, r3, r1
 4418 0012 0383     		strh	r3, [r0, #24]	@ movhi
2362:./FWLIB/src/stm32f10x_tim.c **** 
 4419              		.loc 1 2362 1 view .LVU1450
 4420 0014 7047     		bx	lr
 4421              		.cfi_endproc
 4422              	.LFE101:
 4424              		.section	.text.TIM_SetIC2Prescaler,"ax",%progbits
 4425              		.align	1
 4426              		.global	TIM_SetIC2Prescaler
 4427              		.syntax unified
 4428              		.thumb
 4429              		.thumb_func
 4431              	TIM_SetIC2Prescaler:
 4432              	.LVL416:
 4433              	.LFB102:
2376:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 4434              		.loc 1 2376 1 is_stmt 1 view -0
 4435              		.cfi_startproc
 4436              		@ args = 0, pretend = 0, frame = 0
 4437              		@ frame_needed = 0, uses_anonymous_args = 0
 4438              		@ link register save eliminated.
2378:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_IC_PRESCALER(TIM_ICPSC));
 4439              		.loc 1 2378 3 view .LVU1452
2379:./FWLIB/src/stm32f10x_tim.c ****   /* Reset the IC2PSC Bits */
 4440              		.loc 1 2379 3 view .LVU1453
2381:./FWLIB/src/stm32f10x_tim.c ****   /* Set the IC2PSC value */
 4441              		.loc 1 2381 3 view .LVU1454
2381:./FWLIB/src/stm32f10x_tim.c ****   /* Set the IC2PSC value */
 4442              		.loc 1 2381 7 is_stmt 0 view .LVU1455
 4443 0000 038B     		ldrh	r3, [r0, #24]
 4444 0002 9BB2     		uxth	r3, r3
2381:./FWLIB/src/stm32f10x_tim.c ****   /* Set the IC2PSC value */
 4445              		.loc 1 2381 15 view .LVU1456
 4446 0004 23F44063 		bic	r3, r3, #3072
 4447 0008 9BB2     		uxth	r3, r3
 4448 000a 0383     		strh	r3, [r0, #24]	@ movhi
2383:./FWLIB/src/stm32f10x_tim.c **** }
 4449              		.loc 1 2383 3 is_stmt 1 view .LVU1457
2383:./FWLIB/src/stm32f10x_tim.c **** }
 4450              		.loc 1 2383 7 is_stmt 0 view .LVU1458
 4451 000c 038B     		ldrh	r3, [r0, #24]
 4452 000e 9BB2     		uxth	r3, r3
2383:./FWLIB/src/stm32f10x_tim.c **** }
 4453              		.loc 1 2383 18 view .LVU1459
 4454 0010 0902     		lsls	r1, r1, #8
 4455              	.LVL417:
2383:./FWLIB/src/stm32f10x_tim.c **** }
 4456              		.loc 1 2383 18 view .LVU1460
 4457 0012 89B2     		uxth	r1, r1
2383:./FWLIB/src/stm32f10x_tim.c **** }
 4458              		.loc 1 2383 15 view .LVU1461
 4459 0014 0B43     		orrs	r3, r3, r1
 4460 0016 0383     		strh	r3, [r0, #24]	@ movhi
2384:./FWLIB/src/stm32f10x_tim.c **** 
 4461              		.loc 1 2384 1 view .LVU1462
 4462 0018 7047     		bx	lr
ARM GAS  /tmp/ccvVNijM.s 			page 150


 4463              		.cfi_endproc
 4464              	.LFE102:
 4466              		.section	.text.TIM_PWMIConfig,"ax",%progbits
 4467              		.align	1
 4468              		.global	TIM_PWMIConfig
 4469              		.syntax unified
 4470              		.thumb
 4471              		.thumb_func
 4473              	TIM_PWMIConfig:
 4474              	.LVL418:
 4475              	.LFB36:
 655:./FWLIB/src/stm32f10x_tim.c ****   uint16_t icoppositepolarity = TIM_ICPolarity_Rising;
 4476              		.loc 1 655 1 is_stmt 1 view -0
 4477              		.cfi_startproc
 4478              		@ args = 0, pretend = 0, frame = 0
 4479              		@ frame_needed = 0, uses_anonymous_args = 0
 655:./FWLIB/src/stm32f10x_tim.c ****   uint16_t icoppositepolarity = TIM_ICPolarity_Rising;
 4480              		.loc 1 655 1 is_stmt 0 view .LVU1464
 4481 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 4482              	.LCFI16:
 4483              		.cfi_def_cfa_offset 24
 4484              		.cfi_offset 3, -24
 4485              		.cfi_offset 4, -20
 4486              		.cfi_offset 5, -16
 4487              		.cfi_offset 6, -12
 4488              		.cfi_offset 7, -8
 4489              		.cfi_offset 14, -4
 4490 0002 0546     		mov	r5, r0
 4491 0004 0C46     		mov	r4, r1
 656:./FWLIB/src/stm32f10x_tim.c ****   uint16_t icoppositeselection = TIM_ICSelection_DirectTI;
 4492              		.loc 1 656 3 is_stmt 1 view .LVU1465
 4493              	.LVL419:
 657:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 4494              		.loc 1 657 3 view .LVU1466
 659:./FWLIB/src/stm32f10x_tim.c ****   /* Select the Opposite Input Polarity */
 4495              		.loc 1 659 3 view .LVU1467
 661:./FWLIB/src/stm32f10x_tim.c ****   {
 4496              		.loc 1 661 3 view .LVU1468
 661:./FWLIB/src/stm32f10x_tim.c ****   {
 4497              		.loc 1 661 23 is_stmt 0 view .LVU1469
 4498 0006 4988     		ldrh	r1, [r1, #2]
 4499              	.LVL420:
 661:./FWLIB/src/stm32f10x_tim.c ****   {
 4500              		.loc 1 661 6 view .LVU1470
 4501 0008 C9B9     		cbnz	r1, .L204
 663:./FWLIB/src/stm32f10x_tim.c ****   }
 4502              		.loc 1 663 24 view .LVU1471
 4503 000a 0226     		movs	r6, #2
 4504              	.L200:
 4505              	.LVL421:
 670:./FWLIB/src/stm32f10x_tim.c ****   {
 4506              		.loc 1 670 3 is_stmt 1 view .LVU1472
 670:./FWLIB/src/stm32f10x_tim.c ****   {
 4507              		.loc 1 670 23 is_stmt 0 view .LVU1473
 4508 000c A288     		ldrh	r2, [r4, #4]
 670:./FWLIB/src/stm32f10x_tim.c ****   {
 4509              		.loc 1 670 6 view .LVU1474
ARM GAS  /tmp/ccvVNijM.s 			page 151


 4510 000e 012A     		cmp	r2, #1
 4511 0010 17D0     		beq	.L207
 676:./FWLIB/src/stm32f10x_tim.c ****   }
 4512              		.loc 1 676 25 view .LVU1475
 4513 0012 0127     		movs	r7, #1
 4514              	.L201:
 4515              	.LVL422:
 678:./FWLIB/src/stm32f10x_tim.c ****   {
 4516              		.loc 1 678 3 is_stmt 1 view .LVU1476
 678:./FWLIB/src/stm32f10x_tim.c ****   {
 4517              		.loc 1 678 23 is_stmt 0 view .LVU1477
 4518 0014 2388     		ldrh	r3, [r4]
 678:./FWLIB/src/stm32f10x_tim.c ****   {
 4519              		.loc 1 678 6 view .LVU1478
 4520 0016 B3B9     		cbnz	r3, .L202
 681:./FWLIB/src/stm32f10x_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
 4521              		.loc 1 681 5 is_stmt 1 view .LVU1479
 4522 0018 2389     		ldrh	r3, [r4, #8]
 4523 001a 2846     		mov	r0, r5
 4524              	.LVL423:
 681:./FWLIB/src/stm32f10x_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
 4525              		.loc 1 681 5 is_stmt 0 view .LVU1480
 4526 001c FFF7FEFF 		bl	TI1_Config
 4527              	.LVL424:
 684:./FWLIB/src/stm32f10x_tim.c ****     /* TI2 Configuration */
 4528              		.loc 1 684 5 is_stmt 1 view .LVU1481
 4529 0020 E188     		ldrh	r1, [r4, #6]
 4530 0022 2846     		mov	r0, r5
 4531 0024 FFF7FEFF 		bl	TIM_SetIC1Prescaler
 4532              	.LVL425:
 686:./FWLIB/src/stm32f10x_tim.c ****     /* Set the Input Capture Prescaler value */
 4533              		.loc 1 686 5 view .LVU1482
 4534 0028 2389     		ldrh	r3, [r4, #8]
 4535 002a 3A46     		mov	r2, r7
 4536 002c 3146     		mov	r1, r6
 4537 002e 2846     		mov	r0, r5
 4538 0030 FFF7FEFF 		bl	TI2_Config
 4539              	.LVL426:
 688:./FWLIB/src/stm32f10x_tim.c ****   }
 4540              		.loc 1 688 5 view .LVU1483
 4541 0034 E188     		ldrh	r1, [r4, #6]
 4542 0036 2846     		mov	r0, r5
 4543 0038 FFF7FEFF 		bl	TIM_SetIC2Prescaler
 4544              	.LVL427:
 4545              	.L199:
 702:./FWLIB/src/stm32f10x_tim.c **** 
 4546              		.loc 1 702 1 is_stmt 0 view .LVU1484
 4547 003c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 4548              	.LVL428:
 4549              	.L204:
 667:./FWLIB/src/stm32f10x_tim.c ****   }
 4550              		.loc 1 667 24 view .LVU1485
 4551 003e 0026     		movs	r6, #0
 4552 0040 E4E7     		b	.L200
 4553              	.LVL429:
 4554              	.L207:
 672:./FWLIB/src/stm32f10x_tim.c ****   }
ARM GAS  /tmp/ccvVNijM.s 			page 152


 4555              		.loc 1 672 25 view .LVU1486
 4556 0042 0227     		movs	r7, #2
 4557 0044 E6E7     		b	.L201
 4558              	.LVL430:
 4559              	.L202:
 693:./FWLIB/src/stm32f10x_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
 4560              		.loc 1 693 5 is_stmt 1 view .LVU1487
 4561 0046 2389     		ldrh	r3, [r4, #8]
 4562 0048 2846     		mov	r0, r5
 4563              	.LVL431:
 693:./FWLIB/src/stm32f10x_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
 4564              		.loc 1 693 5 is_stmt 0 view .LVU1488
 4565 004a FFF7FEFF 		bl	TI2_Config
 4566              	.LVL432:
 696:./FWLIB/src/stm32f10x_tim.c ****     /* TI1 Configuration */
 4567              		.loc 1 696 5 is_stmt 1 view .LVU1489
 4568 004e E188     		ldrh	r1, [r4, #6]
 4569 0050 2846     		mov	r0, r5
 4570 0052 FFF7FEFF 		bl	TIM_SetIC2Prescaler
 4571              	.LVL433:
 698:./FWLIB/src/stm32f10x_tim.c ****     /* Set the Input Capture Prescaler value */
 4572              		.loc 1 698 5 view .LVU1490
 4573 0056 2389     		ldrh	r3, [r4, #8]
 4574 0058 3A46     		mov	r2, r7
 4575 005a 3146     		mov	r1, r6
 4576 005c 2846     		mov	r0, r5
 4577 005e FFF7FEFF 		bl	TI1_Config
 4578              	.LVL434:
 700:./FWLIB/src/stm32f10x_tim.c ****   }
 4579              		.loc 1 700 5 view .LVU1491
 4580 0062 E188     		ldrh	r1, [r4, #6]
 4581 0064 2846     		mov	r0, r5
 4582 0066 FFF7FEFF 		bl	TIM_SetIC1Prescaler
 4583              	.LVL435:
 702:./FWLIB/src/stm32f10x_tim.c **** 
 4584              		.loc 1 702 1 is_stmt 0 view .LVU1492
 4585 006a E7E7     		b	.L199
 4586              		.cfi_endproc
 4587              	.LFE36:
 4589              		.section	.text.TIM_SetIC3Prescaler,"ax",%progbits
 4590              		.align	1
 4591              		.global	TIM_SetIC3Prescaler
 4592              		.syntax unified
 4593              		.thumb
 4594              		.thumb_func
 4596              	TIM_SetIC3Prescaler:
 4597              	.LVL436:
 4598              	.LFB103:
2398:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 4599              		.loc 1 2398 1 is_stmt 1 view -0
 4600              		.cfi_startproc
 4601              		@ args = 0, pretend = 0, frame = 0
 4602              		@ frame_needed = 0, uses_anonymous_args = 0
 4603              		@ link register save eliminated.
2400:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_IC_PRESCALER(TIM_ICPSC));
 4604              		.loc 1 2400 3 view .LVU1494
2401:./FWLIB/src/stm32f10x_tim.c ****   /* Reset the IC3PSC Bits */
ARM GAS  /tmp/ccvVNijM.s 			page 153


 4605              		.loc 1 2401 3 view .LVU1495
2403:./FWLIB/src/stm32f10x_tim.c ****   /* Set the IC3PSC value */
 4606              		.loc 1 2403 3 view .LVU1496
2403:./FWLIB/src/stm32f10x_tim.c ****   /* Set the IC3PSC value */
 4607              		.loc 1 2403 7 is_stmt 0 view .LVU1497
 4608 0000 838B     		ldrh	r3, [r0, #28]
 4609 0002 9BB2     		uxth	r3, r3
2403:./FWLIB/src/stm32f10x_tim.c ****   /* Set the IC3PSC value */
 4610              		.loc 1 2403 15 view .LVU1498
 4611 0004 23F00C03 		bic	r3, r3, #12
 4612 0008 9BB2     		uxth	r3, r3
 4613 000a 8383     		strh	r3, [r0, #28]	@ movhi
2405:./FWLIB/src/stm32f10x_tim.c **** }
 4614              		.loc 1 2405 3 is_stmt 1 view .LVU1499
2405:./FWLIB/src/stm32f10x_tim.c **** }
 4615              		.loc 1 2405 7 is_stmt 0 view .LVU1500
 4616 000c 838B     		ldrh	r3, [r0, #28]
 4617 000e 9BB2     		uxth	r3, r3
2405:./FWLIB/src/stm32f10x_tim.c **** }
 4618              		.loc 1 2405 15 view .LVU1501
 4619 0010 0B43     		orrs	r3, r3, r1
 4620 0012 8383     		strh	r3, [r0, #28]	@ movhi
2406:./FWLIB/src/stm32f10x_tim.c **** 
 4621              		.loc 1 2406 1 view .LVU1502
 4622 0014 7047     		bx	lr
 4623              		.cfi_endproc
 4624              	.LFE103:
 4626              		.section	.text.TIM_SetIC4Prescaler,"ax",%progbits
 4627              		.align	1
 4628              		.global	TIM_SetIC4Prescaler
 4629              		.syntax unified
 4630              		.thumb
 4631              		.thumb_func
 4633              	TIM_SetIC4Prescaler:
 4634              	.LVL437:
 4635              	.LFB104:
2420:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 4636              		.loc 1 2420 1 is_stmt 1 view -0
 4637              		.cfi_startproc
 4638              		@ args = 0, pretend = 0, frame = 0
 4639              		@ frame_needed = 0, uses_anonymous_args = 0
 4640              		@ link register save eliminated.
2422:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_IC_PRESCALER(TIM_ICPSC));
 4641              		.loc 1 2422 3 view .LVU1504
2423:./FWLIB/src/stm32f10x_tim.c ****   /* Reset the IC4PSC Bits */
 4642              		.loc 1 2423 3 view .LVU1505
2425:./FWLIB/src/stm32f10x_tim.c ****   /* Set the IC4PSC value */
 4643              		.loc 1 2425 3 view .LVU1506
2425:./FWLIB/src/stm32f10x_tim.c ****   /* Set the IC4PSC value */
 4644              		.loc 1 2425 7 is_stmt 0 view .LVU1507
 4645 0000 838B     		ldrh	r3, [r0, #28]
 4646 0002 9BB2     		uxth	r3, r3
2425:./FWLIB/src/stm32f10x_tim.c ****   /* Set the IC4PSC value */
 4647              		.loc 1 2425 15 view .LVU1508
 4648 0004 23F44063 		bic	r3, r3, #3072
 4649 0008 9BB2     		uxth	r3, r3
 4650 000a 8383     		strh	r3, [r0, #28]	@ movhi
ARM GAS  /tmp/ccvVNijM.s 			page 154


2427:./FWLIB/src/stm32f10x_tim.c **** }
 4651              		.loc 1 2427 3 is_stmt 1 view .LVU1509
2427:./FWLIB/src/stm32f10x_tim.c **** }
 4652              		.loc 1 2427 7 is_stmt 0 view .LVU1510
 4653 000c 838B     		ldrh	r3, [r0, #28]
 4654 000e 9BB2     		uxth	r3, r3
2427:./FWLIB/src/stm32f10x_tim.c **** }
 4655              		.loc 1 2427 18 view .LVU1511
 4656 0010 0902     		lsls	r1, r1, #8
 4657              	.LVL438:
2427:./FWLIB/src/stm32f10x_tim.c **** }
 4658              		.loc 1 2427 18 view .LVU1512
 4659 0012 89B2     		uxth	r1, r1
2427:./FWLIB/src/stm32f10x_tim.c **** }
 4660              		.loc 1 2427 15 view .LVU1513
 4661 0014 0B43     		orrs	r3, r3, r1
 4662 0016 8383     		strh	r3, [r0, #28]	@ movhi
2428:./FWLIB/src/stm32f10x_tim.c **** 
 4663              		.loc 1 2428 1 view .LVU1514
 4664 0018 7047     		bx	lr
 4665              		.cfi_endproc
 4666              	.LFE104:
 4668              		.section	.text.TIM_ICInit,"ax",%progbits
 4669              		.align	1
 4670              		.global	TIM_ICInit
 4671              		.syntax unified
 4672              		.thumb
 4673              		.thumb_func
 4675              	TIM_ICInit:
 4676              	.LVL439:
 4677              	.LFB35:
 588:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 4678              		.loc 1 588 1 is_stmt 1 view -0
 4679              		.cfi_startproc
 4680              		@ args = 0, pretend = 0, frame = 0
 4681              		@ frame_needed = 0, uses_anonymous_args = 0
 588:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 4682              		.loc 1 588 1 is_stmt 0 view .LVU1516
 4683 0000 38B5     		push	{r3, r4, r5, lr}
 4684              	.LCFI17:
 4685              		.cfi_def_cfa_offset 16
 4686              		.cfi_offset 3, -16
 4687              		.cfi_offset 4, -12
 4688              		.cfi_offset 5, -8
 4689              		.cfi_offset 14, -4
 4690 0002 0546     		mov	r5, r0
 4691 0004 0C46     		mov	r4, r1
 590:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_IC_SELECTION(TIM_ICInitStruct->TIM_ICSelection));
 4692              		.loc 1 590 3 is_stmt 1 view .LVU1517
 591:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_IC_PRESCALER(TIM_ICInitStruct->TIM_ICPrescaler));
 4693              		.loc 1 591 3 view .LVU1518
 592:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_IC_FILTER(TIM_ICInitStruct->TIM_ICFilter));
 4694              		.loc 1 592 3 view .LVU1519
 593:./FWLIB/src/stm32f10x_tim.c ****   
 4695              		.loc 1 593 3 view .LVU1520
 595:./FWLIB/src/stm32f10x_tim.c ****      (TIMx == TIM4) ||(TIMx == TIM5))
 4696              		.loc 1 595 3 view .LVU1521
ARM GAS  /tmp/ccvVNijM.s 			page 155


 598:./FWLIB/src/stm32f10x_tim.c ****   }
 4697              		.loc 1 598 5 view .LVU1522
 602:./FWLIB/src/stm32f10x_tim.c ****   }
 4698              		.loc 1 602 5 view .LVU1523
 604:./FWLIB/src/stm32f10x_tim.c ****   {
 4699              		.loc 1 604 3 view .LVU1524
 604:./FWLIB/src/stm32f10x_tim.c ****   {
 4700              		.loc 1 604 23 is_stmt 0 view .LVU1525
 4701 0006 0B88     		ldrh	r3, [r1]
 604:./FWLIB/src/stm32f10x_tim.c ****   {
 4702              		.loc 1 604 6 view .LVU1526
 4703 0008 6BB1     		cbz	r3, .L216
 614:./FWLIB/src/stm32f10x_tim.c ****   {
 4704              		.loc 1 614 8 is_stmt 1 view .LVU1527
 614:./FWLIB/src/stm32f10x_tim.c ****   {
 4705              		.loc 1 614 11 is_stmt 0 view .LVU1528
 4706 000a 042B     		cmp	r3, #4
 4707 000c 15D0     		beq	.L217
 624:./FWLIB/src/stm32f10x_tim.c ****   {
 4708              		.loc 1 624 8 is_stmt 1 view .LVU1529
 624:./FWLIB/src/stm32f10x_tim.c ****   {
 4709              		.loc 1 624 11 is_stmt 0 view .LVU1530
 4710 000e 082B     		cmp	r3, #8
 4711 0010 1DD0     		beq	.L218
 636:./FWLIB/src/stm32f10x_tim.c ****     /* TI4 Configuration */
 4712              		.loc 1 636 5 is_stmt 1 view .LVU1531
 638:./FWLIB/src/stm32f10x_tim.c ****                TIM_ICInitStruct->TIM_ICSelection,
 4713              		.loc 1 638 5 view .LVU1532
 4714 0012 0B89     		ldrh	r3, [r1, #8]
 4715 0014 8A88     		ldrh	r2, [r1, #4]
 4716 0016 4988     		ldrh	r1, [r1, #2]
 4717              	.LVL440:
 638:./FWLIB/src/stm32f10x_tim.c ****                TIM_ICInitStruct->TIM_ICSelection,
 4718              		.loc 1 638 5 is_stmt 0 view .LVU1533
 4719 0018 FFF7FEFF 		bl	TI4_Config
 4720              	.LVL441:
 642:./FWLIB/src/stm32f10x_tim.c ****   }
 4721              		.loc 1 642 5 is_stmt 1 view .LVU1534
 4722 001c E188     		ldrh	r1, [r4, #6]
 4723 001e 2846     		mov	r0, r5
 4724 0020 FFF7FEFF 		bl	TIM_SetIC4Prescaler
 4725              	.LVL442:
 4726              	.L210:
 644:./FWLIB/src/stm32f10x_tim.c **** 
 4727              		.loc 1 644 1 is_stmt 0 view .LVU1535
 4728 0024 38BD     		pop	{r3, r4, r5, pc}
 4729              	.LVL443:
 4730              	.L216:
 606:./FWLIB/src/stm32f10x_tim.c ****     /* TI1 Configuration */
 4731              		.loc 1 606 5 is_stmt 1 view .LVU1536
 608:./FWLIB/src/stm32f10x_tim.c ****                TIM_ICInitStruct->TIM_ICSelection,
 4732              		.loc 1 608 5 view .LVU1537
 4733 0026 0B89     		ldrh	r3, [r1, #8]
 4734 0028 8A88     		ldrh	r2, [r1, #4]
 4735 002a 4988     		ldrh	r1, [r1, #2]
 4736              	.LVL444:
 608:./FWLIB/src/stm32f10x_tim.c ****                TIM_ICInitStruct->TIM_ICSelection,
ARM GAS  /tmp/ccvVNijM.s 			page 156


 4737              		.loc 1 608 5 is_stmt 0 view .LVU1538
 4738 002c FFF7FEFF 		bl	TI1_Config
 4739              	.LVL445:
 612:./FWLIB/src/stm32f10x_tim.c ****   }
 4740              		.loc 1 612 5 is_stmt 1 view .LVU1539
 4741 0030 E188     		ldrh	r1, [r4, #6]
 4742 0032 2846     		mov	r0, r5
 4743 0034 FFF7FEFF 		bl	TIM_SetIC1Prescaler
 4744              	.LVL446:
 4745 0038 F4E7     		b	.L210
 4746              	.LVL447:
 4747              	.L217:
 616:./FWLIB/src/stm32f10x_tim.c ****     /* TI2 Configuration */
 4748              		.loc 1 616 5 view .LVU1540
 618:./FWLIB/src/stm32f10x_tim.c ****                TIM_ICInitStruct->TIM_ICSelection,
 4749              		.loc 1 618 5 view .LVU1541
 4750 003a 0B89     		ldrh	r3, [r1, #8]
 4751 003c 8A88     		ldrh	r2, [r1, #4]
 4752 003e 4988     		ldrh	r1, [r1, #2]
 4753              	.LVL448:
 618:./FWLIB/src/stm32f10x_tim.c ****                TIM_ICInitStruct->TIM_ICSelection,
 4754              		.loc 1 618 5 is_stmt 0 view .LVU1542
 4755 0040 FFF7FEFF 		bl	TI2_Config
 4756              	.LVL449:
 622:./FWLIB/src/stm32f10x_tim.c ****   }
 4757              		.loc 1 622 5 is_stmt 1 view .LVU1543
 4758 0044 E188     		ldrh	r1, [r4, #6]
 4759 0046 2846     		mov	r0, r5
 4760 0048 FFF7FEFF 		bl	TIM_SetIC2Prescaler
 4761              	.LVL450:
 4762 004c EAE7     		b	.L210
 4763              	.LVL451:
 4764              	.L218:
 626:./FWLIB/src/stm32f10x_tim.c ****     /* TI3 Configuration */
 4765              		.loc 1 626 5 view .LVU1544
 628:./FWLIB/src/stm32f10x_tim.c ****                TIM_ICInitStruct->TIM_ICSelection,
 4766              		.loc 1 628 5 view .LVU1545
 4767 004e 0B89     		ldrh	r3, [r1, #8]
 4768 0050 8A88     		ldrh	r2, [r1, #4]
 4769 0052 4988     		ldrh	r1, [r1, #2]
 4770              	.LVL452:
 628:./FWLIB/src/stm32f10x_tim.c ****                TIM_ICInitStruct->TIM_ICSelection,
 4771              		.loc 1 628 5 is_stmt 0 view .LVU1546
 4772 0054 FFF7FEFF 		bl	TI3_Config
 4773              	.LVL453:
 632:./FWLIB/src/stm32f10x_tim.c ****   }
 4774              		.loc 1 632 5 is_stmt 1 view .LVU1547
 4775 0058 E188     		ldrh	r1, [r4, #6]
 4776 005a 2846     		mov	r0, r5
 4777 005c FFF7FEFF 		bl	TIM_SetIC3Prescaler
 4778              	.LVL454:
 4779 0060 E0E7     		b	.L210
 4780              		.cfi_endproc
 4781              	.LFE35:
 4783              		.section	.text.TIM_SetClockDivision,"ax",%progbits
 4784              		.align	1
 4785              		.global	TIM_SetClockDivision
ARM GAS  /tmp/ccvVNijM.s 			page 157


 4786              		.syntax unified
 4787              		.thumb
 4788              		.thumb_func
 4790              	TIM_SetClockDivision:
 4791              	.LVL455:
 4792              	.LFB105:
2442:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 4793              		.loc 1 2442 1 view -0
 4794              		.cfi_startproc
 4795              		@ args = 0, pretend = 0, frame = 0
 4796              		@ frame_needed = 0, uses_anonymous_args = 0
 4797              		@ link register save eliminated.
2444:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_CKD_DIV(TIM_CKD));
 4798              		.loc 1 2444 3 view .LVU1549
2445:./FWLIB/src/stm32f10x_tim.c ****   /* Reset the CKD Bits */
 4799              		.loc 1 2445 3 view .LVU1550
2447:./FWLIB/src/stm32f10x_tim.c ****   /* Set the CKD value */
 4800              		.loc 1 2447 3 view .LVU1551
2447:./FWLIB/src/stm32f10x_tim.c ****   /* Set the CKD value */
 4801              		.loc 1 2447 7 is_stmt 0 view .LVU1552
 4802 0000 0388     		ldrh	r3, [r0]
 4803 0002 9BB2     		uxth	r3, r3
2447:./FWLIB/src/stm32f10x_tim.c ****   /* Set the CKD value */
 4804              		.loc 1 2447 13 view .LVU1553
 4805 0004 23F44073 		bic	r3, r3, #768
 4806 0008 9BB2     		uxth	r3, r3
 4807 000a 0380     		strh	r3, [r0]	@ movhi
2449:./FWLIB/src/stm32f10x_tim.c **** }
 4808              		.loc 1 2449 3 is_stmt 1 view .LVU1554
2449:./FWLIB/src/stm32f10x_tim.c **** }
 4809              		.loc 1 2449 7 is_stmt 0 view .LVU1555
 4810 000c 0388     		ldrh	r3, [r0]
 4811 000e 9BB2     		uxth	r3, r3
2449:./FWLIB/src/stm32f10x_tim.c **** }
 4812              		.loc 1 2449 13 view .LVU1556
 4813 0010 0B43     		orrs	r3, r3, r1
 4814 0012 0380     		strh	r3, [r0]	@ movhi
2450:./FWLIB/src/stm32f10x_tim.c **** 
 4815              		.loc 1 2450 1 view .LVU1557
 4816 0014 7047     		bx	lr
 4817              		.cfi_endproc
 4818              	.LFE105:
 4820              		.section	.text.TIM_GetCapture1,"ax",%progbits
 4821              		.align	1
 4822              		.global	TIM_GetCapture1
 4823              		.syntax unified
 4824              		.thumb
 4825              		.thumb_func
 4827              	TIM_GetCapture1:
 4828              	.LVL456:
 4829              	.LFB106:
2458:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 4830              		.loc 1 2458 1 is_stmt 1 view -0
 4831              		.cfi_startproc
 4832              		@ args = 0, pretend = 0, frame = 0
 4833              		@ frame_needed = 0, uses_anonymous_args = 0
 4834              		@ link register save eliminated.
ARM GAS  /tmp/ccvVNijM.s 			page 158


2460:./FWLIB/src/stm32f10x_tim.c ****   /* Get the Capture 1 Register value */
 4835              		.loc 1 2460 3 view .LVU1559
2462:./FWLIB/src/stm32f10x_tim.c **** }
 4836              		.loc 1 2462 3 view .LVU1560
2462:./FWLIB/src/stm32f10x_tim.c **** }
 4837              		.loc 1 2462 14 is_stmt 0 view .LVU1561
 4838 0000 808E     		ldrh	r0, [r0, #52]
 4839              	.LVL457:
2463:./FWLIB/src/stm32f10x_tim.c **** 
 4840              		.loc 1 2463 1 view .LVU1562
 4841 0002 80B2     		uxth	r0, r0
 4842 0004 7047     		bx	lr
 4843              		.cfi_endproc
 4844              	.LFE106:
 4846              		.section	.text.TIM_GetCapture2,"ax",%progbits
 4847              		.align	1
 4848              		.global	TIM_GetCapture2
 4849              		.syntax unified
 4850              		.thumb
 4851              		.thumb_func
 4853              	TIM_GetCapture2:
 4854              	.LVL458:
 4855              	.LFB107:
2471:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 4856              		.loc 1 2471 1 is_stmt 1 view -0
 4857              		.cfi_startproc
 4858              		@ args = 0, pretend = 0, frame = 0
 4859              		@ frame_needed = 0, uses_anonymous_args = 0
 4860              		@ link register save eliminated.
2473:./FWLIB/src/stm32f10x_tim.c ****   /* Get the Capture 2 Register value */
 4861              		.loc 1 2473 3 view .LVU1564
2475:./FWLIB/src/stm32f10x_tim.c **** }
 4862              		.loc 1 2475 3 view .LVU1565
2475:./FWLIB/src/stm32f10x_tim.c **** }
 4863              		.loc 1 2475 14 is_stmt 0 view .LVU1566
 4864 0000 008F     		ldrh	r0, [r0, #56]
 4865              	.LVL459:
2476:./FWLIB/src/stm32f10x_tim.c **** 
 4866              		.loc 1 2476 1 view .LVU1567
 4867 0002 80B2     		uxth	r0, r0
 4868 0004 7047     		bx	lr
 4869              		.cfi_endproc
 4870              	.LFE107:
 4872              		.section	.text.TIM_GetCapture3,"ax",%progbits
 4873              		.align	1
 4874              		.global	TIM_GetCapture3
 4875              		.syntax unified
 4876              		.thumb
 4877              		.thumb_func
 4879              	TIM_GetCapture3:
 4880              	.LVL460:
 4881              	.LFB108:
2484:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 4882              		.loc 1 2484 1 is_stmt 1 view -0
 4883              		.cfi_startproc
 4884              		@ args = 0, pretend = 0, frame = 0
 4885              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccvVNijM.s 			page 159


 4886              		@ link register save eliminated.
2486:./FWLIB/src/stm32f10x_tim.c ****   /* Get the Capture 3 Register value */
 4887              		.loc 1 2486 3 view .LVU1569
2488:./FWLIB/src/stm32f10x_tim.c **** }
 4888              		.loc 1 2488 3 view .LVU1570
2488:./FWLIB/src/stm32f10x_tim.c **** }
 4889              		.loc 1 2488 14 is_stmt 0 view .LVU1571
 4890 0000 808F     		ldrh	r0, [r0, #60]
 4891              	.LVL461:
2489:./FWLIB/src/stm32f10x_tim.c **** 
 4892              		.loc 1 2489 1 view .LVU1572
 4893 0002 80B2     		uxth	r0, r0
 4894 0004 7047     		bx	lr
 4895              		.cfi_endproc
 4896              	.LFE108:
 4898              		.section	.text.TIM_GetCapture4,"ax",%progbits
 4899              		.align	1
 4900              		.global	TIM_GetCapture4
 4901              		.syntax unified
 4902              		.thumb
 4903              		.thumb_func
 4905              	TIM_GetCapture4:
 4906              	.LVL462:
 4907              	.LFB109:
2497:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 4908              		.loc 1 2497 1 is_stmt 1 view -0
 4909              		.cfi_startproc
 4910              		@ args = 0, pretend = 0, frame = 0
 4911              		@ frame_needed = 0, uses_anonymous_args = 0
 4912              		@ link register save eliminated.
2499:./FWLIB/src/stm32f10x_tim.c ****   /* Get the Capture 4 Register value */
 4913              		.loc 1 2499 3 view .LVU1574
2501:./FWLIB/src/stm32f10x_tim.c **** }
 4914              		.loc 1 2501 3 view .LVU1575
2501:./FWLIB/src/stm32f10x_tim.c **** }
 4915              		.loc 1 2501 14 is_stmt 0 view .LVU1576
 4916 0000 B0F84000 		ldrh	r0, [r0, #64]
 4917              	.LVL463:
2502:./FWLIB/src/stm32f10x_tim.c **** 
 4918              		.loc 1 2502 1 view .LVU1577
 4919 0004 80B2     		uxth	r0, r0
 4920 0006 7047     		bx	lr
 4921              		.cfi_endproc
 4922              	.LFE109:
 4924              		.section	.text.TIM_GetCounter,"ax",%progbits
 4925              		.align	1
 4926              		.global	TIM_GetCounter
 4927              		.syntax unified
 4928              		.thumb
 4929              		.thumb_func
 4931              	TIM_GetCounter:
 4932              	.LVL464:
 4933              	.LFB110:
2510:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 4934              		.loc 1 2510 1 is_stmt 1 view -0
 4935              		.cfi_startproc
 4936              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccvVNijM.s 			page 160


 4937              		@ frame_needed = 0, uses_anonymous_args = 0
 4938              		@ link register save eliminated.
2512:./FWLIB/src/stm32f10x_tim.c ****   /* Get the Counter Register value */
 4939              		.loc 1 2512 3 view .LVU1579
2514:./FWLIB/src/stm32f10x_tim.c **** }
 4940              		.loc 1 2514 3 view .LVU1580
2514:./FWLIB/src/stm32f10x_tim.c **** }
 4941              		.loc 1 2514 14 is_stmt 0 view .LVU1581
 4942 0000 808C     		ldrh	r0, [r0, #36]
 4943              	.LVL465:
2515:./FWLIB/src/stm32f10x_tim.c **** 
 4944              		.loc 1 2515 1 view .LVU1582
 4945 0002 80B2     		uxth	r0, r0
 4946 0004 7047     		bx	lr
 4947              		.cfi_endproc
 4948              	.LFE110:
 4950              		.section	.text.TIM_GetPrescaler,"ax",%progbits
 4951              		.align	1
 4952              		.global	TIM_GetPrescaler
 4953              		.syntax unified
 4954              		.thumb
 4955              		.thumb_func
 4957              	TIM_GetPrescaler:
 4958              	.LVL466:
 4959              	.LFB111:
2523:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 4960              		.loc 1 2523 1 is_stmt 1 view -0
 4961              		.cfi_startproc
 4962              		@ args = 0, pretend = 0, frame = 0
 4963              		@ frame_needed = 0, uses_anonymous_args = 0
 4964              		@ link register save eliminated.
2525:./FWLIB/src/stm32f10x_tim.c ****   /* Get the Prescaler Register value */
 4965              		.loc 1 2525 3 view .LVU1584
2527:./FWLIB/src/stm32f10x_tim.c **** }
 4966              		.loc 1 2527 3 view .LVU1585
2527:./FWLIB/src/stm32f10x_tim.c **** }
 4967              		.loc 1 2527 14 is_stmt 0 view .LVU1586
 4968 0000 008D     		ldrh	r0, [r0, #40]
 4969              	.LVL467:
2528:./FWLIB/src/stm32f10x_tim.c **** 
 4970              		.loc 1 2528 1 view .LVU1587
 4971 0002 80B2     		uxth	r0, r0
 4972 0004 7047     		bx	lr
 4973              		.cfi_endproc
 4974              	.LFE111:
 4976              		.section	.text.TIM_GetFlagStatus,"ax",%progbits
 4977              		.align	1
 4978              		.global	TIM_GetFlagStatus
 4979              		.syntax unified
 4980              		.thumb
 4981              		.thumb_func
 4983              	TIM_GetFlagStatus:
 4984              	.LVL468:
 4985              	.LFB112:
2557:./FWLIB/src/stm32f10x_tim.c ****   ITStatus bitstatus = RESET;  
 4986              		.loc 1 2557 1 is_stmt 1 view -0
 4987              		.cfi_startproc
ARM GAS  /tmp/ccvVNijM.s 			page 161


 4988              		@ args = 0, pretend = 0, frame = 0
 4989              		@ frame_needed = 0, uses_anonymous_args = 0
 4990              		@ link register save eliminated.
2558:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 4991              		.loc 1 2558 3 view .LVU1589
2560:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_GET_FLAG(TIM_FLAG));
 4992              		.loc 1 2560 3 view .LVU1590
2561:./FWLIB/src/stm32f10x_tim.c ****   
 4993              		.loc 1 2561 3 view .LVU1591
2563:./FWLIB/src/stm32f10x_tim.c ****   {
 4994              		.loc 1 2563 3 view .LVU1592
2563:./FWLIB/src/stm32f10x_tim.c ****   {
 4995              		.loc 1 2563 12 is_stmt 0 view .LVU1593
 4996 0000 038A     		ldrh	r3, [r0, #16]
2563:./FWLIB/src/stm32f10x_tim.c ****   {
 4997              		.loc 1 2563 6 view .LVU1594
 4998 0002 1942     		tst	r1, r3
 4999 0004 01D0     		beq	.L228
2565:./FWLIB/src/stm32f10x_tim.c ****   }
 5000              		.loc 1 2565 15 view .LVU1595
 5001 0006 0120     		movs	r0, #1
 5002              	.LVL469:
2565:./FWLIB/src/stm32f10x_tim.c ****   }
 5003              		.loc 1 2565 15 view .LVU1596
 5004 0008 7047     		bx	lr
 5005              	.LVL470:
 5006              	.L228:
2569:./FWLIB/src/stm32f10x_tim.c ****   }
 5007              		.loc 1 2569 15 view .LVU1597
 5008 000a 0020     		movs	r0, #0
 5009              	.LVL471:
2571:./FWLIB/src/stm32f10x_tim.c **** }
 5010              		.loc 1 2571 3 is_stmt 1 view .LVU1598
2572:./FWLIB/src/stm32f10x_tim.c **** 
 5011              		.loc 1 2572 1 is_stmt 0 view .LVU1599
 5012 000c 7047     		bx	lr
 5013              		.cfi_endproc
 5014              	.LFE112:
 5016              		.section	.text.TIM_ClearFlag,"ax",%progbits
 5017              		.align	1
 5018              		.global	TIM_ClearFlag
 5019              		.syntax unified
 5020              		.thumb
 5021              		.thumb_func
 5023              	TIM_ClearFlag:
 5024              	.LVL472:
 5025              	.LFB113:
2601:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 5026              		.loc 1 2601 1 is_stmt 1 view -0
 5027              		.cfi_startproc
 5028              		@ args = 0, pretend = 0, frame = 0
 5029              		@ frame_needed = 0, uses_anonymous_args = 0
 5030              		@ link register save eliminated.
2603:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_CLEAR_FLAG(TIM_FLAG));
 5031              		.loc 1 2603 3 view .LVU1601
2604:./FWLIB/src/stm32f10x_tim.c ****    
 5032              		.loc 1 2604 3 view .LVU1602
ARM GAS  /tmp/ccvVNijM.s 			page 162


2607:./FWLIB/src/stm32f10x_tim.c **** }
 5033              		.loc 1 2607 3 view .LVU1603
2607:./FWLIB/src/stm32f10x_tim.c **** }
 5034              		.loc 1 2607 14 is_stmt 0 view .LVU1604
 5035 0000 C943     		mvns	r1, r1
 5036              	.LVL473:
2607:./FWLIB/src/stm32f10x_tim.c **** }
 5037              		.loc 1 2607 14 view .LVU1605
 5038 0002 89B2     		uxth	r1, r1
 5039              	.LVL474:
2607:./FWLIB/src/stm32f10x_tim.c **** }
 5040              		.loc 1 2607 12 view .LVU1606
 5041 0004 0182     		strh	r1, [r0, #16]	@ movhi
2608:./FWLIB/src/stm32f10x_tim.c **** 
 5042              		.loc 1 2608 1 view .LVU1607
 5043 0006 7047     		bx	lr
 5044              		.cfi_endproc
 5045              	.LFE113:
 5047              		.section	.text.TIM_GetITStatus,"ax",%progbits
 5048              		.align	1
 5049              		.global	TIM_GetITStatus
 5050              		.syntax unified
 5051              		.thumb
 5052              		.thumb_func
 5054              	TIM_GetITStatus:
 5055              	.LVL475:
 5056              	.LFB114:
2633:./FWLIB/src/stm32f10x_tim.c ****   ITStatus bitstatus = RESET;  
 5057              		.loc 1 2633 1 is_stmt 1 view -0
 5058              		.cfi_startproc
 5059              		@ args = 0, pretend = 0, frame = 0
 5060              		@ frame_needed = 0, uses_anonymous_args = 0
 5061              		@ link register save eliminated.
2634:./FWLIB/src/stm32f10x_tim.c ****   uint16_t itstatus = 0x0, itenable = 0x0;
 5062              		.loc 1 2634 3 view .LVU1609
2635:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 5063              		.loc 1 2635 3 view .LVU1610
2637:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_GET_IT(TIM_IT));
 5064              		.loc 1 2637 3 view .LVU1611
2638:./FWLIB/src/stm32f10x_tim.c ****    
 5065              		.loc 1 2638 3 view .LVU1612
2640:./FWLIB/src/stm32f10x_tim.c ****   
 5066              		.loc 1 2640 3 view .LVU1613
2640:./FWLIB/src/stm32f10x_tim.c ****   
 5067              		.loc 1 2640 18 is_stmt 0 view .LVU1614
 5068 0000 028A     		ldrh	r2, [r0, #16]
 5069              	.LVL476:
2642:./FWLIB/src/stm32f10x_tim.c ****   if ((itstatus != (uint16_t)RESET) && (itenable != (uint16_t)RESET))
 5070              		.loc 1 2642 3 is_stmt 1 view .LVU1615
2642:./FWLIB/src/stm32f10x_tim.c ****   if ((itstatus != (uint16_t)RESET) && (itenable != (uint16_t)RESET))
 5071              		.loc 1 2642 18 is_stmt 0 view .LVU1616
 5072 0002 8389     		ldrh	r3, [r0, #12]
2642:./FWLIB/src/stm32f10x_tim.c ****   if ((itstatus != (uint16_t)RESET) && (itenable != (uint16_t)RESET))
 5073              		.loc 1 2642 12 view .LVU1617
 5074 0004 0B40     		ands	r3, r3, r1
 5075              	.LVL477:
2643:./FWLIB/src/stm32f10x_tim.c ****   {
ARM GAS  /tmp/ccvVNijM.s 			page 163


 5076              		.loc 1 2643 3 is_stmt 1 view .LVU1618
2643:./FWLIB/src/stm32f10x_tim.c ****   {
 5077              		.loc 1 2643 6 is_stmt 0 view .LVU1619
 5078 0006 1142     		tst	r1, r2
 5079 0008 02D0     		beq	.L232
2643:./FWLIB/src/stm32f10x_tim.c ****   {
 5080              		.loc 1 2643 37 discriminator 1 view .LVU1620
 5081 000a 1BB9     		cbnz	r3, .L233
2649:./FWLIB/src/stm32f10x_tim.c ****   }
 5082              		.loc 1 2649 15 view .LVU1621
 5083 000c 0020     		movs	r0, #0
 5084              	.LVL478:
2649:./FWLIB/src/stm32f10x_tim.c ****   }
 5085              		.loc 1 2649 15 view .LVU1622
 5086 000e 7047     		bx	lr
 5087              	.LVL479:
 5088              	.L232:
2649:./FWLIB/src/stm32f10x_tim.c ****   }
 5089              		.loc 1 2649 15 view .LVU1623
 5090 0010 0020     		movs	r0, #0
 5091              	.LVL480:
2649:./FWLIB/src/stm32f10x_tim.c ****   }
 5092              		.loc 1 2649 15 view .LVU1624
 5093 0012 7047     		bx	lr
 5094              	.LVL481:
 5095              	.L233:
2645:./FWLIB/src/stm32f10x_tim.c ****   }
 5096              		.loc 1 2645 15 view .LVU1625
 5097 0014 0120     		movs	r0, #1
 5098              	.LVL482:
2651:./FWLIB/src/stm32f10x_tim.c **** }
 5099              		.loc 1 2651 3 is_stmt 1 view .LVU1626
2652:./FWLIB/src/stm32f10x_tim.c **** 
 5100              		.loc 1 2652 1 is_stmt 0 view .LVU1627
 5101 0016 7047     		bx	lr
 5102              		.cfi_endproc
 5103              	.LFE114:
 5105              		.section	.text.TIM_ClearITPendingBit,"ax",%progbits
 5106              		.align	1
 5107              		.global	TIM_ClearITPendingBit
 5108              		.syntax unified
 5109              		.thumb
 5110              		.thumb_func
 5112              	TIM_ClearITPendingBit:
 5113              	.LVL483:
 5114              	.LFB115:
2677:./FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 5115              		.loc 1 2677 1 is_stmt 1 view -0
 5116              		.cfi_startproc
 5117              		@ args = 0, pretend = 0, frame = 0
 5118              		@ frame_needed = 0, uses_anonymous_args = 0
 5119              		@ link register save eliminated.
2679:./FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_IT(TIM_IT));
 5120              		.loc 1 2679 3 view .LVU1629
2680:./FWLIB/src/stm32f10x_tim.c ****   /* Clear the IT pending Bit */
 5121              		.loc 1 2680 3 view .LVU1630
2682:./FWLIB/src/stm32f10x_tim.c **** }
ARM GAS  /tmp/ccvVNijM.s 			page 164


 5122              		.loc 1 2682 3 view .LVU1631
2682:./FWLIB/src/stm32f10x_tim.c **** }
 5123              		.loc 1 2682 14 is_stmt 0 view .LVU1632
 5124 0000 C943     		mvns	r1, r1
 5125              	.LVL484:
2682:./FWLIB/src/stm32f10x_tim.c **** }
 5126              		.loc 1 2682 14 view .LVU1633
 5127 0002 89B2     		uxth	r1, r1
 5128              	.LVL485:
2682:./FWLIB/src/stm32f10x_tim.c **** }
 5129              		.loc 1 2682 12 view .LVU1634
 5130 0004 0182     		strh	r1, [r0, #16]	@ movhi
2683:./FWLIB/src/stm32f10x_tim.c **** 
 5131              		.loc 1 2683 1 view .LVU1635
 5132 0006 7047     		bx	lr
 5133              		.cfi_endproc
 5134              	.LFE115:
 5136              		.text
 5137              	.Letext0:
 5138              		.file 2 "/usr/lib/gcc/arm-none-eabi/14.1.0/include/stdint-gcc.h"
 5139              		.file 3 "USER/stm32f10x.h"
 5140              		.file 4 "FWLIB/inc/stm32f10x_tim.h"
 5141              		.file 5 "FWLIB/inc/stm32f10x_rcc.h"
ARM GAS  /tmp/ccvVNijM.s 			page 165


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f10x_tim.c
     /tmp/ccvVNijM.s:19     .text.TI1_Config:00000000 $t
     /tmp/ccvVNijM.s:24     .text.TI1_Config:00000000 TI1_Config
     /tmp/ccvVNijM.s:133    .text.TI1_Config:00000080 $d
     /tmp/ccvVNijM.s:139    .text.TI2_Config:00000000 $t
     /tmp/ccvVNijM.s:144    .text.TI2_Config:00000000 TI2_Config
     /tmp/ccvVNijM.s:271    .text.TI2_Config:00000090 $d
     /tmp/ccvVNijM.s:276    .text.TI3_Config:00000000 $t
     /tmp/ccvVNijM.s:281    .text.TI3_Config:00000000 TI3_Config
     /tmp/ccvVNijM.s:399    .text.TI3_Config:00000084 $d
     /tmp/ccvVNijM.s:405    .text.TI4_Config:00000000 $t
     /tmp/ccvVNijM.s:410    .text.TI4_Config:00000000 TI4_Config
     /tmp/ccvVNijM.s:539    .text.TI4_Config:00000094 $d
     /tmp/ccvVNijM.s:544    .text.TIM_DeInit:00000000 $t
     /tmp/ccvVNijM.s:550    .text.TIM_DeInit:00000000 TIM_DeInit
     /tmp/ccvVNijM.s:907    .text.TIM_DeInit:000001cc $d
     /tmp/ccvVNijM.s:927    .text.TIM_TimeBaseInit:00000000 $t
     /tmp/ccvVNijM.s:933    .text.TIM_TimeBaseInit:00000000 TIM_TimeBaseInit
     /tmp/ccvVNijM.s:1061   .text.TIM_TimeBaseInit:0000008c $d
     /tmp/ccvVNijM.s:1067   .text.TIM_OC1Init:00000000 $t
     /tmp/ccvVNijM.s:1073   .text.TIM_OC1Init:00000000 TIM_OC1Init
     /tmp/ccvVNijM.s:1224   .text.TIM_OC1Init:00000090 $d
     /tmp/ccvVNijM.s:1229   .text.TIM_OC2Init:00000000 $t
     /tmp/ccvVNijM.s:1235   .text.TIM_OC2Init:00000000 TIM_OC2Init
     /tmp/ccvVNijM.s:1395   .text.TIM_OC2Init:00000094 $d
     /tmp/ccvVNijM.s:1400   .text.TIM_OC3Init:00000000 $t
     /tmp/ccvVNijM.s:1406   .text.TIM_OC3Init:00000000 TIM_OC3Init
     /tmp/ccvVNijM.s:1563   .text.TIM_OC3Init:00000090 $d
     /tmp/ccvVNijM.s:1568   .text.TIM_OC4Init:00000000 $t
     /tmp/ccvVNijM.s:1574   .text.TIM_OC4Init:00000000 TIM_OC4Init
     /tmp/ccvVNijM.s:1698   .text.TIM_OC4Init:00000078 $d
     /tmp/ccvVNijM.s:1703   .text.TIM_BDTRConfig:00000000 $t
     /tmp/ccvVNijM.s:1709   .text.TIM_BDTRConfig:00000000 TIM_BDTRConfig
     /tmp/ccvVNijM.s:1762   .text.TIM_TimeBaseStructInit:00000000 $t
     /tmp/ccvVNijM.s:1768   .text.TIM_TimeBaseStructInit:00000000 TIM_TimeBaseStructInit
     /tmp/ccvVNijM.s:1799   .text.TIM_OCStructInit:00000000 $t
     /tmp/ccvVNijM.s:1805   .text.TIM_OCStructInit:00000000 TIM_OCStructInit
     /tmp/ccvVNijM.s:1844   .text.TIM_ICStructInit:00000000 $t
     /tmp/ccvVNijM.s:1850   .text.TIM_ICStructInit:00000000 TIM_ICStructInit
     /tmp/ccvVNijM.s:1881   .text.TIM_BDTRStructInit:00000000 $t
     /tmp/ccvVNijM.s:1887   .text.TIM_BDTRStructInit:00000000 TIM_BDTRStructInit
     /tmp/ccvVNijM.s:1923   .text.TIM_Cmd:00000000 $t
     /tmp/ccvVNijM.s:1929   .text.TIM_Cmd:00000000 TIM_Cmd
     /tmp/ccvVNijM.s:1965   .text.TIM_CtrlPWMOutputs:00000000 $t
     /tmp/ccvVNijM.s:1971   .text.TIM_CtrlPWMOutputs:00000000 TIM_CtrlPWMOutputs
     /tmp/ccvVNijM.s:2006   .text.TIM_ITConfig:00000000 $t
     /tmp/ccvVNijM.s:2012   .text.TIM_ITConfig:00000000 TIM_ITConfig
     /tmp/ccvVNijM.s:2052   .text.TIM_GenerateEvent:00000000 $t
     /tmp/ccvVNijM.s:2058   .text.TIM_GenerateEvent:00000000 TIM_GenerateEvent
     /tmp/ccvVNijM.s:2077   .text.TIM_DMAConfig:00000000 $t
     /tmp/ccvVNijM.s:2083   .text.TIM_DMAConfig:00000000 TIM_DMAConfig
     /tmp/ccvVNijM.s:2106   .text.TIM_DMACmd:00000000 $t
     /tmp/ccvVNijM.s:2112   .text.TIM_DMACmd:00000000 TIM_DMACmd
     /tmp/ccvVNijM.s:2152   .text.TIM_InternalClockConfig:00000000 $t
     /tmp/ccvVNijM.s:2158   .text.TIM_InternalClockConfig:00000000 TIM_InternalClockConfig
     /tmp/ccvVNijM.s:2181   .text.TIM_ETRConfig:00000000 $t
ARM GAS  /tmp/ccvVNijM.s 			page 166


     /tmp/ccvVNijM.s:2187   .text.TIM_ETRConfig:00000000 TIM_ETRConfig
     /tmp/ccvVNijM.s:2230   .text.TIM_ETRClockMode1Config:00000000 $t
     /tmp/ccvVNijM.s:2236   .text.TIM_ETRClockMode1Config:00000000 TIM_ETRClockMode1Config
     /tmp/ccvVNijM.s:2281   .text.TIM_ETRClockMode2Config:00000000 $t
     /tmp/ccvVNijM.s:2287   .text.TIM_ETRClockMode2Config:00000000 TIM_ETRClockMode2Config
     /tmp/ccvVNijM.s:2322   .text.TIM_PrescalerConfig:00000000 $t
     /tmp/ccvVNijM.s:2328   .text.TIM_PrescalerConfig:00000000 TIM_PrescalerConfig
     /tmp/ccvVNijM.s:2350   .text.TIM_CounterModeConfig:00000000 $t
     /tmp/ccvVNijM.s:2356   .text.TIM_CounterModeConfig:00000000 TIM_CounterModeConfig
     /tmp/ccvVNijM.s:2389   .text.TIM_SelectInputTrigger:00000000 $t
     /tmp/ccvVNijM.s:2395   .text.TIM_SelectInputTrigger:00000000 TIM_SelectInputTrigger
     /tmp/ccvVNijM.s:2428   .text.TIM_ITRxExternalClockConfig:00000000 $t
     /tmp/ccvVNijM.s:2434   .text.TIM_ITRxExternalClockConfig:00000000 TIM_ITRxExternalClockConfig
     /tmp/ccvVNijM.s:2467   .text.TIM_TIxExternalClockConfig:00000000 $t
     /tmp/ccvVNijM.s:2473   .text.TIM_TIxExternalClockConfig:00000000 TIM_TIxExternalClockConfig
     /tmp/ccvVNijM.s:2535   .text.TIM_EncoderInterfaceConfig:00000000 $t
     /tmp/ccvVNijM.s:2541   .text.TIM_EncoderInterfaceConfig:00000000 TIM_EncoderInterfaceConfig
     /tmp/ccvVNijM.s:2630   .text.TIM_ForcedOC1Config:00000000 $t
     /tmp/ccvVNijM.s:2636   .text.TIM_ForcedOC1Config:00000000 TIM_ForcedOC1Config
     /tmp/ccvVNijM.s:2669   .text.TIM_ForcedOC2Config:00000000 $t
     /tmp/ccvVNijM.s:2675   .text.TIM_ForcedOC2Config:00000000 TIM_ForcedOC2Config
     /tmp/ccvVNijM.s:2713   .text.TIM_ForcedOC3Config:00000000 $t
     /tmp/ccvVNijM.s:2719   .text.TIM_ForcedOC3Config:00000000 TIM_ForcedOC3Config
     /tmp/ccvVNijM.s:2752   .text.TIM_ForcedOC4Config:00000000 $t
     /tmp/ccvVNijM.s:2758   .text.TIM_ForcedOC4Config:00000000 TIM_ForcedOC4Config
     /tmp/ccvVNijM.s:2796   .text.TIM_ARRPreloadConfig:00000000 $t
     /tmp/ccvVNijM.s:2802   .text.TIM_ARRPreloadConfig:00000000 TIM_ARRPreloadConfig
     /tmp/ccvVNijM.s:2838   .text.TIM_SelectCOM:00000000 $t
     /tmp/ccvVNijM.s:2844   .text.TIM_SelectCOM:00000000 TIM_SelectCOM
     /tmp/ccvVNijM.s:2880   .text.TIM_SelectCCDMA:00000000 $t
     /tmp/ccvVNijM.s:2886   .text.TIM_SelectCCDMA:00000000 TIM_SelectCCDMA
     /tmp/ccvVNijM.s:2922   .text.TIM_CCPreloadControl:00000000 $t
     /tmp/ccvVNijM.s:2928   .text.TIM_CCPreloadControl:00000000 TIM_CCPreloadControl
     /tmp/ccvVNijM.s:2964   .text.TIM_OC1PreloadConfig:00000000 $t
     /tmp/ccvVNijM.s:2970   .text.TIM_OC1PreloadConfig:00000000 TIM_OC1PreloadConfig
     /tmp/ccvVNijM.s:3003   .text.TIM_OC2PreloadConfig:00000000 $t
     /tmp/ccvVNijM.s:3009   .text.TIM_OC2PreloadConfig:00000000 TIM_OC2PreloadConfig
     /tmp/ccvVNijM.s:3047   .text.TIM_OC3PreloadConfig:00000000 $t
     /tmp/ccvVNijM.s:3053   .text.TIM_OC3PreloadConfig:00000000 TIM_OC3PreloadConfig
     /tmp/ccvVNijM.s:3086   .text.TIM_OC4PreloadConfig:00000000 $t
     /tmp/ccvVNijM.s:3092   .text.TIM_OC4PreloadConfig:00000000 TIM_OC4PreloadConfig
     /tmp/ccvVNijM.s:3130   .text.TIM_OC1FastConfig:00000000 $t
     /tmp/ccvVNijM.s:3136   .text.TIM_OC1FastConfig:00000000 TIM_OC1FastConfig
     /tmp/ccvVNijM.s:3169   .text.TIM_OC2FastConfig:00000000 $t
     /tmp/ccvVNijM.s:3175   .text.TIM_OC2FastConfig:00000000 TIM_OC2FastConfig
     /tmp/ccvVNijM.s:3213   .text.TIM_OC3FastConfig:00000000 $t
     /tmp/ccvVNijM.s:3219   .text.TIM_OC3FastConfig:00000000 TIM_OC3FastConfig
     /tmp/ccvVNijM.s:3252   .text.TIM_OC4FastConfig:00000000 $t
     /tmp/ccvVNijM.s:3258   .text.TIM_OC4FastConfig:00000000 TIM_OC4FastConfig
     /tmp/ccvVNijM.s:3296   .text.TIM_ClearOC1Ref:00000000 $t
     /tmp/ccvVNijM.s:3302   .text.TIM_ClearOC1Ref:00000000 TIM_ClearOC1Ref
     /tmp/ccvVNijM.s:3335   .text.TIM_ClearOC2Ref:00000000 $t
     /tmp/ccvVNijM.s:3341   .text.TIM_ClearOC2Ref:00000000 TIM_ClearOC2Ref
     /tmp/ccvVNijM.s:3378   .text.TIM_ClearOC3Ref:00000000 $t
     /tmp/ccvVNijM.s:3384   .text.TIM_ClearOC3Ref:00000000 TIM_ClearOC3Ref
     /tmp/ccvVNijM.s:3417   .text.TIM_ClearOC4Ref:00000000 $t
     /tmp/ccvVNijM.s:3423   .text.TIM_ClearOC4Ref:00000000 TIM_ClearOC4Ref
ARM GAS  /tmp/ccvVNijM.s 			page 167


     /tmp/ccvVNijM.s:3460   .text.TIM_OC1PolarityConfig:00000000 $t
     /tmp/ccvVNijM.s:3466   .text.TIM_OC1PolarityConfig:00000000 TIM_OC1PolarityConfig
     /tmp/ccvVNijM.s:3499   .text.TIM_OC1NPolarityConfig:00000000 $t
     /tmp/ccvVNijM.s:3505   .text.TIM_OC1NPolarityConfig:00000000 TIM_OC1NPolarityConfig
     /tmp/ccvVNijM.s:3538   .text.TIM_OC2PolarityConfig:00000000 $t
     /tmp/ccvVNijM.s:3544   .text.TIM_OC2PolarityConfig:00000000 TIM_OC2PolarityConfig
     /tmp/ccvVNijM.s:3582   .text.TIM_OC2NPolarityConfig:00000000 $t
     /tmp/ccvVNijM.s:3588   .text.TIM_OC2NPolarityConfig:00000000 TIM_OC2NPolarityConfig
     /tmp/ccvVNijM.s:3626   .text.TIM_OC3PolarityConfig:00000000 $t
     /tmp/ccvVNijM.s:3632   .text.TIM_OC3PolarityConfig:00000000 TIM_OC3PolarityConfig
     /tmp/ccvVNijM.s:3670   .text.TIM_OC3NPolarityConfig:00000000 $t
     /tmp/ccvVNijM.s:3676   .text.TIM_OC3NPolarityConfig:00000000 TIM_OC3NPolarityConfig
     /tmp/ccvVNijM.s:3714   .text.TIM_OC4PolarityConfig:00000000 $t
     /tmp/ccvVNijM.s:3720   .text.TIM_OC4PolarityConfig:00000000 TIM_OC4PolarityConfig
     /tmp/ccvVNijM.s:3758   .text.TIM_CCxCmd:00000000 $t
     /tmp/ccvVNijM.s:3764   .text.TIM_CCxCmd:00000000 TIM_CCxCmd
     /tmp/ccvVNijM.s:3813   .text.TIM_CCxNCmd:00000000 $t
     /tmp/ccvVNijM.s:3819   .text.TIM_CCxNCmd:00000000 TIM_CCxNCmd
     /tmp/ccvVNijM.s:3868   .text.TIM_SelectOCxM:00000000 $t
     /tmp/ccvVNijM.s:3874   .text.TIM_SelectOCxM:00000000 TIM_SelectOCxM
     /tmp/ccvVNijM.s:3970   .text.TIM_UpdateDisableConfig:00000000 $t
     /tmp/ccvVNijM.s:3976   .text.TIM_UpdateDisableConfig:00000000 TIM_UpdateDisableConfig
     /tmp/ccvVNijM.s:4012   .text.TIM_UpdateRequestConfig:00000000 $t
     /tmp/ccvVNijM.s:4018   .text.TIM_UpdateRequestConfig:00000000 TIM_UpdateRequestConfig
     /tmp/ccvVNijM.s:4054   .text.TIM_SelectHallSensor:00000000 $t
     /tmp/ccvVNijM.s:4060   .text.TIM_SelectHallSensor:00000000 TIM_SelectHallSensor
     /tmp/ccvVNijM.s:4096   .text.TIM_SelectOnePulseMode:00000000 $t
     /tmp/ccvVNijM.s:4102   .text.TIM_SelectOnePulseMode:00000000 TIM_SelectOnePulseMode
     /tmp/ccvVNijM.s:4133   .text.TIM_SelectOutputTrigger:00000000 $t
     /tmp/ccvVNijM.s:4139   .text.TIM_SelectOutputTrigger:00000000 TIM_SelectOutputTrigger
     /tmp/ccvVNijM.s:4170   .text.TIM_SelectSlaveMode:00000000 $t
     /tmp/ccvVNijM.s:4176   .text.TIM_SelectSlaveMode:00000000 TIM_SelectSlaveMode
     /tmp/ccvVNijM.s:4207   .text.TIM_SelectMasterSlaveMode:00000000 $t
     /tmp/ccvVNijM.s:4213   .text.TIM_SelectMasterSlaveMode:00000000 TIM_SelectMasterSlaveMode
     /tmp/ccvVNijM.s:4244   .text.TIM_SetCounter:00000000 $t
     /tmp/ccvVNijM.s:4250   .text.TIM_SetCounter:00000000 TIM_SetCounter
     /tmp/ccvVNijM.s:4268   .text.TIM_SetAutoreload:00000000 $t
     /tmp/ccvVNijM.s:4274   .text.TIM_SetAutoreload:00000000 TIM_SetAutoreload
     /tmp/ccvVNijM.s:4292   .text.TIM_SetCompare1:00000000 $t
     /tmp/ccvVNijM.s:4298   .text.TIM_SetCompare1:00000000 TIM_SetCompare1
     /tmp/ccvVNijM.s:4316   .text.TIM_SetCompare2:00000000 $t
     /tmp/ccvVNijM.s:4322   .text.TIM_SetCompare2:00000000 TIM_SetCompare2
     /tmp/ccvVNijM.s:4340   .text.TIM_SetCompare3:00000000 $t
     /tmp/ccvVNijM.s:4346   .text.TIM_SetCompare3:00000000 TIM_SetCompare3
     /tmp/ccvVNijM.s:4364   .text.TIM_SetCompare4:00000000 $t
     /tmp/ccvVNijM.s:4370   .text.TIM_SetCompare4:00000000 TIM_SetCompare4
     /tmp/ccvVNijM.s:4388   .text.TIM_SetIC1Prescaler:00000000 $t
     /tmp/ccvVNijM.s:4394   .text.TIM_SetIC1Prescaler:00000000 TIM_SetIC1Prescaler
     /tmp/ccvVNijM.s:4425   .text.TIM_SetIC2Prescaler:00000000 $t
     /tmp/ccvVNijM.s:4431   .text.TIM_SetIC2Prescaler:00000000 TIM_SetIC2Prescaler
     /tmp/ccvVNijM.s:4467   .text.TIM_PWMIConfig:00000000 $t
     /tmp/ccvVNijM.s:4473   .text.TIM_PWMIConfig:00000000 TIM_PWMIConfig
     /tmp/ccvVNijM.s:4590   .text.TIM_SetIC3Prescaler:00000000 $t
     /tmp/ccvVNijM.s:4596   .text.TIM_SetIC3Prescaler:00000000 TIM_SetIC3Prescaler
     /tmp/ccvVNijM.s:4627   .text.TIM_SetIC4Prescaler:00000000 $t
     /tmp/ccvVNijM.s:4633   .text.TIM_SetIC4Prescaler:00000000 TIM_SetIC4Prescaler
     /tmp/ccvVNijM.s:4669   .text.TIM_ICInit:00000000 $t
ARM GAS  /tmp/ccvVNijM.s 			page 168


     /tmp/ccvVNijM.s:4675   .text.TIM_ICInit:00000000 TIM_ICInit
     /tmp/ccvVNijM.s:4784   .text.TIM_SetClockDivision:00000000 $t
     /tmp/ccvVNijM.s:4790   .text.TIM_SetClockDivision:00000000 TIM_SetClockDivision
     /tmp/ccvVNijM.s:4821   .text.TIM_GetCapture1:00000000 $t
     /tmp/ccvVNijM.s:4827   .text.TIM_GetCapture1:00000000 TIM_GetCapture1
     /tmp/ccvVNijM.s:4847   .text.TIM_GetCapture2:00000000 $t
     /tmp/ccvVNijM.s:4853   .text.TIM_GetCapture2:00000000 TIM_GetCapture2
     /tmp/ccvVNijM.s:4873   .text.TIM_GetCapture3:00000000 $t
     /tmp/ccvVNijM.s:4879   .text.TIM_GetCapture3:00000000 TIM_GetCapture3
     /tmp/ccvVNijM.s:4899   .text.TIM_GetCapture4:00000000 $t
     /tmp/ccvVNijM.s:4905   .text.TIM_GetCapture4:00000000 TIM_GetCapture4
     /tmp/ccvVNijM.s:4925   .text.TIM_GetCounter:00000000 $t
     /tmp/ccvVNijM.s:4931   .text.TIM_GetCounter:00000000 TIM_GetCounter
     /tmp/ccvVNijM.s:4951   .text.TIM_GetPrescaler:00000000 $t
     /tmp/ccvVNijM.s:4957   .text.TIM_GetPrescaler:00000000 TIM_GetPrescaler
     /tmp/ccvVNijM.s:4977   .text.TIM_GetFlagStatus:00000000 $t
     /tmp/ccvVNijM.s:4983   .text.TIM_GetFlagStatus:00000000 TIM_GetFlagStatus
     /tmp/ccvVNijM.s:5017   .text.TIM_ClearFlag:00000000 $t
     /tmp/ccvVNijM.s:5023   .text.TIM_ClearFlag:00000000 TIM_ClearFlag
     /tmp/ccvVNijM.s:5048   .text.TIM_GetITStatus:00000000 $t
     /tmp/ccvVNijM.s:5054   .text.TIM_GetITStatus:00000000 TIM_GetITStatus
     /tmp/ccvVNijM.s:5106   .text.TIM_ClearITPendingBit:00000000 $t
     /tmp/ccvVNijM.s:5112   .text.TIM_ClearITPendingBit:00000000 TIM_ClearITPendingBit

UNDEFINED SYMBOLS
RCC_APB2PeriphResetCmd
RCC_APB1PeriphResetCmd
